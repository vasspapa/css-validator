/* Generated By:JavaCC: Do not edit this line. CssParserTokenManager.java */
package org.w3c.css.parser.analyzer;
import java.io.InputStream;
import java.util.Vector;
import java.util.Enumeration;
import java.net.URL;
import org.w3c.css.values.CssValue;
import org.w3c.css.values.CssExpression;
import org.w3c.css.values.CssString;
import org.w3c.css.values.CssURL;
import org.w3c.css.values.CssLength;
import org.w3c.css.values.CssNumber;
import org.w3c.css.values.CssColor;
import org.w3c.css.values.CssIdent;
import org.w3c.css.values.CssPercentage;
import org.w3c.css.values.CssFrequency;
import org.w3c.css.values.CssTime;
import org.w3c.css.values.CssDate;
import org.w3c.css.values.CssAngle;
import org.w3c.css.values.CssFunction;
import org.w3c.css.values.CssUnicodeRange;
import org.w3c.css.values.CssResolution;
import org.w3c.css.properties.css1.CssProperty;
import org.w3c.css.parser.Frame;
import org.w3c.css.util.ApplContext;
import org.w3c.css.parser.CssError;
import org.w3c.css.parser.CssSelectors;
import org.w3c.css.parser.CssParseException;
import org.w3c.css.parser.AtRule;
import org.w3c.css.parser.AtRuleMedia;
import org.w3c.css.parser.AtRuleFontFace;
import org.w3c.css.parser.AtRulePage;
import org.w3c.css.parser.AtRulePreference;
import org.w3c.css.parser.AtRulePhoneticAlphabet;
import org.w3c.css.properties.svg.AtRuleColorProfile;
import org.w3c.css.util.InvalidParamException;
import org.w3c.css.util.Util;
import org.w3c.css.util.Messages;
import org.w3c.css.css.StyleSheetCom;
import org.w3c.css.selectors.AdjacentSelector;
import org.w3c.css.selectors.AttributeSelector;
import org.w3c.css.selectors.ChildSelector;
import org.w3c.css.selectors.ClassSelector;
import org.w3c.css.selectors.DescendantSelector;
import org.w3c.css.selectors.IdSelector;
import org.w3c.css.selectors.TypeSelector;
import org.w3c.css.selectors.UniversalSelector;
import org.w3c.css.selectors.attributes.AttributeAny;
import org.w3c.css.selectors.attributes.AttributeBegin;
import org.w3c.css.selectors.attributes.AttributeExact;
import org.w3c.css.selectors.attributes.AttributeOneOf;
import org.w3c.css.selectors.attributes.AttributeStart;
import org.w3c.css.selectors.attributes.AttributeSubstr;
import org.w3c.css.selectors.attributes.AttributeSuffix;

public class CssParserTokenManager implements CssParserConstants
{
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x80002000000L) != 0L)
            return 127;
         if ((active1 & 0x1fff0L) != 0L)
            return 37;
         if ((active0 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 32;
            return -1;
         }
         if ((active0 & 0x2000000000000L) != 0L)
            return 362;
         if ((active0 & 0x200000000L) != 0L || (active1 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 36;
            return 443;
         }
         return -1;
      case 1:
         if ((active0 & 0x200000000L) != 0L || (active1 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 36;
            jjmatchedPos = 1;
            return 443;
         }
         if ((active1 & 0x1fff0L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 1;
            return 444;
         }
         if ((active0 & 0x4000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 32;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      case 2:
         if ((active1 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 36;
            jjmatchedPos = 2;
            return 443;
         }
         if ((active0 & 0x200000000L) != 0L)
            return 443;
         if ((active1 & 0x1fff0L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 2;
            return 444;
         }
         return -1;
      case 3:
         if ((active1 & 0x800L) != 0L)
            return 444;
         if ((active1 & 0x20000000L) != 0L)
         {
            jjmatchedKind = 36;
            jjmatchedPos = 3;
            return 443;
         }
         if ((active1 & 0x1f7f0L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 3;
            return 444;
         }
         return -1;
      case 4:
         if ((active1 & 0x4080L) != 0L)
            return 444;
         if ((active1 & 0x1b770L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 4;
            return 444;
         }
         return -1;
      case 5:
         if ((active1 & 0x1040L) != 0L)
            return 444;
         if ((active1 & 0x1a730L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 5;
            return 444;
         }
         return -1;
      case 6:
         if ((active1 & 0x2020L) != 0L)
            return 444;
         if ((active1 & 0x18710L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 6;
            return 444;
         }
         return -1;
      case 7:
         if ((active1 & 0x10700L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 7;
            return 444;
         }
         if ((active1 & 0x8010L) != 0L)
            return 444;
         return -1;
      case 8:
         if ((active1 & 0x10700L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 8;
            return 444;
         }
         return -1;
      case 9:
         if ((active1 & 0x100L) != 0L)
            return 444;
         if ((active1 & 0x10600L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 9;
            return 444;
         }
         return -1;
      case 10:
         if ((active1 & 0x10400L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 10;
            return 444;
         }
         if ((active1 & 0x200L) != 0L)
            return 444;
         return -1;
      case 11:
         if ((active1 & 0x10400L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 11;
            return 444;
         }
         return -1;
      case 12:
         if ((active1 & 0x10400L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 12;
            return 444;
         }
         return -1;
      case 13:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 13;
            return 444;
         }
         if ((active1 & 0x400L) != 0L)
            return 444;
         return -1;
      case 14:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 14;
            return 444;
         }
         return -1;
      case 15:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 15;
            return 444;
         }
         return -1;
      case 16:
         if ((active1 & 0x10000L) != 0L)
         {
            jjmatchedKind = 81;
            jjmatchedPos = 16;
            return 444;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x10000000000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 51);
      case 41:
         return jjStopAtPos(0, 50);
      case 42:
         jjmatchedKind = 48;
         return jjMoveStringLiteralDfa1_0(0x20000000000L, 0x0L);
      case 45:
         jjmatchedKind = 43;
         return jjMoveStringLiteralDfa1_0(0x2000000L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 49, 362);
      case 47:
         jjmatchedKind = 45;
         return jjMoveStringLiteralDfa1_0(0x2L, 0x0L);
      case 58:
         jjmatchedKind = 52;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x8L);
      case 59:
         return jjStopAtPos(0, 44);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x1000000L, 0x0L);
      case 61:
         return jjStopAtPos(0, 42);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1fff0L);
      case 91:
         return jjStopAtPos(0, 46);
      case 93:
         return jjStopAtPos(0, 47);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x8000000000L, 0x0L);
      case 65:
      case 97:
         return jjMoveStringLiteralDfa1_0(0x200000000L, 0x0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x20000000L);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x8000000L, 0x0L);
      case 125:
         return jjStopAtPos(0, 38);
      case 126:
         return jjMoveStringLiteralDfa1_0(0x4000000L, 0x0L);
      default :
         return jjMoveNfa_0(5, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000L, active1, 0L);
      case 42:
         if ((active0 & 0x2L) != 0L)
            return jjStopAtPos(1, 1);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000L, active1, 0L);
      case 58:
         if ((active1 & 0x8L) != 0L)
            return jjStopAtPos(1, 67);
         break;
      case 61:
         if ((active0 & 0x4000000L) != 0L)
            return jjStopAtPos(1, 26);
         else if ((active0 & 0x8000000L) != 0L)
            return jjStopAtPos(1, 27);
         else if ((active0 & 0x8000000000L) != 0L)
            return jjStopAtPos(1, 39);
         else if ((active0 & 0x10000000000L) != 0L)
            return jjStopAtPos(1, 40);
         else if ((active0 & 0x20000000000L) != 0L)
            return jjStopAtPos(1, 41);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20000000L);
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8410L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x100L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x20L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x40L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10280L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1000L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x800L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000000L, active1, 0L);
      case 62:
         if ((active0 & 0x2000000L) != 0L)
            return jjStopAtPos(2, 25);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x80L);
      case 68:
      case 100:
         if ((active0 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(2, 33, 443);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4040L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x10010L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x1000L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20000000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0xad00L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x200L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x1000000L) != 0L)
            return jjStopAtPos(3, 24);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4000L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20001080L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x400L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10000L);
      case 80:
      case 112:
         if ((active1 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(3, 75, 444);
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2000L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private final int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 40:
         if ((active1 & 0x20000000L) != 0L)
            return jjStopAtPos(4, 93);
         break;
      case 69:
      case 101:
         if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(4, 71, 444);
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active1, 0x200L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active1, 0x1000L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active1, 0x40L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active1, 0x18000L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active1, 0x420L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active1, 0x10L);
      case 84:
      case 116:
         if ((active1 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(4, 78, 444);
         return jjMoveStringLiteralDfa5_0(active1, 0x2100L);
      default :
         break;
   }
   return jjStartNfa_0(3, 0L, active1);
}
private final int jjMoveStringLiteralDfa5_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(3, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active1, 0x100L);
      case 65:
      case 97:
         if ((active1 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(5, 70, 444);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active1, 0x10200L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active1, 0x2000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active1, 0x420L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active1, 0x10L);
      case 84:
      case 116:
         if ((active1 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(5, 76, 444);
         return jjMoveStringLiteralDfa6_0(active1, 0x8000L);
      default :
         break;
   }
   return jjStartNfa_0(4, 0L, active1);
}
private final int jjMoveStringLiteralDfa6_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(4, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active1, 0x400L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active1, 0x8010L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active1, 0x100L);
      case 77:
      case 109:
         if ((active1 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(6, 77, 444);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active1, 0x200L);
      case 84:
      case 116:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(6, 69, 444);
         return jjMoveStringLiteralDfa7_0(active1, 0x10000L);
      default :
         break;
   }
   return jjStartNfa_0(5, 0L, active1);
}
private final int jjMoveStringLiteralDfa7_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(5, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, 0L, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active1, 0x100L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active1, 0x200L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active1, 0x10000L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active1, 0x400L);
      case 82:
      case 114:
         if ((active1 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(7, 79, 444);
         break;
      case 84:
      case 116:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(7, 68, 444);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, 0L, active1);
}
private final int jjMoveStringLiteralDfa8_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(6, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, 0L, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active1, 0x10100L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active1, 0x200L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active1, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(7, 0L, active1);
}
private final int jjMoveStringLiteralDfa9_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(7, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, 0L, active1);
      return 9;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active1, 0x10000L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active1, 0x200L);
      case 69:
      case 101:
         if ((active1 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(9, 72, 444);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active1, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(8, 0L, active1);
}
private final int jjMoveStringLiteralDfa10_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(8, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, 0L, active1);
      return 10;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active1, 0x10000L);
      case 69:
      case 101:
         if ((active1 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(10, 73, 444);
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active1, 0x400L);
      default :
         break;
   }
   return jjStartNfa_0(9, 0L, active1);
}
private final int jjMoveStringLiteralDfa11_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(9, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, 0L, active1);
      return 11;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active1, 0x400L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active1, 0x10000L);
      default :
         break;
   }
   return jjStartNfa_0(10, 0L, active1);
}
private final int jjMoveStringLiteralDfa12_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(10, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, 0L, active1);
      return 12;
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa13_0(active1, 0x400L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa13_0(active1, 0x10000L);
      default :
         break;
   }
   return jjStartNfa_0(11, 0L, active1);
}
private final int jjMoveStringLiteralDfa13_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(11, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, 0L, active1);
      return 13;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active1 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(13, 74, 444);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa14_0(active1, 0x10000L);
      default :
         break;
   }
   return jjStartNfa_0(12, 0L, active1);
}
private final int jjMoveStringLiteralDfa14_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(12, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, 0L, active1);
      return 14;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa15_0(active1, 0x10000L);
      default :
         break;
   }
   return jjStartNfa_0(13, 0L, active1);
}
private final int jjMoveStringLiteralDfa15_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(13, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, 0L, active1);
      return 15;
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa16_0(active1, 0x10000L);
      default :
         break;
   }
   return jjStartNfa_0(14, 0L, active1);
}
private final int jjMoveStringLiteralDfa16_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(14, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, 0L, active1);
      return 16;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa17_0(active1, 0x10000L);
      default :
         break;
   }
   return jjStartNfa_0(15, 0L, active1);
}
private final int jjMoveStringLiteralDfa17_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(15, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(16, 0L, active1);
      return 17;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active1 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(17, 80, 444);
         break;
      default :
         break;
   }
   return jjStartNfa_0(16, 0L, active1);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 443;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 362:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     jjCheckNAdd(361);
                  }
                  else if (curChar == 45)
                     jjCheckNAddTwoStates(363, 376);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(359, 360);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(324, 325);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(319, 323);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(315, 318);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(312, 314);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(309, 311);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(3, 5);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(6, 9);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(292, 294);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(289, 291);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(286, 288);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(283, 285);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(280, 282);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(277, 279);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(275, 276);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(272, 274);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(269, 271);
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     jjCheckNAddStates(10, 88);
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 23)
                        kind = 23;
                     jjCheckNAddStates(89, 99);
                  }
                  else if (curChar == 46)
                     jjCheckNAddStates(100, 121);
                  else if (curChar == 45)
                     jjAddStates(122, 125);
                  else if (curChar == 39)
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAddStates(126, 130);
                  }
                  else if (curChar == 34)
                  {
                     if (kind > 35)
                        kind = 35;
                     jjCheckNAddStates(131, 135);
                  }
                  else if (curChar == 33)
                     jjCheckNAddTwoStates(26, 35);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(6, 7);
                  else if (curChar == 44)
                  {
                     if (kind > 31)
                        kind = 31;
                  }
                  else if (curChar == 62)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  break;
               case 37:
                  if (curChar == 45)
                     jjAddStates(136, 137);
                  break;
               case 444:
               case 39:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(39, 40);
                  break;
               case 443:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(138, 140);
                  else if (curChar == 40)
                  {
                     if (kind > 94)
                        kind = 94;
                  }
                  if ((0x3ff200000000000L & l) != 0L)
                  {
                     if (kind > 36)
                        kind = 36;
                     jjCheckNAddTwoStates(128, 129);
                  }
                  break;
               case 1:
                  if (curChar == 43 && kind > 29)
                     kind = 29;
                  break;
               case 2:
                  if (curChar == 62 && kind > 30)
                     kind = 30;
                  break;
               case 3:
                  if (curChar == 44 && kind > 31)
                     kind = 31;
                  break;
               case 6:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddTwoStates(6, 7);
                  break;
               case 8:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddTwoStates(6, 7);
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(141, 145);
                  break;
               case 10:
                  if (curChar != 10)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddTwoStates(6, 7);
                  break;
               case 11:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 12:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddTwoStates(6, 7);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(146, 153);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(154, 157);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(158, 162);
                  break;
               case 16:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(163, 168);
                  break;
               case 17:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(169, 175);
                  break;
               case 25:
                  if (curChar == 33)
                     jjCheckNAddTwoStates(26, 35);
                  break;
               case 26:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(26, 35);
                  break;
               case 41:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(39, 40);
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(176, 180);
                  break;
               case 43:
                  if (curChar != 10)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(39, 40);
                  break;
               case 44:
               case 53:
                  if (curChar == 13)
                     jjCheckNAdd(43);
                  break;
               case 45:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(39, 40);
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(181, 188);
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(189, 192);
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(193, 197);
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(198, 203);
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(204, 210);
                  break;
               case 52:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(211, 215);
                  break;
               case 54:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(216, 223);
                  break;
               case 55:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(224, 227);
                  break;
               case 56:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(228, 232);
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(233, 238);
                  break;
               case 58:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(239, 245);
                  break;
               case 59:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 23)
                     kind = 23;
                  jjCheckNAddStates(89, 99);
                  break;
               case 60:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 23)
                     kind = 23;
                  jjCheckNAdd(60);
                  break;
               case 61:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(61, 0);
                  break;
               case 62:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(62, 1);
                  break;
               case 63:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(63, 2);
                  break;
               case 64:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(64, 3);
                  break;
               case 65:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(65, 4);
                  break;
               case 66:
                  if (curChar != 34)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(131, 135);
                  break;
               case 67:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     jjCheckNAddStates(246, 248);
                  break;
               case 68:
                  if (curChar == 34 && kind > 34)
                     kind = 34;
                  break;
               case 70:
                  if ((0x3400L & l) != 0L)
                     jjCheckNAddStates(246, 248);
                  break;
               case 71:
                  if (curChar == 10)
                     jjCheckNAddStates(246, 248);
                  break;
               case 72:
               case 75:
                  if (curChar == 13)
                     jjCheckNAdd(71);
                  break;
               case 73:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(246, 248);
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(249, 254);
                  break;
               case 76:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(246, 248);
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(255, 263);
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(264, 268);
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(269, 274);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(275, 281);
                  break;
               case 81:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(282, 289);
                  break;
               case 82:
                  if ((0xfffffffbffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(82, 83);
                  break;
               case 84:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(82, 83);
                  break;
               case 85:
                  if (curChar != 10)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(82, 83);
                  break;
               case 86:
               case 89:
                  if (curChar == 13)
                     jjCheckNAdd(85);
                  break;
               case 87:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(82, 83);
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(290, 294);
                  break;
               case 90:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(82, 83);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(295, 302);
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(303, 306);
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(307, 311);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(312, 317);
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(318, 324);
                  break;
               case 96:
                  if (curChar != 39)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(126, 130);
                  break;
               case 97:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     jjCheckNAddStates(325, 327);
                  break;
               case 98:
                  if (curChar == 39 && kind > 34)
                     kind = 34;
                  break;
               case 100:
                  if ((0x3400L & l) != 0L)
                     jjCheckNAddStates(325, 327);
                  break;
               case 101:
                  if (curChar == 10)
                     jjCheckNAddStates(325, 327);
                  break;
               case 102:
               case 105:
                  if (curChar == 13)
                     jjCheckNAdd(101);
                  break;
               case 103:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(325, 327);
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(328, 333);
                  break;
               case 106:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(325, 327);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(334, 342);
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(343, 347);
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(348, 353);
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(354, 360);
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(361, 368);
                  break;
               case 112:
                  if ((0xffffff7fffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(112, 113);
                  break;
               case 114:
                  if ((0x3400L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(112, 113);
                  break;
               case 115:
                  if (curChar != 10)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(112, 113);
                  break;
               case 116:
               case 119:
                  if (curChar == 13)
                     jjCheckNAdd(115);
                  break;
               case 117:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(112, 113);
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(369, 373);
                  break;
               case 120:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(112, 113);
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(374, 381);
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(382, 385);
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(386, 390);
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(391, 396);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(397, 403);
                  break;
               case 126:
                  if (curChar == 45)
                     jjAddStates(122, 125);
                  break;
               case 128:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(128, 129);
                  break;
               case 130:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(128, 129);
                  break;
               case 131:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(404, 408);
                  break;
               case 132:
                  if (curChar != 10)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(128, 129);
                  break;
               case 133:
               case 164:
                  if (curChar == 13)
                     jjCheckNAdd(132);
                  break;
               case 134:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(128, 129);
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(409, 416);
                  break;
               case 136:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(417, 420);
                  break;
               case 137:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(421, 425);
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(426, 431);
                  break;
               case 139:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(432, 438);
                  break;
               case 141:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(138, 140);
                  break;
               case 142:
                  if (curChar == 40 && kind > 94)
                     kind = 94;
                  break;
               case 144:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(138, 140);
                  break;
               case 145:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(439, 444);
                  break;
               case 146:
                  if (curChar == 10)
                     jjCheckNAddStates(138, 140);
                  break;
               case 147:
               case 156:
                  if (curChar == 13)
                     jjCheckNAdd(146);
                  break;
               case 148:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(138, 140);
                  break;
               case 149:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(445, 453);
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(454, 458);
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(459, 464);
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(465, 471);
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(472, 479);
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(480, 485);
                  break;
               case 157:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(486, 494);
                  break;
               case 158:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(495, 499);
                  break;
               case 159:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(500, 505);
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(506, 512);
                  break;
               case 161:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(513, 520);
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(521, 525);
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(526, 533);
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(534, 537);
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(538, 542);
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(543, 548);
                  break;
               case 169:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(549, 555);
                  break;
               case 172:
                  if (curChar == 40)
                     jjCheckNAddStates(556, 561);
                  break;
               case 173:
                  if (curChar == 34)
                     jjCheckNAddStates(562, 564);
                  break;
               case 174:
                  if ((0xfffffffbffffcbffL & l) != 0L)
                     jjCheckNAddStates(562, 564);
                  break;
               case 175:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(176, 177);
                  break;
               case 176:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(176, 177);
                  break;
               case 177:
                  if (curChar == 41 && kind > 54)
                     kind = 54;
                  break;
               case 179:
                  if ((0x3400L & l) != 0L)
                     jjCheckNAddStates(562, 564);
                  break;
               case 180:
                  if (curChar == 10)
                     jjCheckNAddStates(562, 564);
                  break;
               case 181:
               case 184:
                  if (curChar == 13)
                     jjCheckNAdd(180);
                  break;
               case 182:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(562, 564);
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(565, 570);
                  break;
               case 185:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(562, 564);
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(571, 579);
                  break;
               case 187:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(580, 584);
                  break;
               case 188:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(585, 590);
                  break;
               case 189:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(591, 597);
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(598, 605);
                  break;
               case 191:
                  if (curChar == 39)
                     jjCheckNAddStates(606, 608);
                  break;
               case 192:
                  if ((0xffffff7fffffcbffL & l) != 0L)
                     jjCheckNAddStates(606, 608);
                  break;
               case 193:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(176, 177);
                  break;
               case 195:
                  if ((0x3400L & l) != 0L)
                     jjCheckNAddStates(606, 608);
                  break;
               case 196:
                  if (curChar == 10)
                     jjCheckNAddStates(606, 608);
                  break;
               case 197:
               case 200:
                  if (curChar == 13)
                     jjCheckNAdd(196);
                  break;
               case 198:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(606, 608);
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(609, 614);
                  break;
               case 201:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(606, 608);
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(615, 623);
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(624, 628);
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(629, 634);
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(635, 641);
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(642, 649);
                  break;
               case 207:
                  if ((0xffffec7a00000000L & l) != 0L)
                     jjCheckNAddStates(650, 653);
                  break;
               case 209:
                  if ((0xfc00ffffffffcbffL & l) != 0L)
                     jjCheckNAddStates(650, 653);
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(654, 659);
                  break;
               case 211:
                  if (curChar == 10)
                     jjCheckNAddStates(650, 653);
                  break;
               case 212:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(650, 653);
                  break;
               case 214:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(660, 668);
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(669, 673);
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(674, 679);
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(680, 686);
                  break;
               case 218:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(687, 694);
                  break;
               case 219:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(695, 701);
                  break;
               case 222:
                  if (curChar == 43)
                     jjAddStates(702, 703);
                  break;
               case 223:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 224:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(704, 707);
                  break;
               case 225:
                  if (curChar == 63 && kind > 91)
                     kind = 91;
                  break;
               case 226:
               case 242:
               case 246:
               case 249:
               case 252:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAdd(225);
                  break;
               case 227:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddTwoStates(225, 226);
                  break;
               case 228:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(708, 710);
                  break;
               case 229:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjAddStates(711, 716);
                  break;
               case 230:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 231:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 232:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 233:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(234);
                  break;
               case 234:
                  if ((0x3ff000000000000L & l) != 0L && kind > 91)
                     kind = 91;
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 238:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAdd(225);
                  break;
               case 239:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 241:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 243:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 244:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 245:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddTwoStates(225, 246);
                  break;
               case 247:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 248:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(717, 719);
                  break;
               case 250:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddTwoStates(225, 249);
                  break;
               case 251:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(720, 723);
                  break;
               case 253:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddTwoStates(225, 252);
                  break;
               case 254:
                  if (curChar != 63)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(724, 726);
                  break;
               case 255:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(257, 263);
                  break;
               case 257:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 258:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(727, 730);
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAdd(234);
                  break;
               case 261:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddTwoStates(234, 260);
                  break;
               case 262:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(731, 733);
                  break;
               case 263:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(734, 738);
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(257);
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(264, 257);
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(739, 741);
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(742, 745);
                  break;
               case 268:
                  if (curChar == 46)
                     jjCheckNAddStates(100, 121);
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(269, 271);
                  break;
               case 272:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(272, 274);
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(275, 276);
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(277, 279);
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(280, 282);
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(283, 285);
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(286, 288);
                  break;
               case 289:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(289, 291);
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(292, 294);
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(6, 9);
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(3, 5);
                  break;
               case 309:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(309, 311);
                  break;
               case 312:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(312, 314);
                  break;
               case 315:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(315, 318);
                  break;
               case 319:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(319, 323);
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(324, 325);
                  break;
               case 325:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(326, 334);
                  break;
               case 326:
                  if (curChar == 46)
                     jjCheckNAdd(327);
                  break;
               case 327:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(327, 328);
                  break;
               case 328:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(329, 331);
                  break;
               case 329:
                  if (curChar == 46)
                     jjCheckNAdd(330);
                  break;
               case 330:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAdd(330);
                  break;
               case 331:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(746, 748);
                  break;
               case 332:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAdd(332);
                  break;
               case 333:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(333, 329);
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(749, 752);
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(335, 328);
                  break;
               case 336:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(336, 326);
                  break;
               case 337:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 339:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(339, 340);
                  break;
               case 341:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(339, 340);
                  break;
               case 342:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(753, 757);
                  break;
               case 343:
                  if (curChar != 10)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(339, 340);
                  break;
               case 344:
               case 353:
                  if (curChar == 13)
                     jjCheckNAdd(343);
                  break;
               case 345:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(339, 340);
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(758, 765);
                  break;
               case 347:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(766, 769);
                  break;
               case 348:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(770, 774);
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(775, 780);
                  break;
               case 350:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(781, 787);
                  break;
               case 352:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(788, 792);
                  break;
               case 354:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(793, 800);
                  break;
               case 355:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(801, 804);
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(805, 809);
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(810, 815);
                  break;
               case 358:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(816, 822);
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(359, 360);
                  break;
               case 360:
                  if (curChar == 37 && kind > 64)
                     kind = 64;
                  break;
               case 361:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAdd(361);
                  break;
               case 364:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(364, 365);
                  break;
               case 366:
                  if ((0xfc00ffffffffcbffL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(364, 365);
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(823, 827);
                  break;
               case 368:
                  if (curChar != 10)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(364, 365);
                  break;
               case 369:
               case 378:
                  if (curChar == 13)
                     jjCheckNAdd(368);
                  break;
               case 370:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(364, 365);
                  break;
               case 371:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(828, 835);
                  break;
               case 372:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(836, 839);
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(840, 844);
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(845, 850);
                  break;
               case 375:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(851, 857);
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(858, 862);
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(863, 870);
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(871, 874);
                  break;
               case 381:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(875, 879);
                  break;
               case 382:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(880, 885);
                  break;
               case 383:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(886, 892);
                  break;
               case 385:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(10, 88);
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(386, 271);
                  break;
               case 387:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(387, 388);
                  break;
               case 388:
                  if (curChar == 46)
                     jjCheckNAdd(269);
                  break;
               case 389:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(389, 274);
                  break;
               case 390:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(390, 391);
                  break;
               case 391:
                  if (curChar == 46)
                     jjCheckNAdd(272);
                  break;
               case 392:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(392, 276);
                  break;
               case 393:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(393, 394);
                  break;
               case 394:
                  if (curChar == 46)
                     jjCheckNAdd(275);
                  break;
               case 395:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(395, 279);
                  break;
               case 396:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(396, 397);
                  break;
               case 397:
                  if (curChar == 46)
                     jjCheckNAdd(277);
                  break;
               case 398:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(398, 282);
                  break;
               case 399:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(399, 400);
                  break;
               case 400:
                  if (curChar == 46)
                     jjCheckNAdd(280);
                  break;
               case 401:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(401, 285);
                  break;
               case 402:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(402, 403);
                  break;
               case 403:
                  if (curChar == 46)
                     jjCheckNAdd(283);
                  break;
               case 404:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(404, 288);
                  break;
               case 405:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(405, 406);
                  break;
               case 406:
                  if (curChar == 46)
                     jjCheckNAdd(286);
                  break;
               case 407:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(407, 291);
                  break;
               case 408:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(408, 409);
                  break;
               case 409:
                  if (curChar == 46)
                     jjCheckNAdd(289);
                  break;
               case 410:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(410, 294);
                  break;
               case 411:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(411, 412);
                  break;
               case 412:
                  if (curChar == 46)
                     jjCheckNAdd(292);
                  break;
               case 413:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(893, 896);
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(414, 415);
                  break;
               case 415:
                  if (curChar == 46)
                     jjCheckNAdd(295);
                  break;
               case 416:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(897, 899);
                  break;
               case 417:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(417, 418);
                  break;
               case 418:
                  if (curChar == 46)
                     jjCheckNAdd(305);
                  break;
               case 419:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(419, 311);
                  break;
               case 420:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(420, 421);
                  break;
               case 421:
                  if (curChar == 46)
                     jjCheckNAdd(309);
                  break;
               case 422:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(422, 314);
                  break;
               case 423:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(423, 424);
                  break;
               case 424:
                  if (curChar == 46)
                     jjCheckNAdd(312);
                  break;
               case 425:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(425, 318);
                  break;
               case 426:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(426, 427);
                  break;
               case 427:
                  if (curChar == 46)
                     jjCheckNAdd(315);
                  break;
               case 428:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(428, 323);
                  break;
               case 429:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(429, 430);
                  break;
               case 430:
                  if (curChar == 46)
                     jjCheckNAdd(319);
                  break;
               case 431:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(431, 325);
                  break;
               case 432:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(432, 433);
                  break;
               case 433:
                  if (curChar == 46)
                     jjCheckNAdd(324);
                  break;
               case 434:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(900, 902);
                  break;
               case 435:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(435, 436);
                  break;
               case 436:
                  if (curChar == 46)
                     jjCheckNAdd(337);
                  break;
               case 437:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(437, 360);
                  break;
               case 438:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(438, 439);
                  break;
               case 439:
                  if (curChar == 46)
                     jjCheckNAdd(359);
                  break;
               case 440:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAdd(440);
                  break;
               case 441:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(441, 442);
                  break;
               case 442:
                  if (curChar == 46)
                     jjCheckNAdd(361);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 362:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 92)
                        kind = 92;
                     jjCheckNAddTwoStates(364, 365);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(366, 377);
                  break;
               case 5:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 36)
                        kind = 36;
                     jjCheckNAddStates(903, 907);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(908, 911);
                  else if (curChar == 64)
                     jjAddStates(912, 914);
                  else if (curChar == 126)
                  {
                     if (kind > 32)
                        kind = 32;
                  }
                  else if (curChar == 123)
                  {
                     if (kind > 28)
                        kind = 28;
                  }
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(915, 917);
                  else if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 37:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 81)
                        kind = 81;
                     jjCheckNAddTwoStates(39, 40);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(41, 52);
                  break;
               case 444:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 81)
                        kind = 81;
                     jjCheckNAddTwoStates(39, 40);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(41, 42);
                  break;
               case 443:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(138, 140);
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(130, 131);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 36)
                        kind = 36;
                     jjCheckNAddTwoStates(128, 129);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(144, 145);
                  break;
               case 127:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(138, 140);
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(130, 163);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 36)
                        kind = 36;
                     jjCheckNAddTwoStates(128, 129);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(144, 155);
                  break;
               case 0:
                  if (curChar == 123 && kind > 28)
                     kind = 28;
                  break;
               case 4:
                  if (curChar == 126 && kind > 32)
                     kind = 32;
                  break;
               case 6:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddTwoStates(6, 7);
                  break;
               case 7:
                  if (curChar == 92)
                     jjAddStates(918, 919);
                  break;
               case 8:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddTwoStates(6, 7);
                  break;
               case 9:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(141, 145);
                  break;
               case 13:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(146, 153);
                  break;
               case 14:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(154, 157);
                  break;
               case 15:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(158, 162);
                  break;
               case 16:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(163, 168);
                  break;
               case 17:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddStates(169, 175);
                  break;
               case 18:
                  if ((0x200000002000000L & l) != 0L && kind > 53)
                     kind = 53;
                  break;
               case 19:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 21:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 20;
                  break;
               case 22:
                  if ((0x10000000100000L & l) != 0L && kind > 53)
                     kind = 53;
                  break;
               case 23:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 27:
                  if ((0x10000000100000L & l) != 0L && kind > 66)
                     kind = 66;
                  break;
               case 28:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 31:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 64)
                     jjAddStates(912, 914);
                  break;
               case 38:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(39, 40);
                  break;
               case 39:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(39, 40);
                  break;
               case 40:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(41, 42);
                  break;
               case 41:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(39, 40);
                  break;
               case 42:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(176, 180);
                  break;
               case 46:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(181, 188);
                  break;
               case 47:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(189, 192);
                  break;
               case 48:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(193, 197);
                  break;
               case 49:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(198, 203);
                  break;
               case 50:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(204, 210);
                  break;
               case 51:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(41, 52);
                  break;
               case 52:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(211, 215);
                  break;
               case 54:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(216, 223);
                  break;
               case 55:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(224, 227);
                  break;
               case 56:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(228, 232);
                  break;
               case 57:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(233, 238);
                  break;
               case 58:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(239, 245);
                  break;
               case 67:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(246, 248);
                  break;
               case 69:
                  if (curChar == 92)
                     jjAddStates(920, 923);
                  break;
               case 73:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     jjCheckNAddStates(246, 248);
                  break;
               case 74:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(249, 254);
                  break;
               case 77:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(255, 263);
                  break;
               case 78:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(264, 268);
                  break;
               case 79:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(269, 274);
                  break;
               case 80:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(275, 281);
                  break;
               case 81:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(282, 289);
                  break;
               case 82:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(82, 83);
                  break;
               case 83:
                  if (curChar == 92)
                     jjAddStates(924, 927);
                  break;
               case 87:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(82, 83);
                  break;
               case 88:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(290, 294);
                  break;
               case 91:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(295, 302);
                  break;
               case 92:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(303, 306);
                  break;
               case 93:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(307, 311);
                  break;
               case 94:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(312, 317);
                  break;
               case 95:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(318, 324);
                  break;
               case 97:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(325, 327);
                  break;
               case 99:
                  if (curChar == 92)
                     jjAddStates(928, 931);
                  break;
               case 103:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     jjCheckNAddStates(325, 327);
                  break;
               case 104:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(328, 333);
                  break;
               case 107:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(334, 342);
                  break;
               case 108:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(343, 347);
                  break;
               case 109:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(348, 353);
                  break;
               case 110:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(354, 360);
                  break;
               case 111:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(361, 368);
                  break;
               case 112:
                  if ((0xffffffffefffffffL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(112, 113);
                  break;
               case 113:
                  if (curChar == 92)
                     jjAddStates(932, 935);
                  break;
               case 117:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(112, 113);
                  break;
               case 118:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(369, 373);
                  break;
               case 121:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(374, 381);
                  break;
               case 122:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(382, 385);
                  break;
               case 123:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(386, 390);
                  break;
               case 124:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(391, 396);
                  break;
               case 125:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddStates(397, 403);
                  break;
               case 128:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(128, 129);
                  break;
               case 129:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(130, 131);
                  break;
               case 130:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(128, 129);
                  break;
               case 131:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(404, 408);
                  break;
               case 135:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(409, 416);
                  break;
               case 136:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(417, 420);
                  break;
               case 137:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(421, 425);
                  break;
               case 138:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(426, 431);
                  break;
               case 139:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(432, 438);
                  break;
               case 140:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(138, 140);
                  break;
               case 141:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(138, 140);
                  break;
               case 143:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(144, 145);
                  break;
               case 144:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     jjCheckNAddStates(138, 140);
                  break;
               case 145:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(439, 444);
                  break;
               case 149:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(445, 453);
                  break;
               case 150:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(454, 458);
                  break;
               case 151:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(459, 464);
                  break;
               case 152:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(465, 471);
                  break;
               case 153:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(472, 479);
                  break;
               case 154:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(144, 155);
                  break;
               case 155:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(480, 485);
                  break;
               case 157:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(486, 494);
                  break;
               case 158:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(495, 499);
                  break;
               case 159:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(500, 505);
                  break;
               case 160:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(506, 512);
                  break;
               case 161:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(513, 520);
                  break;
               case 162:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(130, 163);
                  break;
               case 163:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(521, 525);
                  break;
               case 165:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(526, 533);
                  break;
               case 166:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(534, 537);
                  break;
               case 167:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(538, 542);
                  break;
               case 168:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(543, 548);
                  break;
               case 169:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(549, 555);
                  break;
               case 170:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(903, 907);
                  break;
               case 171:
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(915, 917);
                  break;
               case 174:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(562, 564);
                  break;
               case 178:
                  if (curChar == 92)
                     jjAddStates(936, 939);
                  break;
               case 182:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     jjCheckNAddStates(562, 564);
                  break;
               case 183:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(565, 570);
                  break;
               case 186:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(571, 579);
                  break;
               case 187:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(580, 584);
                  break;
               case 188:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(585, 590);
                  break;
               case 189:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(591, 597);
                  break;
               case 190:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(598, 605);
                  break;
               case 192:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(606, 608);
                  break;
               case 194:
                  if (curChar == 92)
                     jjAddStates(940, 943);
                  break;
               case 198:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     jjCheckNAddStates(606, 608);
                  break;
               case 199:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(609, 614);
                  break;
               case 202:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(615, 623);
                  break;
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(624, 628);
                  break;
               case 204:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(629, 634);
                  break;
               case 205:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(635, 641);
                  break;
               case 206:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(642, 649);
                  break;
               case 207:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(650, 653);
                  break;
               case 208:
                  if (curChar == 92)
                     jjAddStates(944, 945);
                  break;
               case 209:
                  if ((0xffffff81ffffff81L & l) != 0L)
                     jjCheckNAddStates(650, 653);
                  break;
               case 210:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(654, 659);
                  break;
               case 214:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(660, 668);
                  break;
               case 215:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(669, 673);
                  break;
               case 216:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(674, 679);
                  break;
               case 217:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(680, 686);
                  break;
               case 218:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(687, 694);
                  break;
               case 220:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 221:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 229:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjAddStates(711, 716);
                  break;
               case 230:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 231:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 232:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 233:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(234);
                  break;
               case 234:
                  if ((0x7e0000007eL & l) != 0L && kind > 91)
                     kind = 91;
                  break;
               case 235:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 236:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 237:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 238:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 239:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 240:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 241:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 243:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 244:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 256:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(257, 263);
                  break;
               case 258:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 259:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(727, 730);
                  break;
               case 260:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAdd(234);
                  break;
               case 261:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddTwoStates(234, 260);
                  break;
               case 262:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 91)
                     kind = 91;
                  jjCheckNAddStates(731, 733);
                  break;
               case 263:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(734, 738);
                  break;
               case 264:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(257);
                  break;
               case 265:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(264, 257);
                  break;
               case 266:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(739, 741);
                  break;
               case 267:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(742, 745);
                  break;
               case 270:
                  if ((0x10000000100000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 271:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 273:
                  if ((0x200000002000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 274:
                  if ((0x200000002000L & l) != 0L)
                     jjCheckNAdd(273);
                  break;
               case 276:
                  if ((0x800000008L & l) != 0L)
                     jjCheckNAdd(273);
                  break;
               case 278:
                  if ((0x800000008L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 279:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 281:
                  if ((0x400000004000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 282:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 284:
                  if ((0x1000000010L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 285:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 287:
                  if ((0x100000001000000L & l) != 0L && kind > 55)
                     kind = 55;
                  break;
               case 288:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 290:
                  if ((0x200000002000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 291:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 293:
                  if ((0x100000001000000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 294:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 296:
                  if ((0x8000000080L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 297:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 298:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if ((0x1000000010L & l) != 0L && kind > 58)
                     kind = 58;
                  break;
               case 300:
               case 303:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(299);
                  break;
               case 301:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 302:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 304:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 306:
               case 308:
                  if ((0x8000000080000L & l) != 0L && kind > 59)
                     kind = 59;
                  break;
               case 307:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 310:
                  if ((0x400000004000000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 311:
               case 313:
                  if ((0x10000000100L & l) != 0L)
                     jjCheckNAdd(310);
                  break;
               case 314:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 316:
                  if ((0x20000000200L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 317:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 320:
                  if ((0x200000002000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 321:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 338:
               case 339:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(339, 340);
                  break;
               case 340:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(341, 342);
                  break;
               case 341:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(339, 340);
                  break;
               case 342:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(753, 757);
                  break;
               case 346:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(758, 765);
                  break;
               case 347:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(766, 769);
                  break;
               case 348:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(770, 774);
                  break;
               case 349:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(775, 780);
                  break;
               case 350:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(781, 787);
                  break;
               case 351:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(341, 352);
                  break;
               case 352:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(788, 792);
                  break;
               case 354:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(793, 800);
                  break;
               case 355:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(801, 804);
                  break;
               case 356:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(805, 809);
                  break;
               case 357:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(810, 815);
                  break;
               case 358:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddStates(816, 822);
                  break;
               case 363:
               case 364:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(364, 365);
                  break;
               case 365:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(366, 367);
                  break;
               case 366:
                  if ((0xffffff81ffffff81L & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(364, 365);
                  break;
               case 367:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(823, 827);
                  break;
               case 371:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(828, 835);
                  break;
               case 372:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(836, 839);
                  break;
               case 373:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(840, 844);
                  break;
               case 374:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(845, 850);
                  break;
               case 375:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(851, 857);
                  break;
               case 376:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(366, 377);
                  break;
               case 377:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(858, 862);
                  break;
               case 379:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(863, 870);
                  break;
               case 380:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(871, 874);
                  break;
               case 381:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(875, 879);
                  break;
               case 382:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(880, 885);
                  break;
               case 383:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddStates(886, 892);
                  break;
               case 384:
                  if (curChar == 92)
                     jjCheckNAddStates(908, 911);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 362:
               case 363:
               case 364:
               case 366:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 92)
                     kind = 92;
                  jjCheckNAddTwoStates(364, 365);
                  break;
               case 5:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddStates(903, 907);
                  break;
               case 37:
               case 38:
               case 41:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(39, 40);
                  break;
               case 444:
               case 39:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(39, 40);
                  break;
               case 443:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 36)
                        kind = 36;
                     jjCheckNAddTwoStates(128, 129);
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(138, 140);
                  break;
               case 127:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 36)
                        kind = 36;
                     jjCheckNAddTwoStates(128, 129);
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(138, 140);
                  break;
               case 6:
               case 8:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 37)
                     kind = 37;
                  jjCheckNAddTwoStates(6, 7);
                  break;
               case 67:
               case 73:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(246, 248);
                  break;
               case 82:
               case 87:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(82, 83);
                  break;
               case 97:
               case 103:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(325, 327);
                  break;
               case 112:
               case 117:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 35)
                     kind = 35;
                  jjCheckNAddTwoStates(112, 113);
                  break;
               case 128:
               case 130:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 36)
                     kind = 36;
                  jjCheckNAddTwoStates(128, 129);
                  break;
               case 140:
               case 144:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(138, 140);
                  break;
               case 141:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(138, 140);
                  break;
               case 174:
               case 182:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(562, 564);
                  break;
               case 192:
               case 198:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(606, 608);
                  break;
               case 207:
               case 209:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(650, 653);
                  break;
               case 338:
               case 339:
               case 341:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjCheckNAddTwoStates(339, 340);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 443 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x4L);
      default :
         return 1;
   }
}
private final int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(1, 2);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   337, 338, 351, 305, 307, 308, 295, 298, 302, 304, 386, 387, 388, 271, 389, 390, 
   391, 274, 392, 393, 394, 276, 395, 396, 397, 279, 398, 399, 400, 282, 401, 402, 
   403, 285, 404, 405, 406, 288, 407, 408, 409, 291, 410, 411, 412, 294, 413, 414, 
   415, 298, 302, 304, 416, 417, 418, 307, 308, 419, 420, 421, 311, 422, 423, 424, 
   314, 425, 426, 427, 318, 428, 429, 430, 323, 431, 432, 433, 325, 434, 435, 436, 
   338, 437, 438, 439, 360, 440, 441, 442, 351, 60, 61, 0, 62, 1, 63, 2, 
   64, 3, 65, 4, 269, 272, 275, 277, 280, 283, 286, 289, 292, 295, 305, 309, 
   312, 315, 319, 324, 337, 359, 361, 362, 363, 376, 127, 140, 154, 162, 97, 98, 
   112, 113, 99, 67, 68, 82, 83, 69, 38, 51, 141, 142, 143, 6, 11, 12, 
   7, 13, 6, 14, 11, 12, 7, 15, 16, 17, 6, 11, 12, 7, 6, 14, 
   11, 12, 7, 6, 14, 11, 12, 7, 15, 6, 14, 11, 12, 7, 15, 16, 
   39, 44, 45, 40, 46, 39, 47, 44, 45, 40, 48, 49, 50, 39, 44, 45, 
   40, 39, 47, 44, 45, 40, 39, 47, 44, 45, 40, 48, 39, 47, 44, 45, 
   40, 48, 49, 53, 45, 39, 40, 54, 55, 53, 45, 39, 40, 56, 57, 58, 
   53, 45, 39, 40, 55, 53, 45, 39, 40, 55, 53, 45, 39, 40, 56, 55, 
   53, 45, 39, 40, 56, 57, 67, 68, 69, 67, 75, 76, 68, 69, 77, 67, 
   78, 75, 76, 68, 69, 79, 80, 81, 67, 75, 76, 68, 69, 67, 78, 75, 
   76, 68, 69, 67, 78, 75, 76, 68, 69, 79, 67, 78, 75, 76, 68, 69, 
   79, 80, 82, 89, 90, 83, 91, 82, 92, 89, 90, 83, 93, 94, 95, 82, 
   89, 90, 83, 82, 92, 89, 90, 83, 82, 92, 89, 90, 83, 93, 82, 92, 
   89, 90, 83, 93, 94, 97, 98, 99, 97, 105, 106, 98, 99, 107, 97, 108, 
   105, 106, 98, 99, 109, 110, 111, 97, 105, 106, 98, 99, 97, 108, 105, 106, 
   98, 99, 97, 108, 105, 106, 98, 99, 109, 97, 108, 105, 106, 98, 99, 109, 
   110, 112, 119, 120, 113, 121, 112, 122, 119, 120, 113, 123, 124, 125, 112, 119, 
   120, 113, 112, 122, 119, 120, 113, 112, 122, 119, 120, 113, 123, 112, 122, 119, 
   120, 113, 123, 124, 128, 133, 134, 129, 135, 128, 136, 133, 134, 129, 137, 138, 
   139, 128, 133, 134, 129, 128, 136, 133, 134, 129, 128, 136, 133, 134, 129, 137, 
   128, 136, 133, 134, 129, 137, 138, 141, 147, 148, 142, 143, 149, 141, 150, 147, 
   148, 142, 143, 151, 152, 153, 141, 147, 148, 142, 143, 141, 150, 147, 148, 142, 
   143, 141, 150, 147, 148, 142, 143, 151, 141, 150, 147, 148, 142, 143, 151, 152, 
   156, 148, 141, 142, 143, 157, 158, 156, 148, 141, 142, 143, 159, 160, 161, 156, 
   148, 141, 142, 143, 158, 156, 148, 141, 142, 143, 158, 156, 148, 141, 142, 143, 
   159, 158, 156, 148, 141, 142, 143, 159, 160, 164, 134, 128, 129, 165, 166, 164, 
   134, 128, 129, 167, 168, 169, 164, 134, 128, 129, 166, 164, 134, 128, 129, 166, 
   164, 134, 128, 129, 167, 166, 164, 134, 128, 129, 167, 168, 173, 191, 207, 177, 
   208, 219, 174, 175, 178, 174, 184, 185, 175, 178, 186, 174, 187, 184, 185, 175, 
   178, 188, 189, 190, 174, 184, 185, 175, 178, 174, 187, 184, 185, 175, 178, 174, 
   187, 184, 185, 175, 178, 188, 174, 187, 184, 185, 175, 178, 188, 189, 192, 193, 
   194, 192, 200, 201, 193, 194, 202, 192, 203, 200, 201, 193, 194, 204, 205, 206, 
   192, 200, 201, 193, 194, 192, 203, 200, 201, 193, 194, 192, 203, 200, 201, 193, 
   194, 204, 192, 203, 200, 201, 193, 194, 204, 205, 207, 176, 177, 208, 207, 212, 
   177, 208, 213, 214, 207, 215, 212, 177, 208, 213, 216, 217, 218, 207, 212, 177, 
   208, 213, 207, 215, 212, 177, 208, 213, 207, 215, 212, 177, 208, 213, 216, 207, 
   215, 212, 177, 208, 213, 216, 217, 173, 191, 207, 176, 177, 208, 219, 223, 229, 
   225, 226, 227, 228, 225, 226, 227, 230, 235, 239, 243, 247, 251, 225, 249, 250, 
   225, 252, 253, 254, 225, 252, 253, 234, 260, 261, 262, 234, 260, 261, 264, 257, 
   265, 266, 267, 264, 257, 265, 264, 257, 265, 266, 332, 333, 329, 335, 336, 326, 
   328, 339, 344, 345, 340, 346, 339, 347, 344, 345, 340, 348, 349, 350, 339, 344, 
   345, 340, 339, 347, 344, 345, 340, 339, 347, 344, 345, 340, 348, 339, 347, 344, 
   345, 340, 348, 349, 353, 345, 339, 340, 354, 355, 353, 345, 339, 340, 356, 357, 
   358, 353, 345, 339, 340, 355, 353, 345, 339, 340, 355, 353, 345, 339, 340, 356, 
   355, 353, 345, 339, 340, 356, 357, 364, 369, 370, 365, 371, 364, 372, 369, 370, 
   365, 373, 374, 375, 364, 369, 370, 365, 364, 372, 369, 370, 365, 364, 372, 369, 
   370, 365, 373, 364, 372, 369, 370, 365, 373, 374, 378, 370, 364, 365, 379, 380, 
   378, 370, 364, 365, 381, 382, 383, 378, 370, 364, 365, 380, 378, 370, 364, 365, 
   380, 378, 370, 364, 365, 381, 380, 378, 370, 364, 365, 381, 382, 413, 298, 302, 
   304, 416, 307, 308, 434, 338, 351, 128, 141, 142, 143, 129, 130, 163, 144, 155, 
   37, 38, 51, 221, 222, 255, 8, 9, 70, 72, 73, 74, 84, 86, 87, 88, 
   100, 102, 103, 104, 114, 116, 117, 118, 179, 181, 182, 183, 195, 197, 198, 199, 
   209, 210, 
};
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, "\74\41\55\55", 
"\55\55\76", "\176\75", "\174\75", null, null, null, null, null, null, null, null, null, 
null, "\175", "\136\75", "\44\75", "\52\75", "\75", "\55", "\73", "\57", "\133", 
"\135", "\52", "\56", "\51", "\50", "\72", null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, "\72\72", null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, };
public static final String[] lexStateNames = {
   "DEFAULT", 
   "IN_COMMENT", 
};
public static final int[] jjnewLexState = {
   -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffffffffff800001L, 0x7803ffffL, 
};
static final long[] jjtoSkip = {
   0x4L, 0x0L, 
};
static final long[] jjtoMore = {
   0xaL, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[443];
private final int[] jjstateSet = new int[886];
protected char curChar;
public CssParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public CssParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 443; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 3)
         {
            jjmatchedKind = 3;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

}
