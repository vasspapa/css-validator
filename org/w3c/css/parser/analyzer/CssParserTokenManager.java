/* Generated By:JavaCC: Do not edit this line. CssParserTokenManager.java */
package org.w3c.css.parser.analyzer;

public class CssParserTokenManager implements CssParserConstants
{
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0xfe00000000000000L) != 0L || (active1 & 0x3fL) != 0L)
            return 63;
         if ((active0 & 0x2000000L) != 0L)
            return 207;
         return -1;
      case 1:
         if ((active0 & 0xfe00000000000000L) != 0L || (active1 & 0x3fL) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 1;
            return 388;
         }
         return -1;
      case 2:
         if ((active0 & 0xfe00000000000000L) != 0L || (active1 & 0x3fL) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 2;
            return 388;
         }
         return -1;
      case 3:
         if ((active1 & 0x1L) != 0L)
            return 388;
         if ((active0 & 0xfe00000000000000L) != 0L || (active1 & 0x3eL) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 3;
            return 388;
         }
         return -1;
      case 4:
         if ((active0 & 0xf600000000000000L) != 0L || (active1 & 0x36L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 4;
            return 388;
         }
         if ((active0 & 0x800000000000000L) != 0L || (active1 & 0x8L) != 0L)
            return 388;
         return -1;
      case 5:
         if ((active0 & 0x400000000000000L) != 0L || (active1 & 0x2L) != 0L)
            return 388;
         if ((active0 & 0xf200000000000000L) != 0L || (active1 & 0x34L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 5;
            return 388;
         }
         return -1;
      case 6:
         if ((active0 & 0x200000000000000L) != 0L || (active1 & 0x4L) != 0L)
            return 388;
         if ((active0 & 0xf000000000000000L) != 0L || (active1 & 0x30L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 6;
            return 388;
         }
         return -1;
      case 7:
         if ((active0 & 0x7000000000000000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 7;
            return 388;
         }
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0x10L) != 0L)
            return 388;
         return -1;
      case 8:
         if ((active0 & 0x7000000000000000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 8;
            return 388;
         }
         return -1;
      case 9:
         if ((active0 & 0x1000000000000000L) != 0L)
            return 388;
         if ((active0 & 0x6000000000000000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 9;
            return 388;
         }
         return -1;
      case 10:
         if ((active0 & 0x2000000000000000L) != 0L)
            return 388;
         if ((active0 & 0x4000000000000000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 10;
            return 388;
         }
         return -1;
      case 11:
         if ((active0 & 0x4000000000000000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 11;
            return 388;
         }
         return -1;
      case 12:
         if ((active0 & 0x4000000000000000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 12;
            return 388;
         }
         return -1;
      case 13:
         if ((active0 & 0x4000000000000000L) != 0L)
            return 388;
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 13;
            return 388;
         }
         return -1;
      case 14:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 14;
            return 388;
         }
         return -1;
      case 15:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 15;
            return 388;
         }
         return -1;
      case 16:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 16;
            return 388;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x1000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 27);
      case 41:
         return jjStopAtPos(0, 26);
      case 42:
         jjmatchedKind = 24;
         return jjMoveStringLiteralDfa1_0(0x2000L, 0x0L);
      case 43:
         return jjStopAtPos(0, 16);
      case 44:
         return jjStopAtPos(0, 18);
      case 45:
         jjmatchedKind = 17;
         return jjMoveStringLiteralDfa1_0(0x40L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 25, 207);
      case 47:
         jjmatchedKind = 21;
         return jjMoveStringLiteralDfa1_0(0x4L, 0x0L);
      case 58:
         jjmatchedKind = 28;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x100000L);
      case 59:
         return jjStopAtPos(0, 19);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x20L, 0x0L);
      case 61:
         return jjStopAtPos(0, 15);
      case 62:
         return jjStopAtPos(0, 20);
      case 64:
         return jjMoveStringLiteralDfa1_0(0xfe00000000000000L, 0x3fL);
      case 91:
         return jjStopAtPos(0, 22);
      case 93:
         return jjStopAtPos(0, 23);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x800L, 0x0L);
      case 123:
         return jjStopAtPos(0, 7);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x200L, 0x0L);
      case 125:
         return jjStopAtPos(0, 8);
      case 126:
         jjmatchedKind = 14;
         return jjMoveStringLiteralDfa1_0(0x400L, 0x0L);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x20L, active1, 0L);
      case 42:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(1, 2);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x40L, active1, 0L);
      case 58:
         if ((active1 & 0x100000L) != 0L)
            return jjStopAtPos(1, 84);
         break;
      case 61:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(1, 9);
         else if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(1, 10);
         else if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(1, 11);
         else if ((active0 & 0x1000L) != 0L)
            return jjStopAtPos(1, 12);
         else if ((active0 & 0x2000L) != 0L)
            return jjStopAtPos(1, 13);
         break;
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0xc000000000000000L, active1, 0x10L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x2800000000000000L, active1, 0x20L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x20L, active1, 0L);
      case 62:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(2, 6);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L, active1, 0x8L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000000000L, active1, 0x20L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x5000000000000000L, active1, 0x15L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x20L) != 0L)
            return jjStopAtPos(3, 5);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000000000L, active1, 0x2L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20L);
      case 80:
      case 112:
         if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(3, 64, 388);
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L, active1, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private final int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 59, 388);
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000000L, active1, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x2L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x30L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x4200000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active1 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(4, 67, 388);
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000000000000L, active1, 0x4L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private final int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, 0x1000000000000000L, active1, 0L);
      case 65:
      case 97:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 58, 388);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000000L, active1, 0x20L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x4L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x4200000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0x8000000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active1 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(5, 65, 388);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private final int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active0, 0x4000000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0x8000000000000000L, active1, 0x10L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0x1000000000000000L, active1, 0L);
      case 77:
      case 109:
         if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_0(6, 66, 388);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0x2000000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 57, 388);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private final int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0x1000000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active0, 0x2000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x20L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active0, 0x4000000000000000L, active1, 0L);
      case 82:
      case 114:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(7, 68, 388);
         break;
      case 84:
      case 116:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 63, 388);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private final int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x1000000000000000L, active1, 0x20L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active0, 0x2000000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active0, 0x4000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
private final int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, active1);
      return 9;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x20L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active0, 0x2000000000000000L, active1, 0L);
      case 69:
      case 101:
         if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 60, 388);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active0, 0x4000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, active1);
}
private final int jjMoveStringLiteralDfa10_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(8, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, active1);
      return 10;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x20L);
      case 69:
      case 101:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(10, 61, 388);
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active0, 0x4000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, active1);
}
private final int jjMoveStringLiteralDfa11_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(9, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, active1);
      return 11;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active0, 0x4000000000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, active1);
}
private final int jjMoveStringLiteralDfa12_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(10, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, active1);
      return 12;
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa13_0(active0, 0x4000000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, active1);
}
private final int jjMoveStringLiteralDfa13_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(11, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, active1);
      return 13;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(13, 62, 388);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, active1);
}
private final int jjMoveStringLiteralDfa14_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(12, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, 0L, active1);
      return 14;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa15_0(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(13, 0L, active1);
}
private final int jjMoveStringLiteralDfa15_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(13, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, 0L, active1);
      return 15;
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa16_0(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(14, 0L, active1);
}
private final int jjMoveStringLiteralDfa16_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(14, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, 0L, active1);
      return 16;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa17_0(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(15, 0L, active1);
}
private final int jjMoveStringLiteralDfa17_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(15, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(16, 0L, active1);
      return 17;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(17, 69, 388);
         break;
      default :
         break;
   }
   return jjStartNfa_0(16, 0L, active1);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 388;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 207:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(175, 176);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(168, 169);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(165, 167);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(162, 164);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(160, 161);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(157, 159);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(3, 6);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(144, 146);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(141, 143);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 140);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(135, 137);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(132, 134);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(129, 131);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(127, 128);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(124, 126);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(121, 123);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(119, 120);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjCheckNAdd(118);
                  }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjCheckNAddStates(7, 84);
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 46)
                     jjCheckNAddStates(85, 105);
                  else if (curChar == 33)
                     jjCheckNAddTwoStates(52, 61);
                  else if (curChar == 35)
                     jjAddStates(106, 107);
                  else if (curChar == 39)
                     jjCheckNAddStates(108, 111);
                  else if (curChar == 34)
                     jjCheckNAddStates(112, 115);
                  break;
               case 388:
               case 64:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(64, 65);
                  break;
               case 0:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if (curChar == 34)
                     jjCheckNAddStates(112, 115);
                  break;
               case 3:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(112, 115);
                  break;
               case 4:
                  if (curChar == 34 && kind > 40)
                     kind = 40;
                  break;
               case 6:
                  if (curChar == 10)
                     jjCheckNAddStates(112, 115);
                  break;
               case 8:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(112, 115);
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(116, 121);
                  break;
               case 10:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(112, 115);
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(122, 130);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(131, 135);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(136, 141);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(142, 148);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(149, 156);
                  break;
               case 16:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 17:
                  if (curChar == 39)
                     jjCheckNAddStates(108, 111);
                  break;
               case 18:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(108, 111);
                  break;
               case 19:
                  if (curChar == 39 && kind > 40)
                     kind = 40;
                  break;
               case 21:
                  if (curChar == 10)
                     jjCheckNAddStates(108, 111);
                  break;
               case 23:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(108, 111);
                  break;
               case 24:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(157, 162);
                  break;
               case 25:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(108, 111);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(163, 171);
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(172, 176);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(177, 182);
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(183, 189);
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(190, 197);
                  break;
               case 31:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 32:
                  if (curChar == 35)
                     jjAddStates(106, 107);
                  break;
               case 34:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(34, 35);
                  break;
               case 36:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(34, 35);
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(198, 201);
                  break;
               case 38:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(34, 35);
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(202, 208);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(209, 211);
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(212, 215);
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(216, 220);
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(221, 226);
                  break;
               case 45:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(227, 230);
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(231, 237);
                  break;
               case 47:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(238, 240);
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(241, 244);
                  break;
               case 49:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(245, 249);
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(250, 255);
                  break;
               case 51:
                  if (curChar == 33)
                     jjCheckNAddTwoStates(52, 61);
                  break;
               case 52:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(52, 61);
                  break;
               case 66:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(64, 65);
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(256, 259);
                  break;
               case 68:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(64, 65);
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(260, 266);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(267, 269);
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(270, 273);
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(274, 278);
                  break;
               case 73:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(279, 284);
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(285, 288);
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(289, 295);
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(296, 298);
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(299, 302);
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(303, 307);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(308, 313);
                  break;
               case 96:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(96, 97);
                  break;
               case 98:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(96, 97);
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(314, 317);
                  break;
               case 100:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(96, 97);
                  break;
               case 101:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(318, 324);
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(325, 327);
                  break;
               case 103:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(328, 331);
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(332, 336);
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(337, 342);
                  break;
               case 106:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(343, 345);
                  break;
               case 107:
                  if (curChar == 40 && kind > 82)
                     kind = 82;
                  break;
               case 109:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(343, 345);
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(346, 350);
                  break;
               case 111:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(343, 345);
                  break;
               case 112:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(351, 358);
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(359, 362);
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(363, 367);
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(368, 373);
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(374, 380);
                  break;
               case 117:
                  if (curChar == 46)
                     jjCheckNAddStates(85, 105);
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAdd(118);
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(119, 120);
                  break;
               case 120:
                  if (curChar == 37 && kind > 45)
                     kind = 45;
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(121, 123);
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(124, 126);
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(127, 128);
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(129, 131);
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(132, 134);
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(135, 137);
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 140);
                  break;
               case 141:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(141, 143);
                  break;
               case 144:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(144, 146);
                  break;
               case 147:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(3, 6);
                  break;
               case 157:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(157, 159);
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(160, 161);
                  break;
               case 162:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(162, 164);
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(165, 167);
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(168, 169);
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(175, 176);
                  break;
               case 176:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(177, 185);
                  break;
               case 177:
                  if (curChar == 46)
                     jjCheckNAdd(178);
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(178, 179);
                  break;
               case 179:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(180, 182);
                  break;
               case 180:
                  if (curChar == 46)
                     jjCheckNAdd(181);
                  break;
               case 181:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(181);
                  break;
               case 182:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(381, 383);
                  break;
               case 183:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(183);
                  break;
               case 184:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(184, 180);
                  break;
               case 185:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(384, 387);
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(186, 179);
                  break;
               case 187:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(187, 177);
                  break;
               case 188:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 2);
                  break;
               case 190:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(190, 191);
                  break;
               case 192:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(190, 191);
                  break;
               case 193:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(388, 391);
                  break;
               case 194:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(190, 191);
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(392, 398);
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(399, 401);
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(402, 405);
                  break;
               case 198:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(406, 410);
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(411, 416);
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(417, 420);
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(421, 427);
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(428, 430);
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(431, 434);
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(435, 439);
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(440, 445);
                  break;
               case 208:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(208, 209);
                  break;
               case 210:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(208, 209);
                  break;
               case 211:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(446, 449);
                  break;
               case 212:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(208, 209);
                  break;
               case 213:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(450, 456);
                  break;
               case 214:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(457, 459);
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(460, 463);
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(464, 468);
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(469, 474);
                  break;
               case 219:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(475, 478);
                  break;
               case 220:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(479, 485);
                  break;
               case 221:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(486, 488);
                  break;
               case 222:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(489, 492);
                  break;
               case 223:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(493, 497);
                  break;
               case 224:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(498, 503);
                  break;
               case 226:
                  if (curChar == 40)
                     jjCheckNAddStates(504, 509);
                  break;
               case 227:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     jjCheckNAddStates(510, 513);
                  break;
               case 228:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(228, 229);
                  break;
               case 229:
                  if (curChar == 41 && kind > 44)
                     kind = 44;
                  break;
               case 231:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(510, 513);
                  break;
               case 232:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(514, 518);
                  break;
               case 233:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(510, 513);
                  break;
               case 234:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(519, 526);
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(527, 530);
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(531, 535);
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(536, 541);
                  break;
               case 238:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(542, 548);
                  break;
               case 239:
                  if (curChar == 39)
                     jjCheckNAddStates(549, 552);
                  break;
               case 240:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(549, 552);
                  break;
               case 241:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(228, 229);
                  break;
               case 243:
                  if (curChar == 10)
                     jjCheckNAddStates(549, 552);
                  break;
               case 245:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(549, 552);
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(553, 558);
                  break;
               case 247:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(549, 552);
                  break;
               case 248:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(559, 567);
                  break;
               case 249:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(568, 572);
                  break;
               case 250:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(573, 578);
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(579, 585);
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(586, 593);
                  break;
               case 253:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 254:
                  if (curChar == 34)
                     jjCheckNAddStates(594, 597);
                  break;
               case 255:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(594, 597);
                  break;
               case 256:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(228, 229);
                  break;
               case 258:
                  if (curChar == 10)
                     jjCheckNAddStates(594, 597);
                  break;
               case 260:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(594, 597);
                  break;
               case 261:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(598, 603);
                  break;
               case 262:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(594, 597);
                  break;
               case 263:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(604, 612);
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(613, 617);
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(618, 623);
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(624, 630);
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(631, 638);
                  break;
               case 268:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 269:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(639, 645);
                  break;
               case 272:
                  if (curChar == 43)
                     jjAddStates(646, 647);
                  break;
               case 273:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 274:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(648, 651);
                  break;
               case 275:
                  if (curChar == 63 && kind > 80)
                     kind = 80;
                  break;
               case 276:
               case 291:
               case 295:
               case 298:
               case 301:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAdd(275);
                  break;
               case 277:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(275, 276);
                  break;
               case 278:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(652, 654);
                  break;
               case 279:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjAddStates(655, 660);
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 281:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 282:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(283);
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 284:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 285:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAdd(275);
                  break;
               case 288:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 289:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 294:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(275, 295);
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 297:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(661, 663);
                  break;
               case 299:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(275, 298);
                  break;
               case 300:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(664, 667);
                  break;
               case 302:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(275, 301);
                  break;
               case 303:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(668, 670);
                  break;
               case 304:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(306, 312);
                  break;
               case 306:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 307:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(671, 674);
                  break;
               case 309:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAdd(283);
                  break;
               case 310:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(283, 309);
                  break;
               case 311:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(675, 677);
                  break;
               case 312:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(678, 682);
                  break;
               case 313:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(306);
                  break;
               case 314:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(313, 306);
                  break;
               case 315:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(683, 685);
                  break;
               case 316:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(686, 689);
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(690, 693);
                  break;
               case 319:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(694, 700);
                  break;
               case 320:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(701, 703);
                  break;
               case 321:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(704, 707);
                  break;
               case 322:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(708, 712);
                  break;
               case 323:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(713, 718);
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(719, 723);
                  break;
               case 325:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(724, 731);
                  break;
               case 326:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(732, 735);
                  break;
               case 327:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(736, 740);
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(741, 746);
                  break;
               case 329:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(747, 753);
                  break;
               case 330:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(7, 84);
                  break;
               case 331:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAdd(331);
                  break;
               case 332:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(332, 333);
                  break;
               case 333:
                  if (curChar == 46)
                     jjCheckNAdd(118);
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(334, 120);
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(335, 336);
                  break;
               case 336:
                  if (curChar == 46)
                     jjCheckNAdd(119);
                  break;
               case 337:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(337, 123);
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(338, 339);
                  break;
               case 339:
                  if (curChar == 46)
                     jjCheckNAdd(121);
                  break;
               case 340:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(340, 126);
                  break;
               case 341:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(341, 342);
                  break;
               case 342:
                  if (curChar == 46)
                     jjCheckNAdd(124);
                  break;
               case 343:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(343, 128);
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(344, 345);
                  break;
               case 345:
                  if (curChar == 46)
                     jjCheckNAdd(127);
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(346, 131);
                  break;
               case 347:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(347, 348);
                  break;
               case 348:
                  if (curChar == 46)
                     jjCheckNAdd(129);
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(349, 134);
                  break;
               case 350:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(350, 351);
                  break;
               case 351:
                  if (curChar == 46)
                     jjCheckNAdd(132);
                  break;
               case 352:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(352, 137);
                  break;
               case 353:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(353, 354);
                  break;
               case 354:
                  if (curChar == 46)
                     jjCheckNAdd(135);
                  break;
               case 355:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(355, 140);
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(356, 357);
                  break;
               case 357:
                  if (curChar == 46)
                     jjCheckNAdd(138);
                  break;
               case 358:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(358, 143);
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(359, 360);
                  break;
               case 360:
                  if (curChar == 46)
                     jjCheckNAdd(141);
                  break;
               case 361:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(361, 146);
                  break;
               case 362:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(362, 363);
                  break;
               case 363:
                  if (curChar == 46)
                     jjCheckNAdd(144);
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(754, 757);
                  break;
               case 365:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(365, 366);
                  break;
               case 366:
                  if (curChar == 46)
                     jjCheckNAdd(147);
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(367, 159);
                  break;
               case 368:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(368, 369);
                  break;
               case 369:
                  if (curChar == 46)
                     jjCheckNAdd(157);
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(370, 161);
                  break;
               case 371:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(371, 372);
                  break;
               case 372:
                  if (curChar == 46)
                     jjCheckNAdd(160);
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(373, 164);
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(374, 375);
                  break;
               case 375:
                  if (curChar == 46)
                     jjCheckNAdd(162);
                  break;
               case 376:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(376, 167);
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(377, 378);
                  break;
               case 378:
                  if (curChar == 46)
                     jjCheckNAdd(165);
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(379, 169);
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(380, 381);
                  break;
               case 381:
                  if (curChar == 46)
                     jjCheckNAdd(168);
                  break;
               case 382:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(382, 176);
                  break;
               case 383:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(383, 384);
                  break;
               case 384:
                  if (curChar == 46)
                     jjCheckNAdd(175);
                  break;
               case 385:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(758, 760);
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(386, 387);
                  break;
               case 387:
                  if (curChar == 46)
                     jjCheckNAdd(188);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 207:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 81)
                        kind = 81;
                     jjCheckNAddTwoStates(208, 209);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(210, 219);
                  break;
               case 63:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 70)
                        kind = 70;
                     jjCheckNAddTwoStates(64, 65);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(66, 75);
                  break;
               case 1:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddStates(761, 765);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(766, 769);
                  else if (curChar == 64)
                     jjAddStates(770, 771);
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(772, 774);
                  else if ((0x200000002L & l) != 0L)
                     jjAddStates(775, 776);
                  else if ((0x400000004000L & l) != 0L)
                     jjAddStates(777, 778);
                  else if ((0x800000008000L & l) != 0L)
                     jjAddStates(779, 780);
                  break;
               case 388:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 70)
                        kind = 70;
                     jjCheckNAddTwoStates(64, 65);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(66, 67);
                  break;
               case 3:
               case 8:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(112, 115);
                  break;
               case 5:
                  if (curChar == 92)
                     jjAddStates(781, 782);
                  break;
               case 7:
                  if (curChar == 92)
                     jjAddStates(783, 784);
                  break;
               case 9:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(116, 121);
                  break;
               case 11:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(122, 130);
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(131, 135);
                  break;
               case 13:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(136, 141);
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(142, 148);
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(149, 156);
                  break;
               case 18:
               case 23:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(108, 111);
                  break;
               case 20:
                  if (curChar == 92)
                     jjAddStates(785, 786);
                  break;
               case 22:
                  if (curChar == 92)
                     jjAddStates(787, 788);
                  break;
               case 24:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(157, 162);
                  break;
               case 26:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(163, 171);
                  break;
               case 27:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(172, 176);
                  break;
               case 28:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(177, 182);
                  break;
               case 29:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(183, 189);
                  break;
               case 30:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(190, 197);
                  break;
               case 33:
               case 34:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(34, 35);
                  break;
               case 35:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(36, 37);
                  break;
               case 36:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(34, 35);
                  break;
               case 37:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(198, 201);
                  break;
               case 39:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(202, 208);
                  break;
               case 40:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(209, 211);
                  break;
               case 41:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(212, 215);
                  break;
               case 42:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(216, 220);
                  break;
               case 43:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(221, 226);
                  break;
               case 44:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(36, 45);
                  break;
               case 45:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(227, 230);
                  break;
               case 46:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(231, 237);
                  break;
               case 47:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(238, 240);
                  break;
               case 48:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(241, 244);
                  break;
               case 49:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(245, 249);
                  break;
               case 50:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(250, 255);
                  break;
               case 53:
                  if ((0x10000000100000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 54:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 64)
                     jjAddStates(770, 771);
                  break;
               case 64:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(64, 65);
                  break;
               case 65:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(66, 67);
                  break;
               case 66:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(64, 65);
                  break;
               case 67:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(256, 259);
                  break;
               case 69:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(260, 266);
                  break;
               case 70:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(267, 269);
                  break;
               case 71:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(270, 273);
                  break;
               case 72:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(274, 278);
                  break;
               case 73:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(279, 284);
                  break;
               case 74:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(66, 75);
                  break;
               case 75:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(285, 288);
                  break;
               case 76:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(289, 295);
                  break;
               case 77:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(296, 298);
                  break;
               case 78:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(299, 302);
                  break;
               case 79:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(303, 307);
                  break;
               case 80:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(308, 313);
                  break;
               case 81:
                  if ((0x800000008000L & l) != 0L)
                     jjAddStates(779, 780);
                  break;
               case 82:
                  if ((0x200000002000000L & l) != 0L && kind > 30)
                     kind = 30;
                  break;
               case 83:
               case 85:
                  if ((0x100000001000L & l) != 0L)
                     jjCheckNAdd(82);
                  break;
               case 84:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 86:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if ((0x400000004000L & l) != 0L)
                     jjAddStates(777, 778);
                  break;
               case 88:
                  if ((0x10000000100000L & l) != 0L && kind > 30)
                     kind = 30;
                  break;
               case 89:
               case 90:
                  if ((0x800000008000L & l) != 0L)
                     jjCheckNAdd(88);
                  break;
               case 91:
                  if ((0x200000002L & l) != 0L)
                     jjAddStates(775, 776);
                  break;
               case 92:
                  if ((0x1000000010L & l) != 0L && kind > 29)
                     kind = 29;
                  break;
               case 93:
               case 94:
                  if ((0x400000004000L & l) != 0L)
                     jjCheckNAdd(92);
                  break;
               case 95:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(761, 765);
                  break;
               case 96:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(96, 97);
                  break;
               case 97:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(98, 99);
                  break;
               case 98:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(96, 97);
                  break;
               case 99:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(314, 317);
                  break;
               case 101:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(318, 324);
                  break;
               case 102:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(325, 327);
                  break;
               case 103:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(328, 331);
                  break;
               case 104:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(332, 336);
                  break;
               case 105:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(337, 342);
                  break;
               case 106:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(343, 345);
                  break;
               case 108:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(109, 110);
                  break;
               case 109:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(343, 345);
                  break;
               case 110:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(346, 350);
                  break;
               case 112:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(351, 358);
                  break;
               case 113:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(359, 362);
                  break;
               case 114:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(363, 367);
                  break;
               case 115:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(368, 373);
                  break;
               case 116:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(374, 380);
                  break;
               case 122:
                  if ((0x10000000100000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 123:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 125:
                  if ((0x200000002000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 126:
                  if ((0x200000002000L & l) != 0L)
                     jjCheckNAdd(125);
                  break;
               case 128:
                  if ((0x800000008L & l) != 0L)
                     jjCheckNAdd(125);
                  break;
               case 130:
                  if ((0x800000008L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 131:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 133:
                  if ((0x400000004000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 134:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 136:
                  if ((0x1000000010L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 137:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 139:
                  if ((0x100000001000000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 140:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 142:
                  if ((0x200000002000L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 143:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 145:
                  if ((0x100000001000000L & l) != 0L && kind > 48)
                     kind = 48;
                  break;
               case 146:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 148:
                  if ((0x8000000080L & l) != 0L && kind > 49)
                     kind = 49;
                  break;
               case 149:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 150:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if ((0x1000000010L & l) != 0L && kind > 49)
                     kind = 49;
                  break;
               case 152:
               case 154:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(151);
                  break;
               case 153:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 155:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 158:
               case 161:
                  if ((0x8000000080000L & l) != 0L && kind > 50)
                     kind = 50;
                  break;
               case 159:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 163:
                  if ((0x400000004000000L & l) != 0L && kind > 51)
                     kind = 51;
                  break;
               case 164:
               case 166:
                  if ((0x10000000100L & l) != 0L)
                     jjCheckNAdd(163);
                  break;
               case 167:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 169:
                  if ((0x1000000010L & l) != 0L)
                     jjAddStates(789, 790);
                  break;
               case 170:
                  if ((0x20000000200L & l) != 0L && kind > 52)
                     kind = 52;
                  break;
               case 171:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if ((0x200000002000L & l) != 0L && kind > 52)
                     kind = 52;
                  break;
               case 173:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 189:
               case 190:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(190, 191);
                  break;
               case 191:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(192, 193);
                  break;
               case 192:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(190, 191);
                  break;
               case 193:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(388, 391);
                  break;
               case 195:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(392, 398);
                  break;
               case 196:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(399, 401);
                  break;
               case 197:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(402, 405);
                  break;
               case 198:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(406, 410);
                  break;
               case 199:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(411, 416);
                  break;
               case 200:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(192, 201);
                  break;
               case 201:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(417, 420);
                  break;
               case 202:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(421, 427);
                  break;
               case 203:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(428, 430);
                  break;
               case 204:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(431, 434);
                  break;
               case 205:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(435, 439);
                  break;
               case 206:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(440, 445);
                  break;
               case 208:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(208, 209);
                  break;
               case 209:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(210, 211);
                  break;
               case 210:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(208, 209);
                  break;
               case 211:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(446, 449);
                  break;
               case 213:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(450, 456);
                  break;
               case 214:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(457, 459);
                  break;
               case 215:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(460, 463);
                  break;
               case 216:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(464, 468);
                  break;
               case 217:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(469, 474);
                  break;
               case 218:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(210, 219);
                  break;
               case 219:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(475, 478);
                  break;
               case 220:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(479, 485);
                  break;
               case 221:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(486, 488);
                  break;
               case 222:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(489, 492);
                  break;
               case 223:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(493, 497);
                  break;
               case 224:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(498, 503);
                  break;
               case 225:
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(772, 774);
                  break;
               case 227:
               case 231:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(510, 513);
                  break;
               case 230:
                  if (curChar == 92)
                     jjAddStates(791, 792);
                  break;
               case 232:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(514, 518);
                  break;
               case 234:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(519, 526);
                  break;
               case 235:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(527, 530);
                  break;
               case 236:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(531, 535);
                  break;
               case 237:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(536, 541);
                  break;
               case 238:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(542, 548);
                  break;
               case 240:
               case 245:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(549, 552);
                  break;
               case 242:
                  if (curChar == 92)
                     jjAddStates(793, 794);
                  break;
               case 244:
                  if (curChar == 92)
                     jjAddStates(795, 796);
                  break;
               case 246:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(553, 558);
                  break;
               case 248:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(559, 567);
                  break;
               case 249:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(568, 572);
                  break;
               case 250:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(573, 578);
                  break;
               case 251:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(579, 585);
                  break;
               case 252:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(586, 593);
                  break;
               case 255:
               case 260:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(594, 597);
                  break;
               case 257:
                  if (curChar == 92)
                     jjAddStates(797, 798);
                  break;
               case 259:
                  if (curChar == 92)
                     jjAddStates(799, 800);
                  break;
               case 261:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(598, 603);
                  break;
               case 263:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(604, 612);
                  break;
               case 264:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(613, 617);
                  break;
               case 265:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(618, 623);
                  break;
               case 266:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(624, 630);
                  break;
               case 267:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(631, 638);
                  break;
               case 270:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 271:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 279:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjAddStates(655, 660);
                  break;
               case 280:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 281:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 282:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(283);
                  break;
               case 283:
                  if ((0x7e0000007eL & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 284:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 285:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 286:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 287:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 288:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 289:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 290:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 292:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 293;
                  break;
               case 293:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 305:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(306, 312);
                  break;
               case 307:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 308:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(671, 674);
                  break;
               case 309:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAdd(283);
                  break;
               case 310:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(283, 309);
                  break;
               case 311:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(675, 677);
                  break;
               case 312:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(678, 682);
                  break;
               case 313:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(306);
                  break;
               case 314:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(313, 306);
                  break;
               case 315:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(683, 685);
                  break;
               case 316:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(686, 689);
                  break;
               case 317:
                  if (curChar == 92)
                     jjCheckNAddStates(766, 769);
                  break;
               case 318:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(690, 693);
                  break;
               case 319:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(694, 700);
                  break;
               case 320:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(701, 703);
                  break;
               case 321:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(704, 707);
                  break;
               case 322:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(708, 712);
                  break;
               case 323:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(713, 718);
                  break;
               case 324:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(719, 723);
                  break;
               case 325:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(724, 731);
                  break;
               case 326:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(732, 735);
                  break;
               case 327:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(736, 740);
                  break;
               case 328:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(741, 746);
                  break;
               case 329:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(747, 753);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 207:
               case 208:
               case 210:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(208, 209);
                  break;
               case 63:
               case 66:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(64, 65);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 31)
                        kind = 31;
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddStates(761, 765);
                  }
                  break;
               case 388:
               case 64:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(64, 65);
                  break;
               case 3:
               case 8:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(112, 115);
                  break;
               case 18:
               case 23:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(108, 111);
                  break;
               case 33:
               case 34:
               case 36:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(34, 35);
                  break;
               case 95:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(761, 765);
                  break;
               case 96:
               case 98:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(96, 97);
                  break;
               case 106:
               case 109:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(343, 345);
                  break;
               case 189:
               case 190:
               case 192:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(190, 191);
                  break;
               case 227:
               case 231:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(510, 513);
                  break;
               case 240:
               case 245:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(549, 552);
                  break;
               case 255:
               case 260:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(594, 597);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 388 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x8L);
      default :
         return 1;
   }
}
private final int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(1, 3);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   188, 189, 200, 147, 150, 153, 156, 331, 332, 333, 334, 335, 336, 120, 337, 338, 
   339, 123, 340, 341, 342, 126, 343, 344, 345, 128, 346, 347, 348, 131, 349, 350, 
   351, 134, 352, 353, 354, 137, 355, 356, 357, 140, 358, 359, 360, 143, 361, 362, 
   363, 146, 364, 365, 366, 150, 153, 156, 367, 368, 369, 159, 370, 371, 372, 161, 
   373, 374, 375, 164, 376, 377, 378, 167, 379, 380, 381, 382, 383, 384, 176, 385, 
   386, 387, 189, 200, 169, 118, 119, 121, 124, 127, 129, 132, 135, 138, 141, 144, 
   147, 157, 160, 162, 165, 168, 175, 188, 207, 218, 33, 44, 18, 19, 20, 22, 
   3, 4, 5, 7, 3, 10, 4, 5, 7, 11, 3, 12, 10, 4, 5, 7, 
   13, 14, 15, 3, 10, 4, 5, 7, 3, 12, 10, 4, 5, 7, 3, 12, 
   10, 4, 5, 7, 13, 3, 12, 10, 4, 5, 7, 13, 14, 18, 25, 19, 
   20, 22, 26, 18, 27, 25, 19, 20, 22, 28, 29, 30, 18, 25, 19, 20, 
   22, 18, 27, 25, 19, 20, 22, 18, 27, 25, 19, 20, 22, 28, 18, 27, 
   25, 19, 20, 22, 28, 29, 34, 38, 35, 39, 34, 40, 38, 35, 41, 42, 
   43, 34, 38, 35, 34, 40, 38, 35, 34, 40, 38, 35, 41, 34, 40, 38, 
   35, 41, 42, 38, 34, 35, 46, 47, 38, 34, 35, 48, 49, 50, 38, 34, 
   35, 47, 38, 34, 35, 47, 38, 34, 35, 48, 47, 38, 34, 35, 48, 49, 
   64, 68, 65, 69, 64, 70, 68, 65, 71, 72, 73, 64, 68, 65, 64, 70, 
   68, 65, 64, 70, 68, 65, 71, 64, 70, 68, 65, 71, 72, 68, 64, 65, 
   76, 77, 68, 64, 65, 78, 79, 80, 68, 64, 65, 77, 68, 64, 65, 77, 
   68, 64, 65, 78, 77, 68, 64, 65, 78, 79, 96, 100, 97, 101, 96, 102, 
   100, 97, 103, 104, 105, 96, 100, 97, 96, 102, 100, 97, 96, 102, 100, 97, 
   103, 96, 102, 100, 97, 103, 104, 106, 107, 108, 106, 111, 107, 108, 112, 106, 
   113, 111, 107, 108, 114, 115, 116, 106, 111, 107, 108, 106, 113, 111, 107, 108, 
   106, 113, 111, 107, 108, 114, 106, 113, 111, 107, 108, 114, 115, 183, 184, 180, 
   186, 187, 177, 179, 190, 194, 191, 195, 190, 196, 194, 191, 197, 198, 199, 190, 
   194, 191, 190, 196, 194, 191, 190, 196, 194, 191, 197, 190, 196, 194, 191, 197, 
   198, 194, 190, 191, 202, 203, 194, 190, 191, 204, 205, 206, 194, 190, 191, 203, 
   194, 190, 191, 203, 194, 190, 191, 204, 203, 194, 190, 191, 204, 205, 208, 212, 
   209, 213, 208, 214, 212, 209, 215, 216, 217, 208, 212, 209, 208, 214, 212, 209, 
   208, 214, 212, 209, 215, 208, 214, 212, 209, 215, 216, 212, 208, 209, 220, 221, 
   212, 208, 209, 222, 223, 224, 212, 208, 209, 221, 212, 208, 209, 221, 212, 208, 
   209, 222, 221, 212, 208, 209, 222, 223, 227, 239, 254, 229, 230, 269, 227, 228, 
   229, 230, 227, 229, 230, 233, 234, 227, 235, 229, 230, 233, 236, 237, 238, 227, 
   229, 230, 233, 227, 235, 229, 230, 233, 227, 235, 229, 230, 233, 236, 227, 235, 
   229, 230, 233, 236, 237, 240, 241, 242, 244, 240, 247, 241, 242, 244, 248, 240, 
   249, 247, 241, 242, 244, 250, 251, 252, 240, 247, 241, 242, 244, 240, 249, 247, 
   241, 242, 244, 240, 249, 247, 241, 242, 244, 250, 240, 249, 247, 241, 242, 244, 
   250, 251, 255, 256, 257, 259, 255, 262, 256, 257, 259, 263, 255, 264, 262, 256, 
   257, 259, 265, 266, 267, 255, 262, 256, 257, 259, 255, 264, 262, 256, 257, 259, 
   255, 264, 262, 256, 257, 259, 265, 255, 264, 262, 256, 257, 259, 265, 266, 227, 
   239, 254, 228, 229, 230, 269, 273, 279, 275, 276, 277, 278, 275, 276, 277, 280, 
   284, 288, 292, 296, 300, 275, 298, 299, 275, 301, 302, 303, 275, 301, 302, 283, 
   309, 310, 311, 283, 309, 310, 313, 306, 314, 315, 316, 313, 306, 314, 313, 306, 
   314, 315, 100, 96, 97, 319, 320, 100, 96, 97, 321, 322, 323, 100, 96, 97, 
   320, 100, 96, 97, 320, 100, 96, 97, 321, 320, 100, 96, 97, 321, 322, 111, 
   106, 107, 108, 325, 326, 111, 106, 107, 108, 327, 328, 329, 111, 106, 107, 108, 
   326, 111, 106, 107, 108, 326, 111, 106, 107, 108, 327, 326, 111, 106, 107, 108, 
   327, 328, 364, 150, 153, 156, 385, 189, 200, 96, 106, 107, 108, 97, 98, 318, 
   109, 324, 63, 74, 271, 272, 304, 93, 94, 89, 90, 84, 86, 16, 6, 8, 
   9, 31, 21, 23, 24, 171, 174, 231, 232, 253, 243, 245, 246, 268, 258, 260, 
   261, 
};
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, "\74\41\55\55", "\55\55\76", "\173", "\175", 
"\174\75", "\176\75", "\136\75", "\44\75", "\52\75", "\176", "\75", "\53", "\55", "\54", 
"\73", "\76", "\57", "\133", "\135", "\52", "\56", "\51", "\50", "\72", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, "\72\72", };
public static final String[] lexStateNames = {
   "DEFAULT", 
   "IN_COMMENT", 
};
public static final int[] jjnewLexState = {
   -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffff700ffffffe3L, 0x1f007fL, 
};
static final long[] jjtoSkip = {
   0x8L, 0x0L, 
};
static final long[] jjtoMore = {
   0x14L, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[388];
private final int[] jjstateSet = new int[776];
StringBuffer image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public CssParserTokenManager(SimpleCharStream stream)
{
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public CssParserTokenManager(SimpleCharStream stream, int lexState)
{
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 388; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos == 0 && jjmatchedKind > 83)
         {
            jjmatchedKind = 83;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 4)
         {
            jjmatchedKind = 4;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 1 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
           image = CssParser.SPACE;
         break;
      default : 
         break;
   }
}
}
