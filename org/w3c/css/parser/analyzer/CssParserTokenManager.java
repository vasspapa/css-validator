/* Generated By:JavaCC: Do not edit this line. CssParserTokenManager.java */
package org.w3c.css.parser.analyzer;
import java.io.InputStream;
import java.util.Vector;
import java.util.Enumeration;
import java.net.URL;
import org.w3c.css.values.CssValue;
import org.w3c.css.values.CssExpression;
import org.w3c.css.values.CssString;
import org.w3c.css.values.CssURL;
import org.w3c.css.values.CssLength;
import org.w3c.css.values.CssNumber;
import org.w3c.css.values.CssColor;
import org.w3c.css.values.CssIdent;
import org.w3c.css.values.CssPercentage;
import org.w3c.css.values.CssFrequency;
import org.w3c.css.values.CssTime;
import org.w3c.css.values.CssDate;
import org.w3c.css.values.CssAngle;
import org.w3c.css.values.CssFunction;
import org.w3c.css.values.CssUnicodeRange;
import org.w3c.css.values.CssResolution;
import org.w3c.css.properties.css1.CssProperty;
import org.w3c.css.parser.Frame;
import org.w3c.css.util.ApplContext;
import org.w3c.css.parser.CssError;
import org.w3c.css.parser.CssSelectors;
import org.w3c.css.parser.CssParseException;
import org.w3c.css.parser.AtRule;
import org.w3c.css.parser.AtRuleMedia;
import org.w3c.css.parser.AtRuleFontFace;
import org.w3c.css.parser.AtRulePage;
import org.w3c.css.parser.AtRulePreference;
import org.w3c.css.parser.AtRulePhoneticAlphabet;
import org.w3c.css.properties.svg.AtRuleColorProfile;
import org.w3c.css.util.InvalidParamException;
import org.w3c.css.util.Util;
import org.w3c.css.util.Messages;
import org.w3c.css.css.StyleSheetCom;
import org.w3c.css.selectors.AdjacentSelector;
import org.w3c.css.selectors.AttributeSelector;
import org.w3c.css.selectors.ChildSelector;
import org.w3c.css.selectors.ClassSelector;
import org.w3c.css.selectors.DescendantSelector;
import org.w3c.css.selectors.IdSelector;
import org.w3c.css.selectors.TypeSelector;
import org.w3c.css.selectors.UniversalSelector;
import org.w3c.css.selectors.attributes.AttributeAny;
import org.w3c.css.selectors.attributes.AttributeBegin;
import org.w3c.css.selectors.attributes.AttributeExact;
import org.w3c.css.selectors.attributes.AttributeOneOf;
import org.w3c.css.selectors.attributes.AttributeStart;
import org.w3c.css.selectors.attributes.AttributeSubstr;
import org.w3c.css.selectors.attributes.AttributeSuffix;

public class CssParserTokenManager implements CssParserConstants
{
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0xfc00000000000000L) != 0L || (active1 & 0x7fL) != 0L)
            return 56;
         if ((active0 & 0x4000000L) != 0L)
            return 219;
         if ((active0 & 0x40080L) != 0L)
            return 90;
         return -1;
      case 1:
         if ((active0 & 0xfc00000000000000L) != 0L || (active1 & 0x7fL) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 1;
            return 391;
         }
         return -1;
      case 2:
         if ((active0 & 0xfc00000000000000L) != 0L || (active1 & 0x7fL) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 2;
            return 391;
         }
         return -1;
      case 3:
         if ((active1 & 0x2L) != 0L)
            return 391;
         if ((active0 & 0xfc00000000000000L) != 0L || (active1 & 0x7dL) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 3;
            return 391;
         }
         return -1;
      case 4:
         if ((active0 & 0xec00000000000000L) != 0L || (active1 & 0x6dL) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 4;
            return 391;
         }
         if ((active0 & 0x1000000000000000L) != 0L || (active1 & 0x10L) != 0L)
            return 391;
         return -1;
      case 5:
         if ((active0 & 0x800000000000000L) != 0L || (active1 & 0x4L) != 0L)
            return 391;
         if ((active0 & 0xe400000000000000L) != 0L || (active1 & 0x69L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 5;
            return 391;
         }
         return -1;
      case 6:
         if ((active0 & 0x400000000000000L) != 0L || (active1 & 0x8L) != 0L)
            return 391;
         if ((active0 & 0xe000000000000000L) != 0L || (active1 & 0x61L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 6;
            return 391;
         }
         return -1;
      case 7:
         if ((active0 & 0xe000000000000000L) != 0L || (active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 7;
            return 391;
         }
         if ((active1 & 0x21L) != 0L)
            return 391;
         return -1;
      case 8:
         if ((active0 & 0xe000000000000000L) != 0L || (active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 8;
            return 391;
         }
         return -1;
      case 9:
         if ((active0 & 0x2000000000000000L) != 0L)
            return 391;
         if ((active0 & 0xc000000000000000L) != 0L || (active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 9;
            return 391;
         }
         return -1;
      case 10:
         if ((active0 & 0x4000000000000000L) != 0L)
            return 391;
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 10;
            return 391;
         }
         return -1;
      case 11:
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 11;
            return 391;
         }
         return -1;
      case 12:
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 12;
            return 391;
         }
         return -1;
      case 13:
         if ((active0 & 0x8000000000000000L) != 0L)
            return 391;
         if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 13;
            return 391;
         }
         return -1;
      case 14:
         if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 14;
            return 391;
         }
         return -1;
      case 15:
         if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 15;
            return 391;
         }
         return -1;
      case 16:
         if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 71;
            jjmatchedPos = 16;
            return 391;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 32:
         return jjStopAtPos(0, 1);
      case 36:
         return jjMoveStringLiteralDfa1_0(0x2000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 28);
      case 41:
         return jjStopAtPos(0, 27);
      case 42:
         jjmatchedKind = 25;
         return jjMoveStringLiteralDfa1_0(0x4000L, 0x0L);
      case 43:
         return jjStopAtPos(0, 17);
      case 44:
         return jjStopAtPos(0, 19);
      case 45:
         jjmatchedKind = 18;
         return jjMoveStringLiteralDfa1_0(0x80L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 26, 219);
      case 47:
         jjmatchedKind = 22;
         return jjMoveStringLiteralDfa1_0(0x8L, 0x0L);
      case 58:
         jjmatchedKind = 29;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x100000L);
      case 59:
         return jjStopAtPos(0, 20);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x40L, 0x0L);
      case 61:
         return jjStopAtPos(0, 16);
      case 62:
         return jjStopAtPos(0, 21);
      case 64:
         return jjMoveStringLiteralDfa1_0(0xfc00000000000000L, 0x7fL);
      case 91:
         return jjStopAtPos(0, 23);
      case 93:
         return jjStopAtPos(0, 24);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x1000L, 0x0L);
      case 123:
         return jjStopAtPos(0, 8);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x400L, 0x0L);
      case 125:
         return jjStopAtPos(0, 9);
      case 126:
         jjmatchedKind = 15;
         return jjMoveStringLiteralDfa1_0(0x800L, 0x0L);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x40L, active1, 0L);
      case 42:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(1, 3);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x80L, active1, 0L);
      case 58:
         if ((active1 & 0x100000L) != 0L)
            return jjStopAtPos(1, 84);
         break;
      case 61:
         if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(1, 10);
         else if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(1, 11);
         else if ((active0 & 0x1000L) != 0L)
            return jjStopAtPos(1, 12);
         else if ((active0 & 0x2000L) != 0L)
            return jjStopAtPos(1, 13);
         else if ((active0 & 0x4000L) != 0L)
            return jjStopAtPos(1, 14);
         break;
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000000000000000L, active1, 0x21L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x10L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x5000000000000000L, active1, 0x40L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x40L, active1, 0L);
      case 62:
         if ((active0 & 0x80L) != 0L)
            return jjStopAtPos(2, 7);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000000000L, active1, 0x10L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x41L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0xa000000000000000L, active1, 0x2aL);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(3, 6);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000000000L, active1, 0x4L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x40L);
      case 80:
      case 112:
         if ((active1 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(3, 65, 391);
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000000L, active1, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private final int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 60, 391);
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active0, 0x4000000000000000L, active1, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x4L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x800000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x60L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x8400000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x1L);
      case 84:
      case 116:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(4, 68, 391);
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000000L, active1, 0x8L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private final int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000000L, active1, 0L);
      case 65:
      case 97:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 59, 391);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active0, 0x4000000000000000L, active1, 0x40L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x8L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x8400000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x1L);
      case 84:
      case 116:
         if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_0(5, 66, 391);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private final int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active0, 0x8000000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x21L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0x2000000000000000L, active1, 0L);
      case 77:
      case 109:
         if ((active1 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(6, 67, 391);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0x4000000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 58, 391);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private final int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0x2000000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active0, 0x4000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x40L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active0, 0x8000000000000000L, active1, 0L);
      case 82:
      case 114:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(7, 69, 391);
         break;
      case 84:
      case 116:
         if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(7, 64, 391);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private final int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x2000000000000000L, active1, 0x40L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active0, 0x4000000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active0, 0x8000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
private final int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, active1);
      return 9;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x40L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active0, 0x4000000000000000L, active1, 0L);
      case 69:
      case 101:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 61, 391);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active0, 0x8000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, active1);
}
private final int jjMoveStringLiteralDfa10_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(8, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, active1);
      return 10;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x40L);
      case 69:
      case 101:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(10, 62, 391);
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active0, 0x8000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, active1);
}
private final int jjMoveStringLiteralDfa11_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(9, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, active1);
      return 11;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active0, 0x8000000000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, active1);
}
private final int jjMoveStringLiteralDfa12_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(10, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, active1);
      return 12;
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa13_0(active0, 0x8000000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, active1);
}
private final int jjMoveStringLiteralDfa13_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(11, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, active1);
      return 13;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(13, 63, 391);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, active1);
}
private final int jjMoveStringLiteralDfa14_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(12, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, 0L, active1);
      return 14;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa15_0(active1, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(13, 0L, active1);
}
private final int jjMoveStringLiteralDfa15_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(13, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, 0L, active1);
      return 15;
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa16_0(active1, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(14, 0L, active1);
}
private final int jjMoveStringLiteralDfa16_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(14, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, 0L, active1);
      return 16;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa17_0(active1, 0x40L);
      default :
         break;
   }
   return jjStartNfa_0(15, 0L, active1);
}
private final int jjMoveStringLiteralDfa17_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(15, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(16, 0L, active1);
      return 17;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active1 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(17, 70, 391);
         break;
      default :
         break;
   }
   return jjStartNfa_0(16, 0L, active1);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 391;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 219:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  else if (curChar == 45)
                     jjCheckNAddTwoStates(220, 231);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(186, 187);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(179, 180);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(176, 178);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(173, 175);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(171, 172);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(168, 170);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(4, 7);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(155, 157);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(152, 154);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(149, 151);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(146, 148);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(143, 145);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(140, 142);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 139);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(135, 137);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(132, 134);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(130, 131);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 43)
                        kind = 43;
                     jjCheckNAdd(129);
                  }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 43)
                        kind = 43;
                     jjCheckNAddStates(8, 86);
                  }
                  else if ((0x3600L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 46)
                     jjCheckNAddStates(87, 108);
                  else if (curChar == 45)
                     jjAddStates(109, 112);
                  else if (curChar == 33)
                     jjCheckNAddStates(113, 115);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(33, 34);
                  else if (curChar == 39)
                     jjCheckNAddStates(116, 119);
                  else if (curChar == 34)
                     jjCheckNAddStates(120, 123);
                  break;
               case 56:
                  if (curChar == 45)
                     jjAddStates(124, 125);
                  break;
               case 391:
               case 58:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(58, 59);
                  break;
               case 0:
                  if ((0x3600L & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if (curChar == 34)
                     jjCheckNAddStates(120, 123);
                  break;
               case 3:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 4:
                  if (curChar == 34 && kind > 41)
                     kind = 41;
                  break;
               case 6:
                  if (curChar == 10)
                     jjCheckNAddStates(120, 123);
                  break;
               case 8:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(126, 131);
                  break;
               case 10:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(132, 140);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(141, 145);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(146, 151);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(152, 158);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(159, 166);
                  break;
               case 16:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 17:
                  if (curChar == 39)
                     jjCheckNAddStates(116, 119);
                  break;
               case 18:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(116, 119);
                  break;
               case 19:
                  if (curChar == 39 && kind > 41)
                     kind = 41;
                  break;
               case 21:
                  if (curChar == 10)
                     jjCheckNAddStates(116, 119);
                  break;
               case 23:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(116, 119);
                  break;
               case 24:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(167, 172);
                  break;
               case 25:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(116, 119);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(173, 181);
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(182, 186);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(187, 192);
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(193, 199);
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(200, 207);
                  break;
               case 31:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 32:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(33, 34);
                  break;
               case 33:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 35:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(208, 211);
                  break;
               case 37:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(212, 218);
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(219, 221);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(222, 225);
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(226, 230);
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(231, 236);
                  break;
               case 43:
                  if (curChar == 33)
                     jjCheckNAddStates(113, 115);
                  break;
               case 44:
                  if ((0x3600L & l) != 0L)
                     jjCheckNAddTwoStates(44, 53);
                  break;
               case 54:
                  if (curChar == 32)
                     jjCheckNAdd(53);
                  break;
               case 60:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(58, 59);
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(237, 240);
                  break;
               case 62:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(58, 59);
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(241, 247);
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(248, 250);
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(251, 254);
                  break;
               case 66:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(255, 259);
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(260, 265);
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(266, 269);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(270, 276);
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(277, 279);
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(280, 283);
                  break;
               case 73:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(284, 288);
                  break;
               case 74:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(289, 294);
                  break;
               case 89:
                  if (curChar == 45)
                     jjAddStates(109, 112);
                  break;
               case 91:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddTwoStates(91, 92);
                  break;
               case 93:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddTwoStates(91, 92);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(295, 298);
                  break;
               case 95:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddTwoStates(91, 92);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(299, 305);
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(306, 308);
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(309, 312);
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(313, 317);
                  break;
               case 100:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(318, 323);
                  break;
               case 102:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(324, 326);
                  break;
               case 103:
                  if (curChar == 40 && kind > 83)
                     kind = 83;
                  break;
               case 105:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(324, 326);
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(327, 331);
                  break;
               case 107:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(324, 326);
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(332, 339);
                  break;
               case 109:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(340, 343);
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(344, 348);
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(349, 354);
                  break;
               case 112:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(355, 361);
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(362, 366);
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(367, 374);
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(375, 378);
                  break;
               case 117:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(379, 383);
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(384, 389);
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(390, 396);
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(397, 400);
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(401, 407);
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(408, 410);
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(411, 414);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(415, 419);
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(420, 425);
                  break;
               case 128:
                  if (curChar == 46)
                     jjCheckNAddStates(87, 108);
                  break;
               case 129:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  jjCheckNAdd(129);
                  break;
               case 130:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(130, 131);
                  break;
               case 131:
                  if (curChar == 37 && kind > 46)
                     kind = 46;
                  break;
               case 132:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(132, 134);
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(135, 137);
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 139);
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(140, 142);
                  break;
               case 143:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(143, 145);
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(146, 148);
                  break;
               case 149:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(149, 151);
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(152, 154);
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(155, 157);
                  break;
               case 158:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(4, 7);
                  break;
               case 168:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(168, 170);
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(171, 172);
                  break;
               case 173:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(173, 175);
                  break;
               case 176:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(176, 178);
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(179, 180);
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(186, 187);
                  break;
               case 187:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(188, 196);
                  break;
               case 188:
                  if (curChar == 46)
                     jjCheckNAdd(189);
                  break;
               case 189:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(189, 190);
                  break;
               case 190:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(191, 193);
                  break;
               case 191:
                  if (curChar == 46)
                     jjCheckNAdd(192);
                  break;
               case 192:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAdd(192);
                  break;
               case 193:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(426, 428);
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAdd(194);
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(195, 191);
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(429, 432);
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(197, 190);
                  break;
               case 198:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(198, 188);
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(0, 3);
                  break;
               case 200:
                  if (curChar == 45)
                     jjCheckNAddTwoStates(201, 212);
                  break;
               case 202:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(202, 203);
                  break;
               case 204:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(202, 203);
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(433, 436);
                  break;
               case 206:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(202, 203);
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(437, 443);
                  break;
               case 208:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(444, 446);
                  break;
               case 209:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(447, 450);
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(451, 455);
                  break;
               case 211:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(456, 461);
                  break;
               case 213:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(462, 465);
                  break;
               case 214:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(466, 472);
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(473, 475);
                  break;
               case 216:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(476, 479);
                  break;
               case 217:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(480, 484);
                  break;
               case 218:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(485, 490);
                  break;
               case 221:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddTwoStates(221, 222);
                  break;
               case 223:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddTwoStates(221, 222);
                  break;
               case 224:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(491, 494);
                  break;
               case 225:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddTwoStates(221, 222);
                  break;
               case 226:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(495, 501);
                  break;
               case 227:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(502, 504);
                  break;
               case 228:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(505, 508);
                  break;
               case 229:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(509, 513);
                  break;
               case 230:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(514, 519);
                  break;
               case 232:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(520, 523);
                  break;
               case 233:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(524, 530);
                  break;
               case 234:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(531, 533);
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(534, 537);
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(538, 542);
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(543, 548);
                  break;
               case 239:
                  if (curChar == 40)
                     jjCheckNAddStates(549, 555);
                  break;
               case 240:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     jjCheckNAddStates(556, 560);
                  break;
               case 241:
                  if ((0x3600L & l) != 0L)
                     jjCheckNAddStates(561, 563);
                  break;
               case 242:
                  if (curChar == 32)
                     jjCheckNAddStates(561, 563);
                  break;
               case 243:
                  if (curChar == 41 && kind > 45)
                     kind = 45;
                  break;
               case 245:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(556, 560);
                  break;
               case 246:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(564, 570);
                  break;
               case 247:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(556, 560);
                  break;
               case 248:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(571, 580);
                  break;
               case 249:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(581, 586);
                  break;
               case 250:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(587, 593);
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(594, 601);
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(602, 610);
                  break;
               case 253:
                  if (curChar == 39)
                     jjCheckNAddStates(611, 614);
                  break;
               case 254:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(611, 614);
                  break;
               case 255:
                  if (curChar == 39)
                     jjCheckNAddStates(561, 563);
                  break;
               case 257:
                  if (curChar == 10)
                     jjCheckNAddStates(611, 614);
                  break;
               case 259:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(611, 614);
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(615, 620);
                  break;
               case 261:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(611, 614);
                  break;
               case 262:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(621, 629);
                  break;
               case 263:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(630, 634);
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(635, 640);
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(641, 647);
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(648, 655);
                  break;
               case 267:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 268:
                  if (curChar == 34)
                     jjCheckNAddStates(656, 659);
                  break;
               case 269:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(656, 659);
                  break;
               case 270:
                  if (curChar == 34)
                     jjCheckNAddStates(561, 563);
                  break;
               case 272:
                  if (curChar == 10)
                     jjCheckNAddStates(656, 659);
                  break;
               case 274:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(656, 659);
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(660, 665);
                  break;
               case 276:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(656, 659);
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(666, 674);
                  break;
               case 278:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(675, 679);
                  break;
               case 279:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(680, 685);
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(686, 692);
                  break;
               case 281:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(693, 700);
                  break;
               case 282:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 283:
                  if ((0x3600L & l) != 0L)
                     jjCheckNAddStates(701, 709);
                  break;
               case 284:
                  if (curChar == 32)
                     jjCheckNAddStates(701, 709);
                  break;
               case 287:
                  if (curChar == 43)
                     jjAddStates(710, 711);
                  break;
               case 288:
                  if (curChar != 63)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjstateSet[jjnewStateCnt++] = 289;
                  break;
               case 289:
                  if (curChar != 63)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(712, 715);
                  break;
               case 290:
                  if (curChar == 63 && kind > 81)
                     kind = 81;
                  break;
               case 291:
               case 306:
               case 310:
               case 313:
               case 316:
                  if (curChar != 63)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAdd(290);
                  break;
               case 292:
                  if (curChar != 63)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(290, 291);
                  break;
               case 293:
                  if (curChar != 63)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(716, 718);
                  break;
               case 294:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjAddStates(719, 724);
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(298);
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) != 0L && kind > 81)
                     kind = 81;
                  break;
               case 299:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAdd(290);
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 307:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 309:
                  if (curChar != 63)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(290, 310);
                  break;
               case 311:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 312:
                  if (curChar != 63)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(725, 727);
                  break;
               case 314:
                  if (curChar != 63)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(290, 313);
                  break;
               case 315:
                  if (curChar != 63)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(728, 731);
                  break;
               case 317:
                  if (curChar != 63)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(290, 316);
                  break;
               case 318:
                  if (curChar != 63)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(732, 734);
                  break;
               case 319:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 320:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(321, 327);
                  break;
               case 321:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 322:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 323:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(735, 738);
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAdd(298);
                  break;
               case 325:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(298, 324);
                  break;
               case 326:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(739, 741);
                  break;
               case 327:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(742, 746);
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(321);
                  break;
               case 329:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(328, 321);
                  break;
               case 330:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(747, 749);
                  break;
               case 331:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(750, 753);
                  break;
               case 333:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  jjCheckNAddStates(8, 86);
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 43)
                     kind = 43;
                  jjCheckNAdd(334);
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(335, 336);
                  break;
               case 336:
                  if (curChar == 46)
                     jjCheckNAdd(129);
                  break;
               case 337:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(337, 131);
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(338, 339);
                  break;
               case 339:
                  if (curChar == 46)
                     jjCheckNAdd(130);
                  break;
               case 340:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(340, 134);
                  break;
               case 341:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(341, 342);
                  break;
               case 342:
                  if (curChar == 46)
                     jjCheckNAdd(132);
                  break;
               case 343:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(343, 137);
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(344, 345);
                  break;
               case 345:
                  if (curChar == 46)
                     jjCheckNAdd(135);
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(346, 139);
                  break;
               case 347:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(347, 348);
                  break;
               case 348:
                  if (curChar == 46)
                     jjCheckNAdd(138);
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(349, 142);
                  break;
               case 350:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(350, 351);
                  break;
               case 351:
                  if (curChar == 46)
                     jjCheckNAdd(140);
                  break;
               case 352:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(352, 145);
                  break;
               case 353:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(353, 354);
                  break;
               case 354:
                  if (curChar == 46)
                     jjCheckNAdd(143);
                  break;
               case 355:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(355, 148);
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(356, 357);
                  break;
               case 357:
                  if (curChar == 46)
                     jjCheckNAdd(146);
                  break;
               case 358:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(358, 151);
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(359, 360);
                  break;
               case 360:
                  if (curChar == 46)
                     jjCheckNAdd(149);
                  break;
               case 361:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(361, 154);
                  break;
               case 362:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(362, 363);
                  break;
               case 363:
                  if (curChar == 46)
                     jjCheckNAdd(152);
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(364, 157);
                  break;
               case 365:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(365, 366);
                  break;
               case 366:
                  if (curChar == 46)
                     jjCheckNAdd(155);
                  break;
               case 367:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(754, 757);
                  break;
               case 368:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(368, 369);
                  break;
               case 369:
                  if (curChar == 46)
                     jjCheckNAdd(158);
                  break;
               case 370:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(370, 170);
                  break;
               case 371:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(371, 372);
                  break;
               case 372:
                  if (curChar == 46)
                     jjCheckNAdd(168);
                  break;
               case 373:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(373, 172);
                  break;
               case 374:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(374, 375);
                  break;
               case 375:
                  if (curChar == 46)
                     jjCheckNAdd(171);
                  break;
               case 376:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(376, 175);
                  break;
               case 377:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(377, 378);
                  break;
               case 378:
                  if (curChar == 46)
                     jjCheckNAdd(173);
                  break;
               case 379:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(379, 178);
                  break;
               case 380:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(380, 381);
                  break;
               case 381:
                  if (curChar == 46)
                     jjCheckNAdd(176);
                  break;
               case 382:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(382, 180);
                  break;
               case 383:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(383, 384);
                  break;
               case 384:
                  if (curChar == 46)
                     jjCheckNAdd(179);
                  break;
               case 385:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(385, 187);
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(386, 387);
                  break;
               case 387:
                  if (curChar == 46)
                     jjCheckNAdd(186);
                  break;
               case 388:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(758, 761);
                  break;
               case 389:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(389, 390);
                  break;
               case 390:
                  if (curChar == 46)
                     jjCheckNAdd(199);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 219:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 82)
                        kind = 82;
                     jjCheckNAddTwoStates(221, 222);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(223, 232);
                  break;
               case 1:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjCheckNAddStates(762, 766);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(767, 770);
                  else if (curChar == 64)
                     jjAddStates(771, 773);
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(774, 776);
                  else if ((0x200000002L & l) != 0L)
                     jjAddStates(777, 778);
                  else if ((0x400000004000L & l) != 0L)
                     jjAddStates(779, 780);
                  else if ((0x800000008000L & l) != 0L)
                     jjAddStates(781, 782);
                  break;
               case 56:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 71)
                        kind = 71;
                     jjCheckNAddTwoStates(58, 59);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(60, 69);
                  break;
               case 391:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 71)
                        kind = 71;
                     jjCheckNAddTwoStates(58, 59);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(60, 61);
                  break;
               case 90:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(324, 326);
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(93, 121);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjCheckNAddTwoStates(91, 92);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(105, 114);
                  break;
               case 3:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 5:
                  if (curChar == 92)
                     jjAddStates(783, 784);
                  break;
               case 7:
                  if (curChar == 92)
                     jjAddStates(785, 786);
                  break;
               case 8:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 9:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(126, 131);
                  break;
               case 11:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(132, 140);
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(141, 145);
                  break;
               case 13:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(146, 151);
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(152, 158);
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(159, 166);
                  break;
               case 18:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(116, 119);
                  break;
               case 20:
                  if (curChar == 92)
                     jjAddStates(787, 788);
                  break;
               case 22:
                  if (curChar == 92)
                     jjAddStates(789, 790);
                  break;
               case 23:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(116, 119);
                  break;
               case 24:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(167, 172);
                  break;
               case 26:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(173, 181);
                  break;
               case 27:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(182, 186);
                  break;
               case 28:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(187, 192);
                  break;
               case 29:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(193, 199);
                  break;
               case 30:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(200, 207);
                  break;
               case 33:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 34:
                  if (curChar == 92)
                     jjAddStates(791, 792);
                  break;
               case 35:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 36:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(208, 211);
                  break;
               case 38:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(212, 218);
                  break;
               case 39:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(219, 221);
                  break;
               case 40:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(222, 225);
                  break;
               case 41:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(226, 230);
                  break;
               case 42:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddStates(231, 236);
                  break;
               case 45:
                  if ((0x10000000100000L & l) != 0L && kind > 57)
                     kind = 57;
                  break;
               case 46:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 55:
                  if (curChar == 64)
                     jjAddStates(771, 773);
                  break;
               case 57:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(58, 59);
                  break;
               case 58:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(58, 59);
                  break;
               case 59:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(60, 61);
                  break;
               case 60:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(58, 59);
                  break;
               case 61:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(237, 240);
                  break;
               case 63:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(241, 247);
                  break;
               case 64:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(248, 250);
                  break;
               case 65:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(251, 254);
                  break;
               case 66:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(255, 259);
                  break;
               case 67:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(260, 265);
                  break;
               case 68:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(60, 69);
                  break;
               case 69:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(266, 269);
                  break;
               case 70:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(270, 276);
                  break;
               case 71:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(277, 279);
                  break;
               case 72:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(280, 283);
                  break;
               case 73:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(284, 288);
                  break;
               case 74:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddStates(289, 294);
                  break;
               case 75:
                  if ((0x800000008000L & l) != 0L)
                     jjAddStates(781, 782);
                  break;
               case 76:
                  if ((0x200000002000000L & l) != 0L && kind > 31)
                     kind = 31;
                  break;
               case 77:
               case 79:
                  if ((0x100000001000L & l) != 0L)
                     jjCheckNAdd(76);
                  break;
               case 78:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 80:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if ((0x400000004000L & l) != 0L)
                     jjAddStates(779, 780);
                  break;
               case 82:
                  if ((0x10000000100000L & l) != 0L && kind > 31)
                     kind = 31;
                  break;
               case 83:
               case 84:
                  if ((0x800000008000L & l) != 0L)
                     jjCheckNAdd(82);
                  break;
               case 85:
                  if ((0x200000002L & l) != 0L)
                     jjAddStates(777, 778);
                  break;
               case 86:
                  if ((0x1000000010L & l) != 0L && kind > 30)
                     kind = 30;
                  break;
               case 87:
               case 88:
                  if ((0x400000004000L & l) != 0L)
                     jjCheckNAdd(86);
                  break;
               case 91:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddTwoStates(91, 92);
                  break;
               case 92:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(93, 94);
                  break;
               case 93:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddTwoStates(91, 92);
                  break;
               case 94:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(295, 298);
                  break;
               case 96:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(299, 305);
                  break;
               case 97:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(306, 308);
                  break;
               case 98:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(309, 312);
                  break;
               case 99:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(313, 317);
                  break;
               case 100:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(318, 323);
                  break;
               case 101:
               case 102:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(324, 326);
                  break;
               case 104:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(105, 106);
                  break;
               case 105:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(324, 326);
                  break;
               case 106:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(327, 331);
                  break;
               case 108:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(332, 339);
                  break;
               case 109:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(340, 343);
                  break;
               case 110:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(344, 348);
                  break;
               case 111:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(349, 354);
                  break;
               case 112:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(355, 361);
                  break;
               case 113:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(105, 114);
                  break;
               case 114:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(362, 366);
                  break;
               case 115:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(367, 374);
                  break;
               case 116:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(375, 378);
                  break;
               case 117:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(379, 383);
                  break;
               case 118:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(384, 389);
                  break;
               case 119:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(390, 396);
                  break;
               case 120:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(93, 121);
                  break;
               case 121:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(397, 400);
                  break;
               case 122:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(401, 407);
                  break;
               case 123:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(408, 410);
                  break;
               case 124:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(411, 414);
                  break;
               case 125:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(415, 419);
                  break;
               case 126:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(420, 425);
                  break;
               case 127:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(762, 766);
                  break;
               case 133:
                  if ((0x10000000100000L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 134:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 136:
                  if ((0x200000002000L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 137:
                  if ((0x200000002000L & l) != 0L)
                     jjCheckNAdd(136);
                  break;
               case 139:
                  if ((0x800000008L & l) != 0L)
                     jjCheckNAdd(136);
                  break;
               case 141:
                  if ((0x800000008L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 142:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 144:
                  if ((0x400000004000L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 145:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 147:
                  if ((0x1000000010L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 148:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 150:
                  if ((0x100000001000000L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 151:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 153:
                  if ((0x200000002000L & l) != 0L && kind > 48)
                     kind = 48;
                  break;
               case 154:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 156:
                  if ((0x100000001000000L & l) != 0L && kind > 49)
                     kind = 49;
                  break;
               case 157:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 159:
                  if ((0x8000000080L & l) != 0L && kind > 50)
                     kind = 50;
                  break;
               case 160:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if ((0x1000000010L & l) != 0L && kind > 50)
                     kind = 50;
                  break;
               case 163:
               case 165:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(162);
                  break;
               case 164:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 166:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 169:
               case 172:
                  if ((0x8000000080000L & l) != 0L && kind > 51)
                     kind = 51;
                  break;
               case 170:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 174:
                  if ((0x400000004000000L & l) != 0L && kind > 52)
                     kind = 52;
                  break;
               case 175:
               case 177:
                  if ((0x10000000100L & l) != 0L)
                     jjCheckNAdd(174);
                  break;
               case 178:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 180:
                  if ((0x1000000010L & l) != 0L)
                     jjAddStates(793, 794);
                  break;
               case 181:
                  if ((0x20000000200L & l) != 0L && kind > 53)
                     kind = 53;
                  break;
               case 182:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if ((0x200000002000L & l) != 0L && kind > 53)
                     kind = 53;
                  break;
               case 184:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 201:
               case 202:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(202, 203);
                  break;
               case 203:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(204, 205);
                  break;
               case 204:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(202, 203);
                  break;
               case 205:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(433, 436);
                  break;
               case 207:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(437, 443);
                  break;
               case 208:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(444, 446);
                  break;
               case 209:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(447, 450);
                  break;
               case 210:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(451, 455);
                  break;
               case 211:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(456, 461);
                  break;
               case 212:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(204, 213);
                  break;
               case 213:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(462, 465);
                  break;
               case 214:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(466, 472);
                  break;
               case 215:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(473, 475);
                  break;
               case 216:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(476, 479);
                  break;
               case 217:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(480, 484);
                  break;
               case 218:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(485, 490);
                  break;
               case 220:
               case 221:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddTwoStates(221, 222);
                  break;
               case 222:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(223, 224);
                  break;
               case 223:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddTwoStates(221, 222);
                  break;
               case 224:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(491, 494);
                  break;
               case 226:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(495, 501);
                  break;
               case 227:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(502, 504);
                  break;
               case 228:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(505, 508);
                  break;
               case 229:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(509, 513);
                  break;
               case 230:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(514, 519);
                  break;
               case 231:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(223, 232);
                  break;
               case 232:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(520, 523);
                  break;
               case 233:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(524, 530);
                  break;
               case 234:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(531, 533);
                  break;
               case 235:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(534, 537);
                  break;
               case 236:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(538, 542);
                  break;
               case 237:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddStates(543, 548);
                  break;
               case 238:
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(774, 776);
                  break;
               case 240:
               case 245:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(556, 560);
                  break;
               case 244:
                  if (curChar == 92)
                     jjAddStates(795, 796);
                  break;
               case 246:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(564, 570);
                  break;
               case 248:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(571, 580);
                  break;
               case 249:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(581, 586);
                  break;
               case 250:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(587, 593);
                  break;
               case 251:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(594, 601);
                  break;
               case 252:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(602, 610);
                  break;
               case 254:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(611, 614);
                  break;
               case 256:
                  if (curChar == 92)
                     jjAddStates(797, 798);
                  break;
               case 258:
                  if (curChar == 92)
                     jjAddStates(799, 800);
                  break;
               case 259:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(611, 614);
                  break;
               case 260:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(615, 620);
                  break;
               case 262:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(621, 629);
                  break;
               case 263:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(630, 634);
                  break;
               case 264:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(635, 640);
                  break;
               case 265:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(641, 647);
                  break;
               case 266:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(648, 655);
                  break;
               case 269:
                  if ((0x7fffffffefffffffL & l) != 0L)
                     jjCheckNAddStates(656, 659);
                  break;
               case 271:
                  if (curChar == 92)
                     jjAddStates(801, 802);
                  break;
               case 273:
                  if (curChar == 92)
                     jjAddStates(803, 804);
                  break;
               case 274:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(656, 659);
                  break;
               case 275:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(660, 665);
                  break;
               case 277:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(666, 674);
                  break;
               case 278:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(675, 679);
                  break;
               case 279:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(680, 685);
                  break;
               case 280:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(686, 692);
                  break;
               case 281:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(693, 700);
                  break;
               case 285:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 286:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 294:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjAddStates(719, 724);
                  break;
               case 295:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 296:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 297:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(298);
                  break;
               case 298:
                  if ((0x7e0000007eL & l) != 0L && kind > 81)
                     kind = 81;
                  break;
               case 299:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 300:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 301:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 302:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 303:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 304:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 305:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 307:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 308:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 311:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 320:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(321, 327);
                  break;
               case 322:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 323:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(735, 738);
                  break;
               case 324:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAdd(298);
                  break;
               case 325:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddTwoStates(298, 324);
                  break;
               case 326:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjCheckNAddStates(739, 741);
                  break;
               case 327:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(742, 746);
                  break;
               case 328:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(321);
                  break;
               case 329:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(328, 321);
                  break;
               case 330:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(747, 749);
                  break;
               case 331:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(750, 753);
                  break;
               case 332:
                  if (curChar == 92)
                     jjCheckNAddStates(767, 770);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 219:
               case 220:
               case 221:
               case 223:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjCheckNAddTwoStates(221, 222);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 32)
                        kind = 32;
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjCheckNAddStates(762, 766);
                  }
                  break;
               case 56:
               case 57:
               case 60:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(58, 59);
                  break;
               case 391:
               case 58:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAddTwoStates(58, 59);
                  break;
               case 90:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjCheckNAddTwoStates(91, 92);
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(324, 326);
                  break;
               case 3:
               case 8:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(120, 123);
                  break;
               case 18:
               case 23:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(116, 119);
                  break;
               case 33:
               case 35:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 91:
               case 93:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddTwoStates(91, 92);
                  break;
               case 101:
               case 102:
               case 105:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(324, 326);
                  break;
               case 127:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(762, 766);
                  break;
               case 201:
               case 202:
               case 204:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(202, 203);
                  break;
               case 240:
               case 245:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(556, 560);
                  break;
               case 254:
               case 259:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(611, 614);
                  break;
               case 269:
               case 274:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(656, 659);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 391 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x10L);
      default :
         return 1;
   }
}
private final int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x10L) != 0L)
            return jjStopAtPos(1, 4);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   199, 200, 201, 212, 158, 161, 164, 167, 334, 335, 336, 337, 338, 339, 131, 340, 
   341, 342, 134, 343, 344, 345, 137, 346, 347, 348, 139, 349, 350, 351, 142, 352, 
   353, 354, 145, 355, 356, 357, 148, 358, 359, 360, 151, 361, 362, 363, 154, 364, 
   365, 366, 157, 367, 368, 369, 161, 164, 167, 370, 371, 372, 170, 373, 374, 375, 
   172, 376, 377, 378, 175, 379, 380, 381, 178, 382, 383, 384, 385, 386, 387, 187, 
   388, 389, 390, 200, 201, 212, 180, 129, 130, 132, 135, 138, 140, 143, 146, 149, 
   152, 155, 158, 168, 171, 173, 176, 179, 186, 199, 219, 220, 231, 90, 101, 113, 
   120, 44, 54, 53, 18, 19, 20, 22, 3, 4, 5, 7, 57, 68, 3, 10, 
   4, 5, 7, 11, 3, 12, 10, 4, 5, 7, 13, 14, 15, 3, 10, 4, 
   5, 7, 3, 12, 10, 4, 5, 7, 3, 12, 10, 4, 5, 7, 13, 3, 
   12, 10, 4, 5, 7, 13, 14, 18, 25, 19, 20, 22, 26, 18, 27, 25, 
   19, 20, 22, 28, 29, 30, 18, 25, 19, 20, 22, 18, 27, 25, 19, 20, 
   22, 18, 27, 25, 19, 20, 22, 28, 18, 27, 25, 19, 20, 22, 28, 29, 
   33, 37, 34, 38, 33, 39, 37, 34, 40, 41, 42, 33, 37, 34, 33, 39, 
   37, 34, 33, 39, 37, 34, 40, 33, 39, 37, 34, 40, 41, 58, 62, 59, 
   63, 58, 64, 62, 59, 65, 66, 67, 58, 62, 59, 58, 64, 62, 59, 58, 
   64, 62, 59, 65, 58, 64, 62, 59, 65, 66, 62, 58, 59, 70, 71, 62, 
   58, 59, 72, 73, 74, 62, 58, 59, 71, 62, 58, 59, 71, 62, 58, 59, 
   72, 71, 62, 58, 59, 72, 73, 91, 95, 92, 96, 91, 97, 95, 92, 98, 
   99, 100, 91, 95, 92, 91, 97, 95, 92, 91, 97, 95, 92, 98, 91, 97, 
   95, 92, 98, 99, 102, 103, 104, 102, 107, 103, 104, 108, 102, 109, 107, 103, 
   104, 110, 111, 112, 102, 107, 103, 104, 102, 109, 107, 103, 104, 102, 109, 107, 
   103, 104, 110, 102, 109, 107, 103, 104, 110, 111, 107, 102, 103, 104, 115, 116, 
   107, 102, 103, 104, 117, 118, 119, 107, 102, 103, 104, 116, 107, 102, 103, 104, 
   116, 107, 102, 103, 104, 117, 116, 107, 102, 103, 104, 117, 118, 95, 91, 92, 
   122, 123, 95, 91, 92, 124, 125, 126, 95, 91, 92, 123, 95, 91, 92, 123, 
   95, 91, 92, 124, 123, 95, 91, 92, 124, 125, 194, 195, 191, 197, 198, 188, 
   190, 202, 206, 203, 207, 202, 208, 206, 203, 209, 210, 211, 202, 206, 203, 202, 
   208, 206, 203, 202, 208, 206, 203, 209, 202, 208, 206, 203, 209, 210, 206, 202, 
   203, 214, 215, 206, 202, 203, 216, 217, 218, 206, 202, 203, 215, 206, 202, 203, 
   215, 206, 202, 203, 216, 215, 206, 202, 203, 216, 217, 221, 225, 222, 226, 221, 
   227, 225, 222, 228, 229, 230, 221, 225, 222, 221, 227, 225, 222, 221, 227, 225, 
   222, 228, 221, 227, 225, 222, 228, 229, 225, 221, 222, 233, 234, 225, 221, 222, 
   235, 236, 237, 225, 221, 222, 234, 225, 221, 222, 234, 225, 221, 222, 235, 234, 
   225, 221, 222, 235, 236, 240, 253, 268, 243, 244, 283, 284, 240, 241, 242, 243, 
   244, 241, 242, 243, 240, 247, 241, 242, 243, 244, 248, 240, 249, 247, 241, 242, 
   243, 244, 250, 251, 252, 240, 247, 241, 242, 243, 244, 240, 249, 247, 241, 242, 
   243, 244, 240, 249, 247, 241, 242, 243, 244, 250, 240, 249, 247, 241, 242, 243, 
   244, 250, 251, 254, 255, 256, 258, 254, 261, 255, 256, 258, 262, 254, 263, 261, 
   255, 256, 258, 264, 265, 266, 254, 261, 255, 256, 258, 254, 263, 261, 255, 256, 
   258, 254, 263, 261, 255, 256, 258, 264, 254, 263, 261, 255, 256, 258, 264, 265, 
   269, 270, 271, 273, 269, 276, 270, 271, 273, 277, 269, 278, 276, 270, 271, 273, 
   279, 280, 281, 269, 276, 270, 271, 273, 269, 278, 276, 270, 271, 273, 269, 278, 
   276, 270, 271, 273, 279, 269, 278, 276, 270, 271, 273, 279, 280, 240, 253, 268, 
   241, 242, 243, 244, 283, 284, 288, 294, 290, 291, 292, 293, 290, 291, 292, 295, 
   299, 303, 307, 311, 315, 290, 313, 314, 290, 316, 317, 318, 290, 316, 317, 298, 
   324, 325, 326, 298, 324, 325, 328, 321, 329, 330, 331, 328, 321, 329, 328, 321, 
   329, 330, 367, 161, 164, 167, 388, 200, 201, 212, 91, 102, 103, 104, 92, 93, 
   121, 105, 114, 56, 57, 68, 286, 287, 319, 87, 88, 83, 84, 78, 80, 16, 
   6, 8, 9, 31, 21, 23, 24, 35, 36, 182, 185, 245, 246, 267, 257, 259, 
   260, 282, 272, 274, 275, 
};
public static final String[] jjstrLiteralImages = {
"", "\40", null, null, null, null, "\74\41\55\55", "\55\55\76", "\173", 
"\175", "\174\75", "\176\75", "\136\75", "\44\75", "\52\75", "\176", "\75", "\53", 
"\55", "\54", "\73", "\76", "\57", "\133", "\135", "\52", "\56", "\51", "\50", "\72", 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, "\72\72", };
public static final String[] lexStateNames = {
   "DEFAULT", 
   "IN_COMMENT", 
};
public static final int[] jjnewLexState = {
   -1, -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffffee01ffffffc7L, 0x1e00ffL, 
};
static final long[] jjtoSkip = {
   0x10L, 0x0L, 
};
static final long[] jjtoMore = {
   0x28L, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[391];
private final int[] jjstateSet = new int[782];
StringBuffer image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public CssParserTokenManager(SimpleCharStream stream)
{
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public CssParserTokenManager(SimpleCharStream stream, int lexState)
{
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 391; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 5)
         {
            jjmatchedKind = 5;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 2 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
           image = CssParser.SPACE;
         break;
      default : 
         break;
   }
}
}
