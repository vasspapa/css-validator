/* Generated By:JavaCC: Do not edit this line. CssParserTokenManager.java */
package org.w3c.css.parser.analyzer;
import java.io.InputStream;
import java.util.Vector;
import java.util.Enumeration;
import java.net.URL;
import org.w3c.css.values.CssValue;
import org.w3c.css.values.CssExpression;
import org.w3c.css.values.CssString;
import org.w3c.css.values.CssURL;
import org.w3c.css.values.CssLength;
import org.w3c.css.values.CssNumber;
import org.w3c.css.values.CssColor;
import org.w3c.css.values.CssIdent;
import org.w3c.css.values.CssPercentage;
import org.w3c.css.values.CssFrequency;
import org.w3c.css.values.CssTime;
import org.w3c.css.values.CssDate;
import org.w3c.css.values.CssAngle;
import org.w3c.css.values.CssFunction;
import org.w3c.css.values.CssUnicodeRange;
import org.w3c.css.values.CssResolution;
import org.w3c.css.properties.CssProperty;
import org.w3c.css.parser.Frame;
import org.w3c.css.util.ApplContext;
import org.w3c.css.parser.CssError;
import org.w3c.css.parser.CssSelectors;
import org.w3c.css.parser.CssParseException;
import org.w3c.css.parser.AtRule;
import org.w3c.css.parser.AtRuleMedia;
import org.w3c.css.parser.AtRuleFontFace;
import org.w3c.css.parser.AtRulePage;
import org.w3c.css.parser.AtRulePreference;
import org.w3c.css.parser.AtRulePhoneticAlphabet;
import org.w3c.css.svgproperties.AtRuleColorProfile;
import org.w3c.css.util.InvalidParamException;
import org.w3c.css.util.Util;
import org.w3c.css.util.Messages;
import org.w3c.css.css.StyleSheetCom;

public class CssParserTokenManager implements CssParserConstants
{
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x2000000L) != 0L)
            return 362;
         if ((active0 & 0xfe00000000000000L) != 0L || (active1 & 0x3fL) != 0L)
            return 55;
         return -1;
      case 1:
         if ((active0 & 0xfe00000000000000L) != 0L || (active1 & 0x3fL) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 1;
            return 363;
         }
         return -1;
      case 2:
         if ((active0 & 0xfe00000000000000L) != 0L || (active1 & 0x3fL) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 2;
            return 363;
         }
         return -1;
      case 3:
         if ((active1 & 0x1L) != 0L)
            return 363;
         if ((active0 & 0xfe00000000000000L) != 0L || (active1 & 0x3eL) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 3;
            return 363;
         }
         return -1;
      case 4:
         if ((active0 & 0xf600000000000000L) != 0L || (active1 & 0x36L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 4;
            return 363;
         }
         if ((active0 & 0x800000000000000L) != 0L || (active1 & 0x8L) != 0L)
            return 363;
         return -1;
      case 5:
         if ((active0 & 0x400000000000000L) != 0L || (active1 & 0x2L) != 0L)
            return 363;
         if ((active0 & 0xf200000000000000L) != 0L || (active1 & 0x34L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 5;
            return 363;
         }
         return -1;
      case 6:
         if ((active0 & 0x200000000000000L) != 0L || (active1 & 0x4L) != 0L)
            return 363;
         if ((active0 & 0xf000000000000000L) != 0L || (active1 & 0x30L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 6;
            return 363;
         }
         return -1;
      case 7:
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0x10L) != 0L)
            return 363;
         if ((active0 & 0x7000000000000000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 7;
            return 363;
         }
         return -1;
      case 8:
         if ((active0 & 0x7000000000000000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 8;
            return 363;
         }
         return -1;
      case 9:
         if ((active0 & 0x1000000000000000L) != 0L)
            return 363;
         if ((active0 & 0x6000000000000000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 9;
            return 363;
         }
         return -1;
      case 10:
         if ((active0 & 0x2000000000000000L) != 0L)
            return 363;
         if ((active0 & 0x4000000000000000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 10;
            return 363;
         }
         return -1;
      case 11:
         if ((active0 & 0x4000000000000000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 11;
            return 363;
         }
         return -1;
      case 12:
         if ((active0 & 0x4000000000000000L) != 0L || (active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 12;
            return 363;
         }
         return -1;
      case 13:
         if ((active0 & 0x4000000000000000L) != 0L)
            return 363;
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 13;
            return 363;
         }
         return -1;
      case 14:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 14;
            return 363;
         }
         return -1;
      case 15:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 15;
            return 363;
         }
         return -1;
      case 16:
         if ((active1 & 0x20L) != 0L)
         {
            jjmatchedKind = 70;
            jjmatchedPos = 16;
            return 363;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x1000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 27);
      case 41:
         return jjStopAtPos(0, 26);
      case 42:
         jjmatchedKind = 24;
         return jjMoveStringLiteralDfa1_0(0x2000L, 0x0L);
      case 43:
         return jjStopAtPos(0, 16);
      case 44:
         return jjStopAtPos(0, 18);
      case 45:
         jjmatchedKind = 17;
         return jjMoveStringLiteralDfa1_0(0x40L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 25, 362);
      case 47:
         jjmatchedKind = 21;
         return jjMoveStringLiteralDfa1_0(0x4L, 0x0L);
      case 58:
         jjmatchedKind = 28;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x80000L);
      case 59:
         return jjStopAtPos(0, 19);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x20L, 0x0L);
      case 61:
         return jjStopAtPos(0, 15);
      case 62:
         return jjStopAtPos(0, 20);
      case 64:
         return jjMoveStringLiteralDfa1_0(0xfe00000000000000L, 0x3fL);
      case 91:
         return jjStopAtPos(0, 22);
      case 93:
         return jjStopAtPos(0, 23);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x800L, 0x0L);
      case 123:
         return jjStopAtPos(0, 7);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x200L, 0x0L);
      case 125:
         return jjStopAtPos(0, 8);
      case 126:
         jjmatchedKind = 14;
         return jjMoveStringLiteralDfa1_0(0x400L, 0x0L);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x20L, active1, 0L);
      case 42:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(1, 2);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x40L, active1, 0L);
      case 58:
         if ((active1 & 0x80000L) != 0L)
            return jjStopAtPos(1, 83);
         break;
      case 61:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(1, 9);
         else if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(1, 10);
         else if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(1, 11);
         else if ((active0 & 0x1000L) != 0L)
            return jjStopAtPos(1, 12);
         else if ((active0 & 0x2000L) != 0L)
            return jjStopAtPos(1, 13);
         break;
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0xc000000000000000L, active1, 0x10L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x8L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x2800000000000000L, active1, 0x20L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x2L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x20L, active1, 0L);
      case 62:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(2, 6);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L, active1, 0x8L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000000000L, active1, 0x20L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x2L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x5000000000000000L, active1, 0x15L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x20L) != 0L)
            return jjStopAtPos(3, 5);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x8L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000000000L, active1, 0x2L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x20L);
      case 80:
      case 112:
         if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(3, 64, 363);
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L, active1, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private final int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 59, 363);
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000000L, active1, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x2L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x30L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x4200000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active1 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(4, 67, 363);
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000000000000L, active1, 0x4L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private final int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, 0x1000000000000000L, active1, 0L);
      case 65:
      case 97:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 58, 363);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000000L, active1, 0x20L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x4L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x4200000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0x8000000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active1 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(5, 65, 363);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x10L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private final int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active0, 0x4000000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0x8000000000000000L, active1, 0x10L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0x1000000000000000L, active1, 0L);
      case 77:
      case 109:
         if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_0(6, 66, 363);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0x2000000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 57, 363);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private final int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0x1000000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active0, 0x2000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x20L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active0, 0x4000000000000000L, active1, 0L);
      case 82:
      case 114:
         if ((active1 & 0x10L) != 0L)
            return jjStartNfaWithStates_0(7, 68, 363);
         break;
      case 84:
      case 116:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 63, 363);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private final int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x1000000000000000L, active1, 0x20L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active0, 0x2000000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active0, 0x4000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
private final int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, active1);
      return 9;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x20L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active0, 0x2000000000000000L, active1, 0L);
      case 69:
      case 101:
         if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 60, 363);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active0, 0x4000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, active1);
}
private final int jjMoveStringLiteralDfa10_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(8, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, active1);
      return 10;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x20L);
      case 69:
      case 101:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(10, 61, 363);
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active0, 0x4000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, active1);
}
private final int jjMoveStringLiteralDfa11_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(9, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, active1);
      return 11;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active0, 0x4000000000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, active1);
}
private final int jjMoveStringLiteralDfa12_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(10, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, active1);
      return 12;
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa13_0(active0, 0x4000000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, active1);
}
private final int jjMoveStringLiteralDfa13_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(11, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, active1);
      return 13;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(13, 62, 363);
         break;
      case 72:
      case 104:
         return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(12, active0, active1);
}
private final int jjMoveStringLiteralDfa14_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(12, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(13, 0L, active1);
      return 14;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa15_0(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(13, 0L, active1);
}
private final int jjMoveStringLiteralDfa15_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(13, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(14, 0L, active1);
      return 15;
   }
   switch(curChar)
   {
      case 66:
      case 98:
         return jjMoveStringLiteralDfa16_0(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(14, 0L, active1);
}
private final int jjMoveStringLiteralDfa16_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(14, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(15, 0L, active1);
      return 16;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         return jjMoveStringLiteralDfa17_0(active1, 0x20L);
      default :
         break;
   }
   return jjStartNfa_0(15, 0L, active1);
}
private final int jjMoveStringLiteralDfa17_0(long old1, long active1)
{
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(15, 0L, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(16, 0L, active1);
      return 17;
   }
   switch(curChar)
   {
      case 84:
      case 116:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(17, 69, 363);
         break;
      default :
         break;
   }
   return jjStartNfa_0(16, 0L, active1);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 362;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjCheckNAddStates(0, 77);
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 46)
                     jjCheckNAddStates(78, 96);
                  else if (curChar == 33)
                     jjCheckNAddTwoStates(44, 53);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(33, 34);
                  else if (curChar == 39)
                     jjCheckNAddStates(97, 100);
                  else if (curChar == 34)
                     jjCheckNAddStates(101, 104);
                  break;
               case 363:
               case 56:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 362:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(105, 107);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(167, 168);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(160, 161);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(157, 159);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(154, 156);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(152, 153);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(149, 151);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(108, 111);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(136, 138);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(133, 135);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(130, 132);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(127, 129);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(124, 126);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(121, 123);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(119, 120);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(116, 118);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(113, 115);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(111, 112);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 42)
                        kind = 42;
                     jjCheckNAdd(110);
                  }
                  break;
               case 0:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if (curChar == 34)
                     jjCheckNAddStates(101, 104);
                  break;
               case 3:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(101, 104);
                  break;
               case 4:
                  if (curChar == 34 && kind > 40)
                     kind = 40;
                  break;
               case 6:
                  if (curChar == 10)
                     jjCheckNAddStates(101, 104);
                  break;
               case 8:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(101, 104);
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(112, 117);
                  break;
               case 10:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(101, 104);
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(118, 126);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(127, 131);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(132, 137);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(138, 144);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(145, 152);
                  break;
               case 16:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 17:
                  if (curChar == 39)
                     jjCheckNAddStates(97, 100);
                  break;
               case 18:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(97, 100);
                  break;
               case 19:
                  if (curChar == 39 && kind > 40)
                     kind = 40;
                  break;
               case 21:
                  if (curChar == 10)
                     jjCheckNAddStates(97, 100);
                  break;
               case 23:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(97, 100);
                  break;
               case 24:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(153, 158);
                  break;
               case 25:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(97, 100);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(159, 167);
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(168, 172);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(173, 178);
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(179, 185);
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(186, 193);
                  break;
               case 31:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 32:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(33, 34);
                  break;
               case 33:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 35:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(194, 197);
                  break;
               case 37:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(198, 204);
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(205, 207);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(208, 211);
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(212, 216);
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(217, 222);
                  break;
               case 43:
                  if (curChar == 33)
                     jjCheckNAddTwoStates(44, 53);
                  break;
               case 44:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(44, 53);
                  break;
               case 58:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(223, 226);
                  break;
               case 60:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(227, 233);
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(234, 236);
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(237, 240);
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(241, 245);
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(246, 251);
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(252, 255);
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(256, 262);
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(263, 265);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(266, 269);
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(270, 274);
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(275, 280);
                  break;
               case 88:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(88, 89);
                  break;
               case 90:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(88, 89);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(281, 284);
                  break;
               case 92:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(88, 89);
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(285, 291);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(292, 294);
                  break;
               case 95:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(295, 298);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(299, 303);
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(304, 309);
                  break;
               case 98:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(310, 312);
                  break;
               case 99:
                  if (curChar == 40 && kind > 81)
                     kind = 81;
                  break;
               case 101:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(310, 312);
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(313, 317);
                  break;
               case 103:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(310, 312);
                  break;
               case 104:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(318, 325);
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(326, 329);
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(330, 334);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(335, 340);
                  break;
               case 108:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(341, 347);
                  break;
               case 109:
                  if (curChar == 46)
                     jjCheckNAddStates(78, 96);
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAdd(110);
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(111, 112);
                  break;
               case 112:
                  if (curChar == 37 && kind > 45)
                     kind = 45;
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(113, 115);
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(116, 118);
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(119, 120);
                  break;
               case 121:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(121, 123);
                  break;
               case 124:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(124, 126);
                  break;
               case 127:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(127, 129);
                  break;
               case 130:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(130, 132);
                  break;
               case 133:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(133, 135);
                  break;
               case 136:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(136, 138);
                  break;
               case 139:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(108, 111);
                  break;
               case 149:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(149, 151);
                  break;
               case 152:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(152, 153);
                  break;
               case 154:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(154, 156);
                  break;
               case 157:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(157, 159);
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(160, 161);
                  break;
               case 167:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(167, 168);
                  break;
               case 168:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(169, 177);
                  break;
               case 169:
                  if (curChar == 46)
                     jjCheckNAdd(170);
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(170, 171);
                  break;
               case 171:
                  if (curChar == 47)
                     jjCheckNAddTwoStates(172, 174);
                  break;
               case 172:
                  if (curChar == 46)
                     jjCheckNAdd(173);
                  break;
               case 173:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(173);
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAddStates(348, 350);
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(175);
                  break;
               case 176:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(176, 172);
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(351, 354);
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(178, 171);
                  break;
               case 179:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(179, 169);
                  break;
               case 180:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(105, 107);
                  break;
               case 182:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(182, 183);
                  break;
               case 184:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(182, 183);
                  break;
               case 185:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(355, 358);
                  break;
               case 186:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(182, 183);
                  break;
               case 187:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(359, 365);
                  break;
               case 188:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(366, 368);
                  break;
               case 189:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(369, 372);
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(373, 377);
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(378, 383);
                  break;
               case 193:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(384, 387);
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(388, 394);
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(395, 397);
                  break;
               case 196:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(398, 401);
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(402, 406);
                  break;
               case 198:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(407, 412);
                  break;
               case 200:
                  if (curChar == 40)
                     jjCheckNAddStates(413, 418);
                  break;
               case 201:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     jjCheckNAddStates(419, 422);
                  break;
               case 202:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(202, 203);
                  break;
               case 203:
                  if (curChar == 41 && kind > 44)
                     kind = 44;
                  break;
               case 205:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(419, 422);
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(423, 427);
                  break;
               case 207:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(419, 422);
                  break;
               case 208:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(428, 435);
                  break;
               case 209:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(436, 439);
                  break;
               case 210:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(440, 444);
                  break;
               case 211:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(445, 450);
                  break;
               case 212:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(451, 457);
                  break;
               case 213:
                  if (curChar == 39)
                     jjCheckNAddStates(458, 461);
                  break;
               case 214:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(458, 461);
                  break;
               case 215:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(202, 203);
                  break;
               case 217:
                  if (curChar == 10)
                     jjCheckNAddStates(458, 461);
                  break;
               case 219:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(458, 461);
                  break;
               case 220:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(462, 467);
                  break;
               case 221:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(458, 461);
                  break;
               case 222:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(468, 476);
                  break;
               case 223:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(477, 481);
                  break;
               case 224:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(482, 487);
                  break;
               case 225:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(488, 494);
                  break;
               case 226:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(495, 502);
                  break;
               case 227:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 228:
                  if (curChar == 34)
                     jjCheckNAddStates(503, 506);
                  break;
               case 229:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(503, 506);
                  break;
               case 230:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(202, 203);
                  break;
               case 232:
                  if (curChar == 10)
                     jjCheckNAddStates(503, 506);
                  break;
               case 234:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(503, 506);
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(507, 512);
                  break;
               case 236:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(503, 506);
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(513, 521);
                  break;
               case 238:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(522, 526);
                  break;
               case 239:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(527, 532);
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(533, 539);
                  break;
               case 241:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(540, 547);
                  break;
               case 242:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 243:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(548, 554);
                  break;
               case 246:
                  if (curChar == 43)
                     jjAddStates(555, 556);
                  break;
               case 247:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 248:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(557, 560);
                  break;
               case 249:
                  if (curChar == 63 && kind > 80)
                     kind = 80;
                  break;
               case 250:
               case 265:
               case 269:
               case 272:
               case 275:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAdd(249);
                  break;
               case 251:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(249, 250);
                  break;
               case 252:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(561, 563);
                  break;
               case 253:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjAddStates(564, 569);
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 255:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(257);
                  break;
               case 257:
                  if ((0x3ff000000000000L & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 258:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 261:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAdd(249);
                  break;
               case 262:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 263:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 268:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(249, 269);
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 271:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(570, 572);
                  break;
               case 273:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(249, 272);
                  break;
               case 274:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(573, 576);
                  break;
               case 276:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(249, 275);
                  break;
               case 277:
                  if (curChar != 63)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(577, 579);
                  break;
               case 278:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 279:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(280, 286);
                  break;
               case 280:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 281:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 282:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(580, 583);
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAdd(257);
                  break;
               case 284:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(257, 283);
                  break;
               case 285:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(584, 586);
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(587, 591);
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(280);
                  break;
               case 288:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(287, 280);
                  break;
               case 289:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(592, 594);
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(595, 598);
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(599, 602);
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(603, 609);
                  break;
               case 294:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(610, 612);
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(613, 616);
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(617, 621);
                  break;
               case 297:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(622, 627);
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(628, 632);
                  break;
               case 299:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(633, 640);
                  break;
               case 300:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(641, 644);
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(645, 649);
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(650, 655);
                  break;
               case 303:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(656, 662);
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAddStates(0, 77);
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 42)
                     kind = 42;
                  jjCheckNAdd(305);
                  break;
               case 306:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(306, 307);
                  break;
               case 307:
                  if (curChar == 46)
                     jjCheckNAdd(110);
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(308, 112);
                  break;
               case 309:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(309, 310);
                  break;
               case 310:
                  if (curChar == 46)
                     jjCheckNAdd(111);
                  break;
               case 311:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(311, 115);
                  break;
               case 312:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(312, 313);
                  break;
               case 313:
                  if (curChar == 46)
                     jjCheckNAdd(113);
                  break;
               case 314:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(314, 118);
                  break;
               case 315:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(315, 316);
                  break;
               case 316:
                  if (curChar == 46)
                     jjCheckNAdd(116);
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(317, 120);
                  break;
               case 318:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(318, 319);
                  break;
               case 319:
                  if (curChar == 46)
                     jjCheckNAdd(119);
                  break;
               case 320:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(320, 123);
                  break;
               case 321:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(321, 322);
                  break;
               case 322:
                  if (curChar == 46)
                     jjCheckNAdd(121);
                  break;
               case 323:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(323, 126);
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(324, 325);
                  break;
               case 325:
                  if (curChar == 46)
                     jjCheckNAdd(124);
                  break;
               case 326:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(326, 129);
                  break;
               case 327:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(327, 328);
                  break;
               case 328:
                  if (curChar == 46)
                     jjCheckNAdd(127);
                  break;
               case 329:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(329, 132);
                  break;
               case 330:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(330, 331);
                  break;
               case 331:
                  if (curChar == 46)
                     jjCheckNAdd(130);
                  break;
               case 332:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(332, 135);
                  break;
               case 333:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(333, 334);
                  break;
               case 334:
                  if (curChar == 46)
                     jjCheckNAdd(133);
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(335, 138);
                  break;
               case 336:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(336, 337);
                  break;
               case 337:
                  if (curChar == 46)
                     jjCheckNAdd(136);
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(663, 666);
                  break;
               case 339:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(339, 340);
                  break;
               case 340:
                  if (curChar == 46)
                     jjCheckNAdd(139);
                  break;
               case 341:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(341, 151);
                  break;
               case 342:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(342, 343);
                  break;
               case 343:
                  if (curChar == 46)
                     jjCheckNAdd(149);
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(344, 153);
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(345, 346);
                  break;
               case 346:
                  if (curChar == 46)
                     jjCheckNAdd(152);
                  break;
               case 347:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(347, 156);
                  break;
               case 348:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(348, 349);
                  break;
               case 349:
                  if (curChar == 46)
                     jjCheckNAdd(154);
                  break;
               case 350:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(350, 159);
                  break;
               case 351:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(351, 352);
                  break;
               case 352:
                  if (curChar == 46)
                     jjCheckNAdd(157);
                  break;
               case 353:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(353, 161);
                  break;
               case 354:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(354, 355);
                  break;
               case 355:
                  if (curChar == 46)
                     jjCheckNAdd(160);
                  break;
               case 356:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(356, 168);
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(357, 358);
                  break;
               case 358:
                  if (curChar == 46)
                     jjCheckNAdd(167);
                  break;
               case 359:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(667, 669);
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(360, 361);
                  break;
               case 361:
                  if (curChar == 46)
                     jjCheckNAdd(180);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 55:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 70)
                        kind = 70;
                     jjCheckNAddTwoStates(56, 57);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(58, 67);
                  break;
               case 1:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddStates(670, 674);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(675, 678);
                  else if (curChar == 64)
                     jjAddStates(679, 680);
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(681, 683);
                  else if ((0x200000002L & l) != 0L)
                     jjAddStates(684, 685);
                  else if ((0x400000004000L & l) != 0L)
                     jjAddStates(686, 687);
                  else if ((0x800000008000L & l) != 0L)
                     jjAddStates(688, 689);
                  break;
               case 363:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 70)
                        kind = 70;
                     jjCheckNAddTwoStates(56, 57);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(58, 59);
                  break;
               case 3:
               case 8:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(101, 104);
                  break;
               case 5:
                  if (curChar == 92)
                     jjAddStates(690, 691);
                  break;
               case 7:
                  if (curChar == 92)
                     jjAddStates(692, 693);
                  break;
               case 9:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(112, 117);
                  break;
               case 11:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(118, 126);
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(127, 131);
                  break;
               case 13:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(132, 137);
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(138, 144);
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(145, 152);
                  break;
               case 18:
               case 23:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(97, 100);
                  break;
               case 20:
                  if (curChar == 92)
                     jjAddStates(694, 695);
                  break;
               case 22:
                  if (curChar == 92)
                     jjAddStates(696, 697);
                  break;
               case 24:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(153, 158);
                  break;
               case 26:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(159, 167);
                  break;
               case 27:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(168, 172);
                  break;
               case 28:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(173, 178);
                  break;
               case 29:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(179, 185);
                  break;
               case 30:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(186, 193);
                  break;
               case 33:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 34:
                  if (curChar == 92)
                     jjAddStates(698, 699);
                  break;
               case 35:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 36:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(194, 197);
                  break;
               case 38:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(198, 204);
                  break;
               case 39:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(205, 207);
                  break;
               case 40:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(208, 211);
                  break;
               case 41:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(212, 216);
                  break;
               case 42:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddStates(217, 222);
                  break;
               case 45:
                  if ((0x10000000100000L & l) != 0L && kind > 56)
                     kind = 56;
                  break;
               case 46:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 64)
                     jjAddStates(679, 680);
                  break;
               case 56:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 57:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(58, 59);
                  break;
               case 58:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 59:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(223, 226);
                  break;
               case 61:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(227, 233);
                  break;
               case 62:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(234, 236);
                  break;
               case 63:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(237, 240);
                  break;
               case 64:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(241, 245);
                  break;
               case 65:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(246, 251);
                  break;
               case 66:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(58, 67);
                  break;
               case 67:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(252, 255);
                  break;
               case 68:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(256, 262);
                  break;
               case 69:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(263, 265);
                  break;
               case 70:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(266, 269);
                  break;
               case 71:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(270, 274);
                  break;
               case 72:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddStates(275, 280);
                  break;
               case 73:
                  if ((0x800000008000L & l) != 0L)
                     jjAddStates(688, 689);
                  break;
               case 74:
                  if ((0x200000002000000L & l) != 0L && kind > 30)
                     kind = 30;
                  break;
               case 75:
               case 77:
                  if ((0x100000001000L & l) != 0L)
                     jjCheckNAdd(74);
                  break;
               case 76:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 78:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if ((0x400000004000L & l) != 0L)
                     jjAddStates(686, 687);
                  break;
               case 80:
                  if ((0x10000000100000L & l) != 0L && kind > 30)
                     kind = 30;
                  break;
               case 81:
               case 82:
                  if ((0x800000008000L & l) != 0L)
                     jjCheckNAdd(80);
                  break;
               case 83:
                  if ((0x200000002L & l) != 0L)
                     jjAddStates(684, 685);
                  break;
               case 84:
                  if ((0x1000000010L & l) != 0L && kind > 29)
                     kind = 29;
                  break;
               case 85:
               case 86:
                  if ((0x400000004000L & l) != 0L)
                     jjCheckNAdd(84);
                  break;
               case 87:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(670, 674);
                  break;
               case 88:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(88, 89);
                  break;
               case 89:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(90, 91);
                  break;
               case 90:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(88, 89);
                  break;
               case 91:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(281, 284);
                  break;
               case 93:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(285, 291);
                  break;
               case 94:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(292, 294);
                  break;
               case 95:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(295, 298);
                  break;
               case 96:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(299, 303);
                  break;
               case 97:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(304, 309);
                  break;
               case 98:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(310, 312);
                  break;
               case 100:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(101, 102);
                  break;
               case 101:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(310, 312);
                  break;
               case 102:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(313, 317);
                  break;
               case 104:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(318, 325);
                  break;
               case 105:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(326, 329);
                  break;
               case 106:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(330, 334);
                  break;
               case 107:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(335, 340);
                  break;
               case 108:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(341, 347);
                  break;
               case 114:
                  if ((0x10000000100000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 115:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 117:
                  if ((0x200000002000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 118:
                  if ((0x200000002000L & l) != 0L)
                     jjCheckNAdd(117);
                  break;
               case 120:
                  if ((0x800000008L & l) != 0L)
                     jjCheckNAdd(117);
                  break;
               case 122:
                  if ((0x800000008L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 123:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 125:
                  if ((0x400000004000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 126:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 128:
                  if ((0x1000000010L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 129:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 131:
                  if ((0x100000001000000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 132:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 134:
                  if ((0x200000002000L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 135:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 137:
                  if ((0x100000001000000L & l) != 0L && kind > 48)
                     kind = 48;
                  break;
               case 138:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 140:
                  if ((0x8000000080L & l) != 0L && kind > 49)
                     kind = 49;
                  break;
               case 141:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if ((0x1000000010L & l) != 0L && kind > 49)
                     kind = 49;
                  break;
               case 144:
               case 146:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(143);
                  break;
               case 145:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 147:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 150:
               case 153:
                  if ((0x8000000080000L & l) != 0L && kind > 50)
                     kind = 50;
                  break;
               case 151:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 155:
                  if ((0x400000004000000L & l) != 0L && kind > 51)
                     kind = 51;
                  break;
               case 156:
               case 158:
                  if ((0x10000000100L & l) != 0L)
                     jjCheckNAdd(155);
                  break;
               case 159:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 161:
                  if ((0x1000000010L & l) != 0L)
                     jjAddStates(700, 701);
                  break;
               case 162:
                  if ((0x20000000200L & l) != 0L && kind > 52)
                     kind = 52;
                  break;
               case 163:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if ((0x200000002000L & l) != 0L && kind > 52)
                     kind = 52;
                  break;
               case 165:
                  if ((0x800000008L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 181:
               case 182:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(182, 183);
                  break;
               case 183:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(184, 185);
                  break;
               case 184:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(182, 183);
                  break;
               case 185:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(355, 358);
                  break;
               case 187:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(359, 365);
                  break;
               case 188:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(366, 368);
                  break;
               case 189:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(369, 372);
                  break;
               case 190:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(373, 377);
                  break;
               case 191:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(378, 383);
                  break;
               case 192:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(184, 193);
                  break;
               case 193:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(384, 387);
                  break;
               case 194:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(388, 394);
                  break;
               case 195:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(395, 397);
                  break;
               case 196:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(398, 401);
                  break;
               case 197:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(402, 406);
                  break;
               case 198:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddStates(407, 412);
                  break;
               case 199:
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(681, 683);
                  break;
               case 201:
               case 205:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(419, 422);
                  break;
               case 204:
                  if (curChar == 92)
                     jjAddStates(702, 703);
                  break;
               case 206:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(423, 427);
                  break;
               case 208:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(428, 435);
                  break;
               case 209:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(436, 439);
                  break;
               case 210:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(440, 444);
                  break;
               case 211:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(445, 450);
                  break;
               case 212:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(451, 457);
                  break;
               case 214:
               case 219:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(458, 461);
                  break;
               case 216:
                  if (curChar == 92)
                     jjAddStates(704, 705);
                  break;
               case 218:
                  if (curChar == 92)
                     jjAddStates(706, 707);
                  break;
               case 220:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(462, 467);
                  break;
               case 222:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(468, 476);
                  break;
               case 223:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(477, 481);
                  break;
               case 224:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(482, 487);
                  break;
               case 225:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(488, 494);
                  break;
               case 226:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(495, 502);
                  break;
               case 229:
               case 234:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(503, 506);
                  break;
               case 231:
                  if (curChar == 92)
                     jjAddStates(708, 709);
                  break;
               case 233:
                  if (curChar == 92)
                     jjAddStates(710, 711);
                  break;
               case 235:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(507, 512);
                  break;
               case 237:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(513, 521);
                  break;
               case 238:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(522, 526);
                  break;
               case 239:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(527, 532);
                  break;
               case 240:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(533, 539);
                  break;
               case 241:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(540, 547);
                  break;
               case 244:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 245:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 253:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjAddStates(564, 569);
                  break;
               case 254:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 255:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 256:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(257);
                  break;
               case 257:
                  if ((0x7e0000007eL & l) != 0L && kind > 80)
                     kind = 80;
                  break;
               case 258:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 259:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 260:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 261:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 262:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 263:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 264:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 266:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 267:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 279:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(280, 286);
                  break;
               case 281:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 282:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(580, 583);
                  break;
               case 283:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAdd(257);
                  break;
               case 284:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddTwoStates(257, 283);
                  break;
               case 285:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjCheckNAddStates(584, 586);
                  break;
               case 286:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(587, 591);
                  break;
               case 287:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(280);
                  break;
               case 288:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(287, 280);
                  break;
               case 289:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(592, 594);
                  break;
               case 290:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(595, 598);
                  break;
               case 291:
                  if (curChar == 92)
                     jjCheckNAddStates(675, 678);
                  break;
               case 292:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(599, 602);
                  break;
               case 293:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(603, 609);
                  break;
               case 294:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(610, 612);
                  break;
               case 295:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(613, 616);
                  break;
               case 296:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(617, 621);
                  break;
               case 297:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(622, 627);
                  break;
               case 298:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(628, 632);
                  break;
               case 299:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(633, 640);
                  break;
               case 300:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(641, 644);
                  break;
               case 301:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(645, 649);
                  break;
               case 302:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(650, 655);
                  break;
               case 303:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(656, 662);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 55:
               case 58:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 31)
                        kind = 31;
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 41)
                        kind = 41;
                     jjCheckNAddStates(670, 674);
                  }
                  break;
               case 363:
               case 56:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 3:
               case 8:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(101, 104);
                  break;
               case 18:
               case 23:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(97, 100);
                  break;
               case 33:
               case 35:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 87:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddStates(670, 674);
                  break;
               case 88:
               case 90:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 41)
                     kind = 41;
                  jjCheckNAddTwoStates(88, 89);
                  break;
               case 98:
               case 101:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(310, 312);
                  break;
               case 181:
               case 182:
               case 184:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  jjCheckNAddTwoStates(182, 183);
                  break;
               case 201:
               case 205:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(419, 422);
                  break;
               case 214:
               case 219:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(458, 461);
                  break;
               case 229:
               case 234:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(503, 506);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 362 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x8L);
      default :
         return 1;
   }
}
private final int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(1, 3);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   305, 306, 307, 308, 309, 310, 112, 311, 312, 313, 115, 314, 315, 316, 118, 317, 
   318, 319, 120, 320, 321, 322, 123, 323, 324, 325, 126, 326, 327, 328, 129, 329, 
   330, 331, 132, 332, 333, 334, 135, 335, 336, 337, 138, 338, 339, 340, 142, 145, 
   148, 341, 342, 343, 151, 344, 345, 346, 153, 347, 348, 349, 156, 350, 351, 352, 
   159, 353, 354, 355, 356, 357, 358, 168, 359, 360, 361, 181, 192, 161, 110, 111, 
   113, 116, 119, 121, 124, 127, 130, 133, 136, 139, 149, 152, 154, 157, 160, 167, 
   180, 18, 19, 20, 22, 3, 4, 5, 7, 180, 181, 192, 139, 142, 145, 148, 
   3, 10, 4, 5, 7, 11, 3, 12, 10, 4, 5, 7, 13, 14, 15, 3, 
   10, 4, 5, 7, 3, 12, 10, 4, 5, 7, 3, 12, 10, 4, 5, 7, 
   13, 3, 12, 10, 4, 5, 7, 13, 14, 18, 25, 19, 20, 22, 26, 18, 
   27, 25, 19, 20, 22, 28, 29, 30, 18, 25, 19, 20, 22, 18, 27, 25, 
   19, 20, 22, 18, 27, 25, 19, 20, 22, 28, 18, 27, 25, 19, 20, 22, 
   28, 29, 33, 37, 34, 38, 33, 39, 37, 34, 40, 41, 42, 33, 37, 34, 
   33, 39, 37, 34, 33, 39, 37, 34, 40, 33, 39, 37, 34, 40, 41, 56, 
   60, 57, 61, 56, 62, 60, 57, 63, 64, 65, 56, 60, 57, 56, 62, 60, 
   57, 56, 62, 60, 57, 63, 56, 62, 60, 57, 63, 64, 60, 56, 57, 68, 
   69, 60, 56, 57, 70, 71, 72, 60, 56, 57, 69, 60, 56, 57, 69, 60, 
   56, 57, 70, 69, 60, 56, 57, 70, 71, 88, 92, 89, 93, 88, 94, 92, 
   89, 95, 96, 97, 88, 92, 89, 88, 94, 92, 89, 88, 94, 92, 89, 95, 
   88, 94, 92, 89, 95, 96, 98, 99, 100, 98, 103, 99, 100, 104, 98, 105, 
   103, 99, 100, 106, 107, 108, 98, 103, 99, 100, 98, 105, 103, 99, 100, 98, 
   105, 103, 99, 100, 106, 98, 105, 103, 99, 100, 106, 107, 175, 176, 172, 178, 
   179, 169, 171, 182, 186, 183, 187, 182, 188, 186, 183, 189, 190, 191, 182, 186, 
   183, 182, 188, 186, 183, 182, 188, 186, 183, 189, 182, 188, 186, 183, 189, 190, 
   186, 182, 183, 194, 195, 186, 182, 183, 196, 197, 198, 186, 182, 183, 195, 186, 
   182, 183, 195, 186, 182, 183, 196, 195, 186, 182, 183, 196, 197, 201, 213, 228, 
   203, 204, 243, 201, 202, 203, 204, 201, 203, 204, 207, 208, 201, 209, 203, 204, 
   207, 210, 211, 212, 201, 203, 204, 207, 201, 209, 203, 204, 207, 201, 209, 203, 
   204, 207, 210, 201, 209, 203, 204, 207, 210, 211, 214, 215, 216, 218, 214, 221, 
   215, 216, 218, 222, 214, 223, 221, 215, 216, 218, 224, 225, 226, 214, 221, 215, 
   216, 218, 214, 223, 221, 215, 216, 218, 214, 223, 221, 215, 216, 218, 224, 214, 
   223, 221, 215, 216, 218, 224, 225, 229, 230, 231, 233, 229, 236, 230, 231, 233, 
   237, 229, 238, 236, 230, 231, 233, 239, 240, 241, 229, 236, 230, 231, 233, 229, 
   238, 236, 230, 231, 233, 229, 238, 236, 230, 231, 233, 239, 229, 238, 236, 230, 
   231, 233, 239, 240, 201, 213, 228, 202, 203, 204, 243, 247, 253, 249, 250, 251, 
   252, 249, 250, 251, 254, 258, 262, 266, 270, 274, 249, 272, 273, 249, 275, 276, 
   277, 249, 275, 276, 257, 283, 284, 285, 257, 283, 284, 287, 280, 288, 289, 290, 
   287, 280, 288, 287, 280, 288, 289, 92, 88, 89, 293, 294, 92, 88, 89, 295, 
   296, 297, 92, 88, 89, 294, 92, 88, 89, 294, 92, 88, 89, 295, 294, 92, 
   88, 89, 295, 296, 103, 98, 99, 100, 299, 300, 103, 98, 99, 100, 301, 302, 
   303, 103, 98, 99, 100, 300, 103, 98, 99, 100, 300, 103, 98, 99, 100, 301, 
   300, 103, 98, 99, 100, 301, 302, 338, 142, 145, 148, 359, 181, 192, 88, 98, 
   99, 100, 89, 90, 292, 101, 298, 55, 66, 245, 246, 278, 85, 86, 81, 82, 
   76, 78, 16, 6, 8, 9, 31, 21, 23, 24, 35, 36, 163, 166, 205, 206, 
   227, 217, 219, 220, 242, 232, 234, 235, 
};
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, "\74\41\55\55", "\55\55\76", "\173", "\175", 
"\174\75", "\176\75", "\136\75", "\44\75", "\52\75", "\176", "\75", "\53", "\55", "\54", 
"\73", "\76", "\57", "\133", "\135", "\52", "\56", "\51", "\50", "\72", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, "\72\72", };
public static final String[] lexStateNames = {
   "DEFAULT", 
   "IN_COMMENT", 
};
public static final int[] jjnewLexState = {
   -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffff700ffffffe3L, 0xf007fL, 
};
static final long[] jjtoSkip = {
   0x8L, 0x0L, 
};
static final long[] jjtoMore = {
   0x14L, 0x0L, 
};
private SimpleCharStream input_stream;
private final int[] jjrounds = new int[362];
private final int[] jjstateSet = new int[724];
StringBuffer image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public CssParserTokenManager(SimpleCharStream stream)
{
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public CssParserTokenManager(SimpleCharStream stream, int lexState)
{
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 362; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

private final Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public final Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos == 0 && jjmatchedKind > 82)
         {
            jjmatchedKind = 82;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 4)
         {
            jjmatchedKind = 4;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

final void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 1 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
           image = CssParser.SPACE;
         break;
      default : 
         break;
   }
}
}
