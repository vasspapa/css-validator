/* Generated By:JavaCC: Do not edit this line. CssParserTokenManager.java */
package org.w3c.css.parser.analyzer;
import java.io.InputStream;
import java.util.Vector;
import java.util.Enumeration;
import java.net.URL;
import org.w3c.css.values.CssValue;
import org.w3c.css.values.CssExpression;
import org.w3c.css.values.CssString;
import org.w3c.css.values.CssURL;
import org.w3c.css.values.CssLength;
import org.w3c.css.values.CssNumber;
import org.w3c.css.values.CssColor;
import org.w3c.css.values.CssIdent;
import org.w3c.css.values.CssPercentage;
import org.w3c.css.values.CssFrequency;
import org.w3c.css.values.CssTime;
import org.w3c.css.values.CssAngle;
import org.w3c.css.values.CssFunction;
import org.w3c.css.values.CssUnicodeRange;
import org.w3c.css.properties.CssProperty;
import org.w3c.css.parser.Frame;
import org.w3c.css.util.ApplContext;
import org.w3c.css.parser.CssError;
import org.w3c.css.parser.CssSelectors;
import org.w3c.css.parser.CssParseException;
import org.w3c.css.parser.AtRule;
import org.w3c.css.parser.AtRuleMedia;
import org.w3c.css.parser.AtRuleFontFace;
import org.w3c.css.parser.AtRulePage;
import org.w3c.css.parser.AtRulePreference;
import org.w3c.css.svgproperties.AtRuleColorProfile;
import org.w3c.css.util.InvalidParamException;
import org.w3c.css.util.Util;
import org.w3c.css.util.Messages;
import org.w3c.css.css.StyleSheetCom;

public class CssParserTokenManager implements CssParserConstants
{
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0xffe0000000000000L) != 0L || (active1 & 0x1L) != 0L)
            return 55;
         if ((active0 & 0x2000000L) != 0L)
            return 322;
         return -1;
      case 1:
         if ((active0 & 0xffe0000000000000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 1;
            return 323;
         }
         return -1;
      case 2:
         if ((active0 & 0xffe0000000000000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 2;
            return 323;
         }
         return -1;
      case 3:
         if ((active0 & 0x1000000000000000L) != 0L)
            return 323;
         if ((active0 & 0xefe0000000000000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 3;
            return 323;
         }
         return -1;
      case 4:
         if ((active0 & 0x8080000000000000L) != 0L)
            return 323;
         if ((active0 & 0x6f60000000000000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 4;
            return 323;
         }
         return -1;
      case 5:
         if ((active0 & 0x2040000000000000L) != 0L)
            return 323;
         if ((active0 & 0x4f20000000000000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 5;
            return 323;
         }
         return -1;
      case 6:
         if ((active0 & 0x4020000000000000L) != 0L)
            return 323;
         if ((active0 & 0xf00000000000000L) != 0L || (active1 & 0x1L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 6;
            return 323;
         }
         return -1;
      case 7:
         if ((active0 & 0x800000000000000L) != 0L || (active1 & 0x1L) != 0L)
            return 323;
         if ((active0 & 0x700000000000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 7;
            return 323;
         }
         return -1;
      case 8:
         if ((active0 & 0x700000000000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 8;
            return 323;
         }
         return -1;
      case 9:
         if ((active0 & 0x100000000000000L) != 0L)
            return 323;
         if ((active0 & 0x600000000000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 9;
            return 323;
         }
         return -1;
      case 10:
         if ((active0 & 0x400000000000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 10;
            return 323;
         }
         if ((active0 & 0x200000000000000L) != 0L)
            return 323;
         return -1;
      case 11:
         if ((active0 & 0x400000000000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 11;
            return 323;
         }
         return -1;
      case 12:
         if ((active0 & 0x400000000000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 12;
            return 323;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 36:
         return jjMoveStringLiteralDfa1_0(0x1000L, 0x0L);
      case 40:
         return jjStopAtPos(0, 27);
      case 41:
         return jjStopAtPos(0, 26);
      case 42:
         jjmatchedKind = 24;
         return jjMoveStringLiteralDfa1_0(0x2000L, 0x0L);
      case 43:
         return jjStopAtPos(0, 16);
      case 44:
         return jjStopAtPos(0, 18);
      case 45:
         jjmatchedKind = 17;
         return jjMoveStringLiteralDfa1_0(0x40L, 0x0L);
      case 46:
         return jjStartNfaWithStates_0(0, 25, 322);
      case 47:
         jjmatchedKind = 21;
         return jjMoveStringLiteralDfa1_0(0x4L, 0x0L);
      case 58:
         jjmatchedKind = 28;
         return jjMoveStringLiteralDfa1_0(0x0L, 0x4000L);
      case 59:
         return jjStopAtPos(0, 19);
      case 60:
         return jjMoveStringLiteralDfa1_0(0x20L, 0x0L);
      case 61:
         return jjStopAtPos(0, 15);
      case 62:
         return jjStopAtPos(0, 20);
      case 64:
         return jjMoveStringLiteralDfa1_0(0xffe0000000000000L, 0x1L);
      case 91:
         return jjStopAtPos(0, 22);
      case 93:
         return jjStopAtPos(0, 23);
      case 94:
         return jjMoveStringLiteralDfa1_0(0x800L, 0x0L);
      case 123:
         return jjStopAtPos(0, 7);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x200L, 0x0L);
      case 125:
         return jjStopAtPos(0, 8);
      case 126:
         jjmatchedKind = 14;
         return jjMoveStringLiteralDfa1_0(0x400L, 0x0L);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         return jjMoveStringLiteralDfa2_0(active0, 0x20L, active1, 0L);
      case 42:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(1, 2);
         break;
      case 45:
         return jjMoveStringLiteralDfa2_0(active0, 0x40L, active1, 0L);
      case 58:
         if ((active1 & 0x4000L) != 0L)
            return jjStopAtPos(1, 78);
         break;
      case 61:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(1, 9);
         else if ((active0 & 0x400L) != 0L)
            return jjStopAtPos(1, 10);
         else if ((active0 & 0x800L) != 0L)
            return jjStopAtPos(1, 11);
         else if ((active0 & 0x1000L) != 0L)
            return jjStopAtPos(1, 12);
         else if ((active0 & 0x2000L) != 0L)
            return jjStopAtPos(1, 13);
         break;
      case 66:
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0x4000000000000000L, active1, 0L);
      case 67:
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0xc00000000000000L, active1, 0x1L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000000000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x40000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa2_0(active0, 0x280000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000000000000L, active1, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa3_0(active0, 0x20L, active1, 0L);
      case 62:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(2, 6);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x8040000000000000L, active1, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000000000000L, active1, 0L);
      case 77:
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x20000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x5500000000000000L, active1, 0x1L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x20L) != 0L)
            return jjStopAtPos(3, 5);
         break;
      case 65:
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000000000L, active1, 0L);
      case 68:
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0x40000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000000000000L, active1, 0L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000000000000L, active1, 0L);
      case 71:
      case 103:
         return jjMoveStringLiteralDfa4_0(active0, 0x2080000000000000L, active1, 0L);
      case 76:
      case 108:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa4_0(active0, 0x100000000000000L, active1, 0L);
      case 80:
      case 112:
         if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 60, 323);
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000000000L, active1, 0L);
      case 84:
      case 116:
         return jjMoveStringLiteralDfa4_0(active0, 0x4000000000000000L, active1, 0L);
      case 85:
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private final int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x80000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 55, 323);
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000000L, active1, 0L);
      case 72:
      case 104:
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000000L, active1, 0L);
      case 73:
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x40000000000000L, active1, 0L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x1L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x420000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x800000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 63, 323);
         return jjMoveStringLiteralDfa5_0(active0, 0x4100000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private final int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa6_0(active0, 0x100000000000000L, active1, 0L);
      case 65:
      case 97:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 54, 323);
         break;
      case 69:
      case 101:
         return jjMoveStringLiteralDfa6_0(active0, 0x200000000000000L, active1, 0L);
      case 79:
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x4000000000000000L, active1, 0L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x420000000000000L, active1, 0L);
      case 83:
      case 115:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 61, 323);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x1L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private final int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 45:
         return jjMoveStringLiteralDfa7_0(active0, 0x400000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa7_0(active0, 0x800000000000000L, active1, 0x1L);
      case 70:
      case 102:
         return jjMoveStringLiteralDfa7_0(active0, 0x100000000000000L, active1, 0L);
      case 77:
      case 109:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 62, 323);
         break;
      case 82:
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0x200000000000000L, active1, 0L);
      case 84:
      case 116:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 53, 323);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private final int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 65:
      case 97:
         return jjMoveStringLiteralDfa8_0(active0, 0x100000000000000L, active1, 0L);
      case 69:
      case 101:
         return jjMoveStringLiteralDfa8_0(active0, 0x200000000000000L, active1, 0L);
      case 80:
      case 112:
         return jjMoveStringLiteralDfa8_0(active0, 0x400000000000000L, active1, 0L);
      case 82:
      case 114:
         if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(7, 64, 323);
         break;
      case 84:
      case 116:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 59, 323);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private final int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa9_0(active0, 0x100000000000000L);
      case 78:
      case 110:
         return jjMoveStringLiteralDfa9_0(active0, 0x200000000000000L);
      case 82:
      case 114:
         return jjMoveStringLiteralDfa9_0(active0, 0x400000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L);
}
private final int jjMoveStringLiteralDfa9_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 67:
      case 99:
         return jjMoveStringLiteralDfa10_0(active0, 0x200000000000000L);
      case 69:
      case 101:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(9, 56, 323);
         break;
      case 79:
      case 111:
         return jjMoveStringLiteralDfa10_0(active0, 0x400000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L);
}
private final int jjMoveStringLiteralDfa10_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(10, 57, 323);
         break;
      case 70:
      case 102:
         return jjMoveStringLiteralDfa11_0(active0, 0x400000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private final int jjMoveStringLiteralDfa11_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 73:
      case 105:
         return jjMoveStringLiteralDfa12_0(active0, 0x400000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private final int jjMoveStringLiteralDfa12_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 76:
      case 108:
         return jjMoveStringLiteralDfa13_0(active0, 0x400000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private final int jjMoveStringLiteralDfa13_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 69:
      case 101:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(13, 58, 323);
         break;
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 322;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 40)
                        kind = 40;
                     jjCheckNAddStates(0, 69);
                  }
                  else if ((0x100003600L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 46)
                     jjCheckNAddStates(70, 86);
                  else if (curChar == 33)
                     jjCheckNAddTwoStates(44, 53);
                  else if (curChar == 35)
                     jjCheckNAddTwoStates(33, 34);
                  else if (curChar == 39)
                     jjCheckNAddStates(87, 90);
                  else if (curChar == 34)
                     jjCheckNAddStates(91, 94);
                  break;
               case 322:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(95, 97);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(143, 145);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(140, 142);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 139);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(135, 137);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(98, 101);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(122, 124);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(119, 121);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(116, 118);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(113, 115);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(110, 112);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(107, 109);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(105, 106);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(102, 104);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(99, 101);
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(97, 98);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 40)
                        kind = 40;
                     jjCheckNAdd(96);
                  }
                  break;
               case 323:
               case 56:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 0:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAdd(0);
                  break;
               case 2:
                  if (curChar == 34)
                     jjCheckNAddStates(91, 94);
                  break;
               case 3:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(91, 94);
                  break;
               case 4:
                  if (curChar == 34 && kind > 38)
                     kind = 38;
                  break;
               case 6:
                  if (curChar == 10)
                     jjCheckNAddStates(91, 94);
                  break;
               case 8:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(91, 94);
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(102, 107);
                  break;
               case 10:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(91, 94);
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(108, 116);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(117, 121);
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(122, 127);
                  break;
               case 14:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(128, 134);
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(135, 142);
                  break;
               case 16:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 17:
                  if (curChar == 39)
                     jjCheckNAddStates(87, 90);
                  break;
               case 18:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(87, 90);
                  break;
               case 19:
                  if (curChar == 39 && kind > 38)
                     kind = 38;
                  break;
               case 21:
                  if (curChar == 10)
                     jjCheckNAddStates(87, 90);
                  break;
               case 23:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(87, 90);
                  break;
               case 24:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(143, 148);
                  break;
               case 25:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(87, 90);
                  break;
               case 26:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(149, 157);
                  break;
               case 27:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(158, 162);
                  break;
               case 28:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(163, 168);
                  break;
               case 29:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(169, 175);
                  break;
               case 30:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(176, 183);
                  break;
               case 31:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 32:
                  if (curChar == 35)
                     jjCheckNAddTwoStates(33, 34);
                  break;
               case 33:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 35:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 36:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddStates(184, 187);
                  break;
               case 37:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 38:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddStates(188, 194);
                  break;
               case 39:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddStates(195, 197);
                  break;
               case 40:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddStates(198, 201);
                  break;
               case 41:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddStates(202, 206);
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddStates(207, 212);
                  break;
               case 43:
                  if (curChar == 33)
                     jjCheckNAddTwoStates(44, 53);
                  break;
               case 44:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(44, 53);
                  break;
               case 58:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(213, 216);
                  break;
               case 60:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 61:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(217, 223);
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(224, 226);
                  break;
               case 63:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(227, 230);
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(231, 235);
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(236, 241);
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(242, 245);
                  break;
               case 68:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(246, 252);
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(253, 255);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(256, 259);
                  break;
               case 71:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(260, 264);
                  break;
               case 72:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(265, 270);
                  break;
               case 74:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 76:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 77:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(271, 274);
                  break;
               case 78:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(275, 281);
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(282, 284);
                  break;
               case 81:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(285, 288);
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(289, 293);
                  break;
               case 83:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(294, 299);
                  break;
               case 84:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(300, 302);
                  break;
               case 85:
                  if (curChar == 40 && kind > 76)
                     kind = 76;
                  break;
               case 87:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(300, 302);
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(303, 307);
                  break;
               case 89:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(300, 302);
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(308, 315);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(316, 319);
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(320, 324);
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(325, 330);
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(331, 337);
                  break;
               case 95:
                  if (curChar == 46)
                     jjCheckNAddStates(70, 86);
                  break;
               case 96:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAdd(96);
                  break;
               case 97:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(97, 98);
                  break;
               case 98:
                  if (curChar == 37 && kind > 43)
                     kind = 43;
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(99, 101);
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(102, 104);
                  break;
               case 105:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(105, 106);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(107, 109);
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(110, 112);
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(113, 115);
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(116, 118);
                  break;
               case 119:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(119, 121);
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(122, 124);
                  break;
               case 125:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(98, 101);
                  break;
               case 135:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(135, 137);
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(138, 139);
                  break;
               case 140:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(140, 142);
                  break;
               case 143:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(143, 145);
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(95, 97);
                  break;
               case 148:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddTwoStates(148, 149);
                  break;
               case 150:
                  if ((0xffffffff00000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddTwoStates(148, 149);
                  break;
               case 151:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(338, 341);
                  break;
               case 152:
                  if ((0x100003600L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddTwoStates(148, 149);
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(342, 348);
                  break;
               case 154:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(349, 351);
                  break;
               case 155:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(352, 355);
                  break;
               case 156:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(356, 360);
                  break;
               case 157:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(361, 366);
                  break;
               case 159:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(367, 370);
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(371, 377);
                  break;
               case 161:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(378, 380);
                  break;
               case 162:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(381, 384);
                  break;
               case 163:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(385, 389);
                  break;
               case 164:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(390, 395);
                  break;
               case 166:
                  if (curChar == 40)
                     jjCheckNAddStates(396, 401);
                  break;
               case 167:
                  if ((0xfffffc7a00000000L & l) != 0L)
                     jjCheckNAddStates(402, 405);
                  break;
               case 168:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddTwoStates(168, 169);
                  break;
               case 169:
                  if (curChar == 41 && kind > 42)
                     kind = 42;
                  break;
               case 171:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(402, 405);
                  break;
               case 172:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(406, 410);
                  break;
               case 173:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(402, 405);
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(411, 418);
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(419, 422);
                  break;
               case 176:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(423, 427);
                  break;
               case 177:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(428, 433);
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(434, 440);
                  break;
               case 179:
                  if (curChar == 39)
                     jjCheckNAddStates(441, 444);
                  break;
               case 180:
                  if ((0xffffff7f00000200L & l) != 0L)
                     jjCheckNAddStates(441, 444);
                  break;
               case 181:
                  if (curChar == 39)
                     jjCheckNAddTwoStates(168, 169);
                  break;
               case 183:
                  if (curChar == 10)
                     jjCheckNAddStates(441, 444);
                  break;
               case 185:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(441, 444);
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(445, 450);
                  break;
               case 187:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(441, 444);
                  break;
               case 188:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(451, 459);
                  break;
               case 189:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(460, 464);
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(465, 470);
                  break;
               case 191:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(471, 477);
                  break;
               case 192:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(478, 485);
                  break;
               case 193:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 194:
                  if (curChar == 34)
                     jjCheckNAddStates(486, 489);
                  break;
               case 195:
                  if ((0xfffffffb00000200L & l) != 0L)
                     jjCheckNAddStates(486, 489);
                  break;
               case 196:
                  if (curChar == 34)
                     jjCheckNAddTwoStates(168, 169);
                  break;
               case 198:
                  if (curChar == 10)
                     jjCheckNAddStates(486, 489);
                  break;
               case 200:
                  if ((0xffffffff00000000L & l) != 0L)
                     jjCheckNAddStates(486, 489);
                  break;
               case 201:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(490, 495);
                  break;
               case 202:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(486, 489);
                  break;
               case 203:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(496, 504);
                  break;
               case 204:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(505, 509);
                  break;
               case 205:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(510, 515);
                  break;
               case 206:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(516, 522);
                  break;
               case 207:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(523, 530);
                  break;
               case 208:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 209:
                  if ((0x100003600L & l) != 0L)
                     jjCheckNAddStates(531, 537);
                  break;
               case 212:
                  if (curChar == 43)
                     jjAddStates(538, 539);
                  break;
               case 213:
                  if (curChar != 63)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 214:
                  if (curChar != 63)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(540, 543);
                  break;
               case 215:
                  if (curChar == 63 && kind > 75)
                     kind = 75;
                  break;
               case 216:
               case 231:
               case 235:
               case 238:
               case 241:
                  if (curChar != 63)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(215);
                  break;
               case 217:
                  if (curChar != 63)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddTwoStates(215, 216);
                  break;
               case 218:
                  if (curChar != 63)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(544, 546);
                  break;
               case 219:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjAddStates(547, 552);
                  break;
               case 220:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 221:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 222:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(223);
                  break;
               case 223:
                  if ((0x3ff000000000000L & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 224:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 225:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 226:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 227:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(215);
                  break;
               case 228:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 229:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 230:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 232:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 233:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 234:
                  if (curChar != 63)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddTwoStates(215, 235);
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 237:
                  if (curChar != 63)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(553, 555);
                  break;
               case 239:
                  if (curChar != 63)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddTwoStates(215, 238);
                  break;
               case 240:
                  if (curChar != 63)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(556, 559);
                  break;
               case 242:
                  if (curChar != 63)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddTwoStates(215, 241);
                  break;
               case 243:
                  if (curChar != 63)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(560, 562);
                  break;
               case 244:
                  if (curChar == 43)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 245:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(246, 252);
                  break;
               case 246:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 247:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 248:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(563, 566);
                  break;
               case 249:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(223);
                  break;
               case 250:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddTwoStates(223, 249);
                  break;
               case 251:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(567, 569);
                  break;
               case 252:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(570, 574);
                  break;
               case 253:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAdd(246);
                  break;
               case 254:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(253, 246);
                  break;
               case 255:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(575, 577);
                  break;
               case 256:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(578, 581);
                  break;
               case 258:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(582, 585);
                  break;
               case 259:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(586, 592);
                  break;
               case 260:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(593, 595);
                  break;
               case 261:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(596, 599);
                  break;
               case 262:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(600, 604);
                  break;
               case 263:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(605, 610);
                  break;
               case 264:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(611, 615);
                  break;
               case 265:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(616, 623);
                  break;
               case 266:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(624, 627);
                  break;
               case 267:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(628, 632);
                  break;
               case 268:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(633, 638);
                  break;
               case 269:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(639, 645);
                  break;
               case 270:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAddStates(0, 69);
                  break;
               case 271:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 40)
                     kind = 40;
                  jjCheckNAdd(271);
                  break;
               case 272:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(272, 273);
                  break;
               case 273:
                  if (curChar == 46)
                     jjCheckNAdd(96);
                  break;
               case 274:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(274, 98);
                  break;
               case 275:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(275, 276);
                  break;
               case 276:
                  if (curChar == 46)
                     jjCheckNAdd(97);
                  break;
               case 277:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(277, 101);
                  break;
               case 278:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(278, 279);
                  break;
               case 279:
                  if (curChar == 46)
                     jjCheckNAdd(99);
                  break;
               case 280:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(280, 104);
                  break;
               case 281:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(281, 282);
                  break;
               case 282:
                  if (curChar == 46)
                     jjCheckNAdd(102);
                  break;
               case 283:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(283, 106);
                  break;
               case 284:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(284, 285);
                  break;
               case 285:
                  if (curChar == 46)
                     jjCheckNAdd(105);
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(286, 109);
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(287, 288);
                  break;
               case 288:
                  if (curChar == 46)
                     jjCheckNAdd(107);
                  break;
               case 289:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(289, 112);
                  break;
               case 290:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(290, 291);
                  break;
               case 291:
                  if (curChar == 46)
                     jjCheckNAdd(110);
                  break;
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(292, 115);
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(293, 294);
                  break;
               case 294:
                  if (curChar == 46)
                     jjCheckNAdd(113);
                  break;
               case 295:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(295, 118);
                  break;
               case 296:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(296, 297);
                  break;
               case 297:
                  if (curChar == 46)
                     jjCheckNAdd(116);
                  break;
               case 298:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(298, 121);
                  break;
               case 299:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(299, 300);
                  break;
               case 300:
                  if (curChar == 46)
                     jjCheckNAdd(119);
                  break;
               case 301:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(301, 124);
                  break;
               case 302:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(302, 303);
                  break;
               case 303:
                  if (curChar == 46)
                     jjCheckNAdd(122);
                  break;
               case 304:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(646, 649);
                  break;
               case 305:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(305, 306);
                  break;
               case 306:
                  if (curChar == 46)
                     jjCheckNAdd(125);
                  break;
               case 307:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(307, 137);
                  break;
               case 308:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(308, 309);
                  break;
               case 309:
                  if (curChar == 46)
                     jjCheckNAdd(135);
                  break;
               case 310:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(310, 139);
                  break;
               case 311:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(311, 312);
                  break;
               case 312:
                  if (curChar == 46)
                     jjCheckNAdd(138);
                  break;
               case 313:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(313, 142);
                  break;
               case 314:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(314, 315);
                  break;
               case 315:
                  if (curChar == 46)
                     jjCheckNAdd(140);
                  break;
               case 316:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(316, 145);
                  break;
               case 317:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(317, 318);
                  break;
               case 318:
                  if (curChar == 46)
                     jjCheckNAdd(143);
                  break;
               case 319:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(650, 652);
                  break;
               case 320:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(320, 321);
                  break;
               case 321:
                  if (curChar == 46)
                     jjCheckNAdd(146);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 55:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     jjCheckNAddTwoStates(56, 57);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(58, 67);
                  break;
               case 1:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 39)
                        kind = 39;
                     jjCheckNAddStates(653, 657);
                  }
                  else if (curChar == 92)
                     jjCheckNAddStates(658, 661);
                  else if (curChar == 64)
                     jjAddStates(662, 663);
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(664, 666);
                  break;
               case 323:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     jjCheckNAddTwoStates(56, 57);
                  }
                  else if (curChar == 92)
                     jjCheckNAddTwoStates(58, 59);
                  break;
               case 3:
               case 8:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(91, 94);
                  break;
               case 5:
                  if (curChar == 92)
                     jjAddStates(667, 668);
                  break;
               case 7:
                  if (curChar == 92)
                     jjAddStates(669, 670);
                  break;
               case 9:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(102, 107);
                  break;
               case 11:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(108, 116);
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(117, 121);
                  break;
               case 13:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(122, 127);
                  break;
               case 14:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(128, 134);
                  break;
               case 15:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(135, 142);
                  break;
               case 18:
               case 23:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(87, 90);
                  break;
               case 20:
                  if (curChar == 92)
                     jjAddStates(671, 672);
                  break;
               case 22:
                  if (curChar == 92)
                     jjAddStates(673, 674);
                  break;
               case 24:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(143, 148);
                  break;
               case 26:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(149, 157);
                  break;
               case 27:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(158, 162);
                  break;
               case 28:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(163, 168);
                  break;
               case 29:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(169, 175);
                  break;
               case 30:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(176, 183);
                  break;
               case 33:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 34:
                  if (curChar == 92)
                     jjAddStates(675, 676);
                  break;
               case 35:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 36:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddStates(184, 187);
                  break;
               case 38:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddStates(188, 194);
                  break;
               case 39:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddStates(195, 197);
                  break;
               case 40:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddStates(198, 201);
                  break;
               case 41:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddStates(202, 206);
                  break;
               case 42:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddStates(207, 212);
                  break;
               case 45:
                  if ((0x10000000100000L & l) != 0L && kind > 52)
                     kind = 52;
                  break;
               case 46:
                  if ((0x400000004000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if ((0x200000002L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if ((0x10000000100000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 48;
                  break;
               case 50:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 64)
                     jjAddStates(662, 663);
                  break;
               case 56:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 57:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(58, 59);
                  break;
               case 58:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 59:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(213, 216);
                  break;
               case 61:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(217, 223);
                  break;
               case 62:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(224, 226);
                  break;
               case 63:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(227, 230);
                  break;
               case 64:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(231, 235);
                  break;
               case 65:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(236, 241);
                  break;
               case 66:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(58, 67);
                  break;
               case 67:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(242, 245);
                  break;
               case 68:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(246, 252);
                  break;
               case 69:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(253, 255);
                  break;
               case 70:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(256, 259);
                  break;
               case 71:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(260, 264);
                  break;
               case 72:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddStates(265, 270);
                  break;
               case 73:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(653, 657);
                  break;
               case 74:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 75:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(76, 77);
                  break;
               case 76:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 77:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(271, 274);
                  break;
               case 79:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(275, 281);
                  break;
               case 80:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(282, 284);
                  break;
               case 81:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(285, 288);
                  break;
               case 82:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(289, 293);
                  break;
               case 83:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(294, 299);
                  break;
               case 84:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(300, 302);
                  break;
               case 86:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(87, 88);
                  break;
               case 87:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(300, 302);
                  break;
               case 88:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(303, 307);
                  break;
               case 90:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(308, 315);
                  break;
               case 91:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(316, 319);
                  break;
               case 92:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(320, 324);
                  break;
               case 93:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(325, 330);
                  break;
               case 94:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(331, 337);
                  break;
               case 100:
                  if ((0x10000000100000L & l) != 0L && kind > 44)
                     kind = 44;
                  break;
               case 101:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 103:
                  if ((0x200000002000L & l) != 0L && kind > 44)
                     kind = 44;
                  break;
               case 104:
                  if ((0x200000002000L & l) != 0L)
                     jjCheckNAdd(103);
                  break;
               case 106:
                  if ((0x800000008L & l) != 0L)
                     jjCheckNAdd(103);
                  break;
               case 108:
                  if ((0x800000008L & l) != 0L && kind > 44)
                     kind = 44;
                  break;
               case 109:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 111:
                  if ((0x400000004000L & l) != 0L && kind > 44)
                     kind = 44;
                  break;
               case 112:
                  if ((0x20000000200L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 114:
                  if ((0x1000000010L & l) != 0L && kind > 44)
                     kind = 44;
                  break;
               case 115:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 117:
                  if ((0x100000001000000L & l) != 0L && kind > 44)
                     kind = 44;
                  break;
               case 118:
                  if ((0x1000000010000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 120:
                  if ((0x200000002000L & l) != 0L && kind > 45)
                     kind = 45;
                  break;
               case 121:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 123:
                  if ((0x100000001000000L & l) != 0L && kind > 46)
                     kind = 46;
                  break;
               case 124:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 126:
                  if ((0x8000000080L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 127:
                  if ((0x2000000020L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if ((0x1000000010L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if ((0x1000000010L & l) != 0L && kind > 47)
                     kind = 47;
                  break;
               case 130:
               case 132:
                  if ((0x200000002L & l) != 0L)
                     jjCheckNAdd(129);
                  break;
               case 131:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 133:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 134:
                  if ((0x8000000080L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 136:
               case 139:
                  if ((0x8000000080000L & l) != 0L && kind > 48)
                     kind = 48;
                  break;
               case 137:
                  if ((0x200000002000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 141:
                  if ((0x400000004000000L & l) != 0L && kind > 49)
                     kind = 49;
                  break;
               case 142:
               case 144:
                  if ((0x10000000100L & l) != 0L)
                     jjCheckNAdd(141);
                  break;
               case 145:
                  if ((0x80000000800L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 147:
               case 148:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddTwoStates(148, 149);
                  break;
               case 149:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(150, 151);
                  break;
               case 150:
                  if ((0x7fffffffffffffffL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddTwoStates(148, 149);
                  break;
               case 151:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(338, 341);
                  break;
               case 153:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(342, 348);
                  break;
               case 154:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(349, 351);
                  break;
               case 155:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(352, 355);
                  break;
               case 156:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(356, 360);
                  break;
               case 157:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(361, 366);
                  break;
               case 158:
                  if (curChar == 92)
                     jjCheckNAddTwoStates(150, 159);
                  break;
               case 159:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(367, 370);
                  break;
               case 160:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(371, 377);
                  break;
               case 161:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(378, 380);
                  break;
               case 162:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(381, 384);
                  break;
               case 163:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(385, 389);
                  break;
               case 164:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddStates(390, 395);
                  break;
               case 165:
                  if ((0x20000000200000L & l) != 0L)
                     jjAddStates(664, 666);
                  break;
               case 167:
               case 171:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(402, 405);
                  break;
               case 170:
                  if (curChar == 92)
                     jjAddStates(677, 678);
                  break;
               case 172:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(406, 410);
                  break;
               case 174:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(411, 418);
                  break;
               case 175:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(419, 422);
                  break;
               case 176:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(423, 427);
                  break;
               case 177:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(428, 433);
                  break;
               case 178:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(434, 440);
                  break;
               case 180:
               case 185:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(441, 444);
                  break;
               case 182:
                  if (curChar == 92)
                     jjAddStates(679, 680);
                  break;
               case 184:
                  if (curChar == 92)
                     jjAddStates(681, 682);
                  break;
               case 186:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(445, 450);
                  break;
               case 188:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(451, 459);
                  break;
               case 189:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(460, 464);
                  break;
               case 190:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(465, 470);
                  break;
               case 191:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(471, 477);
                  break;
               case 192:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(478, 485);
                  break;
               case 195:
               case 200:
                  if ((0x7fffffffffffffffL & l) != 0L)
                     jjCheckNAddStates(486, 489);
                  break;
               case 197:
                  if (curChar == 92)
                     jjAddStates(683, 684);
                  break;
               case 199:
                  if (curChar == 92)
                     jjAddStates(685, 686);
                  break;
               case 201:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(490, 495);
                  break;
               case 203:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(496, 504);
                  break;
               case 204:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(505, 509);
                  break;
               case 205:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(510, 515);
                  break;
               case 206:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(516, 522);
                  break;
               case 207:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(523, 530);
                  break;
               case 210:
                  if ((0x100000001000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 211:
                  if ((0x4000000040000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 219:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjAddStates(547, 552);
                  break;
               case 220:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 221:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 222:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(223);
                  break;
               case 223:
                  if ((0x7e0000007eL & l) != 0L && kind > 75)
                     kind = 75;
                  break;
               case 224:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 225:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 226:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 227:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 228:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 229:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 230:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 232:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 233:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 245:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(246, 252);
                  break;
               case 247:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 248:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(563, 566);
                  break;
               case 249:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAdd(223);
                  break;
               case 250:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddTwoStates(223, 249);
                  break;
               case 251:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjCheckNAddStates(567, 569);
                  break;
               case 252:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(570, 574);
                  break;
               case 253:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAdd(246);
                  break;
               case 254:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(253, 246);
                  break;
               case 255:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(575, 577);
                  break;
               case 256:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(578, 581);
                  break;
               case 257:
                  if (curChar == 92)
                     jjCheckNAddStates(658, 661);
                  break;
               case 258:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(582, 585);
                  break;
               case 259:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(586, 592);
                  break;
               case 260:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(593, 595);
                  break;
               case 261:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(596, 599);
                  break;
               case 262:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(600, 604);
                  break;
               case 263:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(605, 610);
                  break;
               case 264:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(611, 615);
                  break;
               case 265:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(616, 623);
                  break;
               case 266:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(624, 627);
                  break;
               case 267:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(628, 632);
                  break;
               case 268:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(633, 638);
                  break;
               case 269:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddStates(639, 645);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 55:
               case 58:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 29)
                        kind = 29;
                  }
                  if ((jjbitVec0[i2] & l2) != 0L)
                  {
                     if (kind > 39)
                        kind = 39;
                     jjCheckNAddStates(653, 657);
                  }
                  break;
               case 323:
               case 56:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjCheckNAddTwoStates(56, 57);
                  break;
               case 3:
               case 8:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(91, 94);
                  break;
               case 18:
               case 23:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(87, 90);
                  break;
               case 33:
               case 35:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  jjCheckNAddTwoStates(33, 34);
                  break;
               case 73:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddStates(653, 657);
                  break;
               case 74:
               case 76:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAddTwoStates(74, 75);
                  break;
               case 84:
               case 87:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(300, 302);
                  break;
               case 147:
               case 148:
               case 150:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  jjCheckNAddTwoStates(148, 149);
                  break;
               case 167:
               case 171:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(402, 405);
                  break;
               case 180:
               case 185:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(441, 444);
                  break;
               case 195:
               case 200:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjCheckNAddStates(486, 489);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 322 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 42:
         return jjMoveStringLiteralDfa1_1(0x8L);
      default :
         return 1;
   }
}
private final int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      return 1;
   }
   switch(curChar)
   {
      case 47:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(1, 3);
         break;
      default :
         return 2;
   }
   return 2;
}
static final int[] jjnextStates = {
   271, 272, 273, 274, 275, 276, 98, 277, 278, 279, 101, 280, 281, 282, 104, 283, 
   284, 285, 106, 286, 287, 288, 109, 289, 290, 291, 112, 292, 293, 294, 115, 295, 
   296, 297, 118, 298, 299, 300, 121, 301, 302, 303, 124, 304, 305, 306, 128, 131, 
   134, 307, 308, 309, 137, 310, 311, 312, 139, 313, 314, 315, 142, 316, 317, 318, 
   145, 319, 320, 321, 147, 158, 96, 97, 99, 102, 105, 107, 110, 113, 116, 119, 
   122, 125, 135, 138, 140, 143, 146, 18, 19, 20, 22, 3, 4, 5, 7, 146, 
   147, 158, 125, 128, 131, 134, 3, 10, 4, 5, 7, 11, 3, 12, 10, 4, 
   5, 7, 13, 14, 15, 3, 10, 4, 5, 7, 3, 12, 10, 4, 5, 7, 
   3, 12, 10, 4, 5, 7, 13, 3, 12, 10, 4, 5, 7, 13, 14, 18, 
   25, 19, 20, 22, 26, 18, 27, 25, 19, 20, 22, 28, 29, 30, 18, 25, 
   19, 20, 22, 18, 27, 25, 19, 20, 22, 18, 27, 25, 19, 20, 22, 28, 
   18, 27, 25, 19, 20, 22, 28, 29, 33, 37, 34, 38, 33, 39, 37, 34, 
   40, 41, 42, 33, 37, 34, 33, 39, 37, 34, 33, 39, 37, 34, 40, 33, 
   39, 37, 34, 40, 41, 56, 60, 57, 61, 56, 62, 60, 57, 63, 64, 65, 
   56, 60, 57, 56, 62, 60, 57, 56, 62, 60, 57, 63, 56, 62, 60, 57, 
   63, 64, 60, 56, 57, 68, 69, 60, 56, 57, 70, 71, 72, 60, 56, 57, 
   69, 60, 56, 57, 69, 60, 56, 57, 70, 69, 60, 56, 57, 70, 71, 74, 
   78, 75, 79, 74, 80, 78, 75, 81, 82, 83, 74, 78, 75, 74, 80, 78, 
   75, 74, 80, 78, 75, 81, 74, 80, 78, 75, 81, 82, 84, 85, 86, 84, 
   89, 85, 86, 90, 84, 91, 89, 85, 86, 92, 93, 94, 84, 89, 85, 86, 
   84, 91, 89, 85, 86, 84, 91, 89, 85, 86, 92, 84, 91, 89, 85, 86, 
   92, 93, 148, 152, 149, 153, 148, 154, 152, 149, 155, 156, 157, 148, 152, 149, 
   148, 154, 152, 149, 148, 154, 152, 149, 155, 148, 154, 152, 149, 155, 156, 152, 
   148, 149, 160, 161, 152, 148, 149, 162, 163, 164, 152, 148, 149, 161, 152, 148, 
   149, 161, 152, 148, 149, 162, 161, 152, 148, 149, 162, 163, 167, 179, 194, 169, 
   170, 209, 167, 168, 169, 170, 167, 169, 170, 173, 174, 167, 175, 169, 170, 173, 
   176, 177, 178, 167, 169, 170, 173, 167, 175, 169, 170, 173, 167, 175, 169, 170, 
   173, 176, 167, 175, 169, 170, 173, 176, 177, 180, 181, 182, 184, 180, 187, 181, 
   182, 184, 188, 180, 189, 187, 181, 182, 184, 190, 191, 192, 180, 187, 181, 182, 
   184, 180, 189, 187, 181, 182, 184, 180, 189, 187, 181, 182, 184, 190, 180, 189, 
   187, 181, 182, 184, 190, 191, 195, 196, 197, 199, 195, 202, 196, 197, 199, 203, 
   195, 204, 202, 196, 197, 199, 205, 206, 207, 195, 202, 196, 197, 199, 195, 204, 
   202, 196, 197, 199, 195, 204, 202, 196, 197, 199, 205, 195, 204, 202, 196, 197, 
   199, 205, 206, 167, 179, 194, 168, 169, 170, 209, 213, 219, 215, 216, 217, 218, 
   215, 216, 217, 220, 224, 228, 232, 236, 240, 215, 238, 239, 215, 241, 242, 243, 
   215, 241, 242, 223, 249, 250, 251, 223, 249, 250, 253, 246, 254, 255, 256, 253, 
   246, 254, 253, 246, 254, 255, 78, 74, 75, 259, 260, 78, 74, 75, 261, 262, 
   263, 78, 74, 75, 260, 78, 74, 75, 260, 78, 74, 75, 261, 260, 78, 74, 
   75, 261, 262, 89, 84, 85, 86, 265, 266, 89, 84, 85, 86, 267, 268, 269, 
   89, 84, 85, 86, 266, 89, 84, 85, 86, 266, 89, 84, 85, 86, 267, 266, 
   89, 84, 85, 86, 267, 268, 304, 128, 131, 134, 319, 147, 158, 74, 84, 85, 
   86, 75, 76, 258, 87, 264, 55, 66, 211, 212, 244, 16, 6, 8, 9, 31, 
   21, 23, 24, 35, 36, 171, 172, 193, 183, 185, 186, 208, 198, 200, 201, 
};
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, "\74\41\55\55", "\55\55\76", "\173", "\175", 
"\174\75", "\176\75", "\136\75", "\44\75", "\52\75", "\176", "\75", "\53", "\55", "\54", 
"\73", "\76", "\57", "\133", "\135", "\52", "\56", "\51", "\50", "\72", null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, "\72\72", };
public static final String[] lexStateNames = {
   "DEFAULT", 
   "IN_COMMENT", 
};
public static final int[] jjnewLexState = {
   -1, -1, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xfffffdc03fffffe3L, 0x7803L, 
};
static final long[] jjtoSkip = {
   0x8L, 0x0L, 
};
static final long[] jjtoMore = {
   0x14L, 0x0L, 
};
private SimpleCharStream input_stream;
private final int[] jjrounds = new int[322];
private final int[] jjstateSet = new int[644];
StringBuffer image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public CssParserTokenManager(SimpleCharStream stream)
{
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public CssParserTokenManager(SimpleCharStream stream, int lexState)
{
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 322; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 2 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

private final Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public final Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         if (jjmatchedPos == 0 && jjmatchedKind > 77)
         {
            jjmatchedKind = 77;
         }
         break;
       case 1:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         if (jjmatchedPos == 0 && jjmatchedKind > 4)
         {
            jjmatchedKind = 4;
         }
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

final void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 1 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
           image = CssParser.SPACE;
         break;
      default : 
         break;
   }
}
}
